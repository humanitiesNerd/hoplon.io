// Compiled by ClojureScript 0.0-2814 {:elide-asserts true, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2814";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__11000__delegate = function (args){
return console.log.apply(console,(function (){var G__10999 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__10999) : cljs.core.into_array.call(null,G__10999));
})());
};
var G__11000 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11001__i = 0, G__11001__a = new Array(arguments.length -  0);
while (G__11001__i < G__11001__a.length) {G__11001__a[G__11001__i] = arguments[G__11001__i + 0]; ++G__11001__i;}
  args = new cljs.core.IndexedSeq(G__11001__a,0);
} 
return G__11000__delegate.call(this,args);};
G__11000.cljs$lang$maxFixedArity = 0;
G__11000.cljs$lang$applyTo = (function (arglist__11002){
var args = cljs.core.seq(arglist__11002);
return G__11000__delegate(args);
});
G__11000.cljs$core$IFn$_invoke$arity$variadic = G__11000__delegate;
return G__11000;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__11004 = x;
return goog.isString(G__11004);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__11006 = x__$1;
return goog.typeOf(G__11006);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3570__auto__ = ty;
if(cljs.core.truth_(and__3570__auto__)){
return ty.cljs$lang$type;
} else {
return and__3570__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__11008 = obj;
return goog.typeOf(G__11008);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__11010 = Symbol;
return goog.typeOf(G__11010);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4469__auto___11012 = len;
var i_11013 = (0);
while(true){
if((i_11013 < n__4469__auto___11012)){
(new_arr[i_11013] = (arr[i_11013]));

var G__11014 = (i_11013 + (1));
i_11013 = G__11014;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__11015 = (i + (1));
i = G__11015;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__11024__delegate = function (array,i,idxs){
var G__11021 = aget;
var G__11022 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__11023 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__11021,G__11022,G__11023) : cljs.core.apply.call(null,G__11021,G__11022,G__11023));
};
var G__11024 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__11025__i = 0, G__11025__a = new Array(arguments.length -  2);
while (G__11025__i < G__11025__a.length) {G__11025__a[G__11025__i] = arguments[G__11025__i + 2]; ++G__11025__i;}
  idxs = new cljs.core.IndexedSeq(G__11025__a,0);
} 
return G__11024__delegate.call(this,array,i,idxs);};
G__11024.cljs$lang$maxFixedArity = 2;
G__11024.cljs$lang$applyTo = (function (arglist__11026){
var array = cljs.core.first(arglist__11026);
arglist__11026 = cljs.core.next(arglist__11026);
var i = cljs.core.first(arglist__11026);
var idxs = cljs.core.rest(arglist__11026);
return G__11024__delegate(array,i,idxs);
});
G__11024.cljs$core$IFn$_invoke$arity$variadic = G__11024__delegate;
return G__11024;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__11027 = null;
if (arguments.length > 2) {
var G__11028__i = 0, G__11028__a = new Array(arguments.length -  2);
while (G__11028__i < G__11028__a.length) {G__11028__a[G__11028__i] = arguments[G__11028__i + 2]; ++G__11028__i;}
G__11027 = new cljs.core.IndexedSeq(G__11028__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__11027);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__11037__delegate = function (array,idx,idx2,idxv){
var G__11033 = aset;
var G__11034 = (array[idx]);
var G__11035 = idx2;
var G__11036 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__11033,G__11034,G__11035,G__11036) : cljs.core.apply.call(null,G__11033,G__11034,G__11035,G__11036));
};
var G__11037 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__11038__i = 0, G__11038__a = new Array(arguments.length -  3);
while (G__11038__i < G__11038__a.length) {G__11038__a[G__11038__i] = arguments[G__11038__i + 3]; ++G__11038__i;}
  idxv = new cljs.core.IndexedSeq(G__11038__a,0);
} 
return G__11037__delegate.call(this,array,idx,idx2,idxv);};
G__11037.cljs$lang$maxFixedArity = 3;
G__11037.cljs$lang$applyTo = (function (arglist__11039){
var array = cljs.core.first(arglist__11039);
arglist__11039 = cljs.core.next(arglist__11039);
var idx = cljs.core.first(arglist__11039);
arglist__11039 = cljs.core.next(arglist__11039);
var idx2 = cljs.core.first(arglist__11039);
var idxv = cljs.core.rest(arglist__11039);
return G__11037__delegate(array,idx,idx2,idxv);
});
G__11037.cljs$core$IFn$_invoke$arity$variadic = G__11037__delegate;
return G__11037;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__11040 = null;
if (arguments.length > 3) {
var G__11041__i = 0, G__11041__a = new Array(arguments.length -  3);
while (G__11041__i < G__11041__a.length) {G__11041__a[G__11041__i] = arguments[G__11041__i + 3]; ++G__11041__i;}
G__11040 = new cljs.core.IndexedSeq(G__11041__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__11040);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__11047 = (function (a,x){
a.push(x);

return a;
});
var G__11048 = [];
var G__11049 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11047,G__11048,G__11049) : cljs.core.reduce.call(null,G__11047,G__11048,G__11049));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__11050__i = 0, G__11050__a = new Array(arguments.length -  2);
while (G__11050__i < G__11050__a.length) {G__11050__a[G__11050__i] = arguments[G__11050__i + 2]; ++G__11050__i;}
  args = new cljs.core.IndexedSeq(G__11050__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__11051){
var obj = cljs.core.first(arglist__11051);
arglist__11051 = cljs.core.next(arglist__11051);
var s = cljs.core.first(arglist__11051);
var args = cljs.core.rest(arglist__11051);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj11053 = {};
return obj11053;
})();


cljs.core.IFn = (function (){var obj11055 = {};
return obj11055;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11101 = x__4226__auto__;
return goog.typeOf(G__11101);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11103 = x__4226__auto__;
return goog.typeOf(G__11103);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11105 = x__4226__auto__;
return goog.typeOf(G__11105);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11107 = x__4226__auto__;
return goog.typeOf(G__11107);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11109 = x__4226__auto__;
return goog.typeOf(G__11109);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11111 = x__4226__auto__;
return goog.typeOf(G__11111);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11113 = x__4226__auto__;
return goog.typeOf(G__11113);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11115 = x__4226__auto__;
return goog.typeOf(G__11115);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11117 = x__4226__auto__;
return goog.typeOf(G__11117);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11119 = x__4226__auto__;
return goog.typeOf(G__11119);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11121 = x__4226__auto__;
return goog.typeOf(G__11121);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11123 = x__4226__auto__;
return goog.typeOf(G__11123);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11125 = x__4226__auto__;
return goog.typeOf(G__11125);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11127 = x__4226__auto__;
return goog.typeOf(G__11127);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11129 = x__4226__auto__;
return goog.typeOf(G__11129);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11131 = x__4226__auto__;
return goog.typeOf(G__11131);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11133 = x__4226__auto__;
return goog.typeOf(G__11133);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11135 = x__4226__auto__;
return goog.typeOf(G__11135);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11137 = x__4226__auto__;
return goog.typeOf(G__11137);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11139 = x__4226__auto__;
return goog.typeOf(G__11139);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11141 = x__4226__auto__;
return goog.typeOf(G__11141);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._invoke[(function (){var G__11143 = x__4226__auto__;
return goog.typeOf(G__11143);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._invoke["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj11145 = {};
return obj11145;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3570__auto__ = value;
if(and__3570__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3570__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4226__auto__ = (((value == null))?null:value);
return (function (){var or__3582__auto__ = (cljs.core._clone[(function (){var G__11149 = x__4226__auto__;
return goog.typeOf(G__11149);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._clone["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj11151 = {};
return obj11151;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._count[(function (){var G__11155 = x__4226__auto__;
return goog.typeOf(G__11155);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._count["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj11157 = {};
return obj11157;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._empty[(function (){var G__11161 = x__4226__auto__;
return goog.typeOf(G__11161);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._empty["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj11163 = {};
return obj11163;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._conj[(function (){var G__11167 = x__4226__auto__;
return goog.typeOf(G__11167);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._conj["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj11169 = {};
return obj11169;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._nth[(function (){var G__11175 = x__4226__auto__;
return goog.typeOf(G__11175);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._nth["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._nth[(function (){var G__11177 = x__4226__auto__;
return goog.typeOf(G__11177);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._nth["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj11179 = {};
return obj11179;
})();


cljs.core.ISeq = (function (){var obj11181 = {};
return obj11181;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._first[(function (){var G__11185 = x__4226__auto__;
return goog.typeOf(G__11185);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._first["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._rest[(function (){var G__11189 = x__4226__auto__;
return goog.typeOf(G__11189);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._rest["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj11191 = {};
return obj11191;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._next[(function (){var G__11195 = x__4226__auto__;
return goog.typeOf(G__11195);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._next["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj11197 = {};
return obj11197;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._lookup[(function (){var G__11203 = x__4226__auto__;
return goog.typeOf(G__11203);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._lookup["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._lookup[(function (){var G__11205 = x__4226__auto__;
return goog.typeOf(G__11205);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._lookup["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj11207 = {};
return obj11207;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__11211 = x__4226__auto__;
return goog.typeOf(G__11211);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._assoc[(function (){var G__11215 = x__4226__auto__;
return goog.typeOf(G__11215);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._assoc["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj11217 = {};
return obj11217;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._dissoc[(function (){var G__11221 = x__4226__auto__;
return goog.typeOf(G__11221);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj11223 = {};
return obj11223;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._key[(function (){var G__11227 = x__4226__auto__;
return goog.typeOf(G__11227);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._key["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._val[(function (){var G__11231 = x__4226__auto__;
return goog.typeOf(G__11231);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._val["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj11233 = {};
return obj11233;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._disjoin[(function (){var G__11237 = x__4226__auto__;
return goog.typeOf(G__11237);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj11239 = {};
return obj11239;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._peek[(function (){var G__11243 = x__4226__auto__;
return goog.typeOf(G__11243);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._peek["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._pop[(function (){var G__11247 = x__4226__auto__;
return goog.typeOf(G__11247);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._pop["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj11249 = {};
return obj11249;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._assoc_n[(function (){var G__11253 = x__4226__auto__;
return goog.typeOf(G__11253);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj11255 = {};
return obj11255;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._deref[(function (){var G__11259 = x__4226__auto__;
return goog.typeOf(G__11259);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._deref["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj11261 = {};
return obj11261;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._deref_with_timeout[(function (){var G__11265 = x__4226__auto__;
return goog.typeOf(G__11265);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj11267 = {};
return obj11267;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._meta[(function (){var G__11271 = x__4226__auto__;
return goog.typeOf(G__11271);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._meta["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj11273 = {};
return obj11273;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._with_meta[(function (){var G__11277 = x__4226__auto__;
return goog.typeOf(G__11277);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj11279 = {};
return obj11279;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._reduce[(function (){var G__11285 = x__4226__auto__;
return goog.typeOf(G__11285);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._reduce["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._reduce[(function (){var G__11287 = x__4226__auto__;
return goog.typeOf(G__11287);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._reduce["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj11289 = {};
return obj11289;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._kv_reduce[(function (){var G__11293 = x__4226__auto__;
return goog.typeOf(G__11293);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj11295 = {};
return obj11295;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._equiv[(function (){var G__11299 = x__4226__auto__;
return goog.typeOf(G__11299);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._equiv["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj11301 = {};
return obj11301;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._hash[(function (){var G__11305 = x__4226__auto__;
return goog.typeOf(G__11305);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._hash["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj11307 = {};
return obj11307;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._seq[(function (){var G__11311 = x__4226__auto__;
return goog.typeOf(G__11311);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._seq["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj11313 = {};
return obj11313;
})();


cljs.core.IList = (function (){var obj11315 = {};
return obj11315;
})();


cljs.core.IRecord = (function (){var obj11317 = {};
return obj11317;
})();


cljs.core.IReversible = (function (){var obj11319 = {};
return obj11319;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._rseq[(function (){var G__11323 = x__4226__auto__;
return goog.typeOf(G__11323);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._rseq["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj11325 = {};
return obj11325;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._sorted_seq[(function (){var G__11329 = x__4226__auto__;
return goog.typeOf(G__11329);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._sorted_seq_from[(function (){var G__11333 = x__4226__auto__;
return goog.typeOf(G__11333);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._entry_key[(function (){var G__11337 = x__4226__auto__;
return goog.typeOf(G__11337);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._comparator[(function (){var G__11341 = x__4226__auto__;
return goog.typeOf(G__11341);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._comparator["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj11343 = {};
return obj11343;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3570__auto__ = writer;
if(and__3570__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3570__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4226__auto__ = (((writer == null))?null:writer);
return (function (){var or__3582__auto__ = (cljs.core._write[(function (){var G__11347 = x__4226__auto__;
return goog.typeOf(G__11347);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._write["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3570__auto__ = writer;
if(and__3570__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3570__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4226__auto__ = (((writer == null))?null:writer);
return (function (){var or__3582__auto__ = (cljs.core._flush[(function (){var G__11351 = x__4226__auto__;
return goog.typeOf(G__11351);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._flush["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj11353 = {};
return obj11353;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._pr_writer[(function (){var G__11357 = x__4226__auto__;
return goog.typeOf(G__11357);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj11359 = {};
return obj11359;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3570__auto__ = d;
if(and__3570__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3570__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4226__auto__ = (((d == null))?null:d);
return (function (){var or__3582__auto__ = (cljs.core._realized_QMARK_[(function (){var G__11363 = x__4226__auto__;
return goog.typeOf(G__11363);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj11365 = {};
return obj11365;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._notify_watches[(function (){var G__11369 = x__4226__auto__;
return goog.typeOf(G__11369);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._add_watch[(function (){var G__11373 = x__4226__auto__;
return goog.typeOf(G__11373);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3570__auto__ = this$;
if(and__3570__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3570__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4226__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3582__auto__ = (cljs.core._remove_watch[(function (){var G__11377 = x__4226__auto__;
return goog.typeOf(G__11377);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj11379 = {};
return obj11379;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._as_transient[(function (){var G__11383 = x__4226__auto__;
return goog.typeOf(G__11383);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj11385 = {};
return obj11385;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3570__auto__ = tcoll;
if(and__3570__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3570__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4226__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3582__auto__ = (cljs.core._conj_BANG_[(function (){var G__11389 = x__4226__auto__;
return goog.typeOf(G__11389);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3570__auto__ = tcoll;
if(and__3570__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3570__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4226__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3582__auto__ = (cljs.core._persistent_BANG_[(function (){var G__11393 = x__4226__auto__;
return goog.typeOf(G__11393);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj11395 = {};
return obj11395;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3570__auto__ = tcoll;
if(and__3570__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3570__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4226__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3582__auto__ = (cljs.core._assoc_BANG_[(function (){var G__11399 = x__4226__auto__;
return goog.typeOf(G__11399);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj11401 = {};
return obj11401;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3570__auto__ = tcoll;
if(and__3570__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3570__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4226__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3582__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__11405 = x__4226__auto__;
return goog.typeOf(G__11405);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj11407 = {};
return obj11407;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3570__auto__ = tcoll;
if(and__3570__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3570__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4226__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3582__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__11411 = x__4226__auto__;
return goog.typeOf(G__11411);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3570__auto__ = tcoll;
if(and__3570__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3570__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4226__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3582__auto__ = (cljs.core._pop_BANG_[(function (){var G__11415 = x__4226__auto__;
return goog.typeOf(G__11415);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj11417 = {};
return obj11417;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3570__auto__ = tcoll;
if(and__3570__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3570__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4226__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3582__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__11421 = x__4226__auto__;
return goog.typeOf(G__11421);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj11423 = {};
return obj11423;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3570__auto__ = x;
if(and__3570__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3570__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4226__auto__ = (((x == null))?null:x);
return (function (){var or__3582__auto__ = (cljs.core._compare[(function (){var G__11427 = x__4226__auto__;
return goog.typeOf(G__11427);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._compare["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj11429 = {};
return obj11429;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._drop_first[(function (){var G__11433 = x__4226__auto__;
return goog.typeOf(G__11433);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj11435 = {};
return obj11435;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._chunked_first[(function (){var G__11439 = x__4226__auto__;
return goog.typeOf(G__11439);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._chunked_rest[(function (){var G__11443 = x__4226__auto__;
return goog.typeOf(G__11443);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj11445 = {};
return obj11445;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._chunked_next[(function (){var G__11449 = x__4226__auto__;
return goog.typeOf(G__11449);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj11451 = {};
return obj11451;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3570__auto__ = x;
if(and__3570__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3570__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4226__auto__ = (((x == null))?null:x);
return (function (){var or__3582__auto__ = (cljs.core._name[(function (){var G__11455 = x__4226__auto__;
return goog.typeOf(G__11455);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._name["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3570__auto__ = x;
if(and__3570__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3570__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4226__auto__ = (((x == null))?null:x);
return (function (){var or__3582__auto__ = (cljs.core._namespace[(function (){var G__11459 = x__4226__auto__;
return goog.typeOf(G__11459);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._namespace["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj11461 = {};
return obj11461;
})();


cljs.core.IReset = (function (){var obj11463 = {};
return obj11463;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._reset_BANG_[(function (){var G__11467 = x__4226__auto__;
return goog.typeOf(G__11467);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj11469 = {};
return obj11469;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._swap_BANG_[(function (){var G__11479 = x__4226__auto__;
return goog.typeOf(G__11479);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._swap_BANG_[(function (){var G__11481 = x__4226__auto__;
return goog.typeOf(G__11481);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._swap_BANG_[(function (){var G__11483 = x__4226__auto__;
return goog.typeOf(G__11483);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._swap_BANG_[(function (){var G__11485 = x__4226__auto__;
return goog.typeOf(G__11485);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj11487 = {};
return obj11487;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3570__auto__ = o;
if(and__3570__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3570__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4226__auto__ = (((o == null))?null:o);
return (function (){var or__3582__auto__ = (cljs.core._vreset_BANG_[(function (){var G__11491 = x__4226__auto__;
return goog.typeOf(G__11491);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj11493 = {};
return obj11493;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3570__auto__ = coll;
if(and__3570__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3570__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4226__auto__ = (((coll == null))?null:coll);
return (function (){var or__3582__auto__ = (cljs.core._iterator[(function (){var G__11497 = x__4226__auto__;
return goog.typeOf(G__11497);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._iterator["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__11500 = (4294967295);
var G__11501 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11500,G__11501) : Math.imul.call(null,G__11500,G__11501));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__11504 = a;
var G__11505 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11504,G__11505) : Math.imul.call(null,G__11504,G__11505));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__11506 = (i + (2));
var G__11507 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__11506;
h1 = G__11507;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj11509 = {};
return obj11509;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__11510 = (i + (1));
var G__11511 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__11510;
hash = G__11511;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj11515 = {};
return obj11515;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__11518 = o;
if(G__11518){
var bit__4256__auto__ = (G__11518.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4256__auto__) || (G__11518.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__11519 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11519) : Math.floor.call(null,G__11519));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3570__auto__ = cljs.core.not(a.ns);
if(and__3570__auto__){
return b.ns;
} else {
return and__3570__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__11526 = a.ns;
var G__11527 = b.ns;
return goog.array.defaultCompare(G__11526,G__11527);
})();
if(((0) === nsc)){
var G__11528 = a.name;
var G__11529 = b.name;
return goog.array.defaultCompare(G__11528,G__11529);
} else {
return nsc;
}
}
} else {
var G__11530 = a.name;
var G__11531 = b.name;
return goog.array.defaultCompare(G__11530,G__11531);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4003__auto__ = self__._hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__11533 = null;
var G__11533__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__11533__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__11533 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11533__2.call(this,self__,coll);
case 3:
return G__11533__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11533.cljs$core$IFn$_invoke$arity$2 = G__11533__2;
G__11533.cljs$core$IFn$_invoke$arity$3 = G__11533__3;
return G__11533;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args11532){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11532)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__11581 = null;
var G__11581__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__11581__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__11581__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__11581__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__11581__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__11581__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__11581__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__11581__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__11581__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__11581__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__11581__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__11581__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__11581__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__11581__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__11581__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__11581__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__11581__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__11581__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__11581__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__11581__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__11581__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__11581__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11537 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11538 = a;
var G__11539 = b;
var G__11540 = c;
var G__11541 = d;
var G__11542 = e;
var G__11543 = f;
var G__11544 = g;
var G__11545 = h;
var G__11546 = i;
var G__11547 = j;
var G__11548 = k;
var G__11549 = l;
var G__11550 = m;
var G__11551 = n;
var G__11552 = o;
var G__11553 = p;
var G__11554 = q;
var G__11555 = r;
var G__11556 = s;
var G__11557 = t;
var G__11558 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11537,G__11538,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558) : cljs.core.apply.call(null,G__11537,G__11538,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558));
});
G__11581 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11581__1.call(this,self__);
case 2:
return G__11581__2.call(this,self__,a);
case 3:
return G__11581__3.call(this,self__,a,b);
case 4:
return G__11581__4.call(this,self__,a,b,c);
case 5:
return G__11581__5.call(this,self__,a,b,c,d);
case 6:
return G__11581__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11581__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11581__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11581__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11581__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11581__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11581__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11581__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11581__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11581__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11581__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11581__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11581__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11581__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11581__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11581__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11581__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11581.cljs$core$IFn$_invoke$arity$1 = G__11581__1;
G__11581.cljs$core$IFn$_invoke$arity$2 = G__11581__2;
G__11581.cljs$core$IFn$_invoke$arity$3 = G__11581__3;
G__11581.cljs$core$IFn$_invoke$arity$4 = G__11581__4;
G__11581.cljs$core$IFn$_invoke$arity$5 = G__11581__5;
G__11581.cljs$core$IFn$_invoke$arity$6 = G__11581__6;
G__11581.cljs$core$IFn$_invoke$arity$7 = G__11581__7;
G__11581.cljs$core$IFn$_invoke$arity$8 = G__11581__8;
G__11581.cljs$core$IFn$_invoke$arity$9 = G__11581__9;
G__11581.cljs$core$IFn$_invoke$arity$10 = G__11581__10;
G__11581.cljs$core$IFn$_invoke$arity$11 = G__11581__11;
G__11581.cljs$core$IFn$_invoke$arity$12 = G__11581__12;
G__11581.cljs$core$IFn$_invoke$arity$13 = G__11581__13;
G__11581.cljs$core$IFn$_invoke$arity$14 = G__11581__14;
G__11581.cljs$core$IFn$_invoke$arity$15 = G__11581__15;
G__11581.cljs$core$IFn$_invoke$arity$16 = G__11581__16;
G__11581.cljs$core$IFn$_invoke$arity$17 = G__11581__17;
G__11581.cljs$core$IFn$_invoke$arity$18 = G__11581__18;
G__11581.cljs$core$IFn$_invoke$arity$19 = G__11581__19;
G__11581.cljs$core$IFn$_invoke$arity$20 = G__11581__20;
G__11581.cljs$core$IFn$_invoke$arity$21 = G__11581__21;
G__11581.cljs$core$IFn$_invoke$arity$22 = G__11581__22;
return G__11581;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args11536){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11536)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__11559 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11560 = a;
var G__11561 = b;
var G__11562 = c;
var G__11563 = d;
var G__11564 = e;
var G__11565 = f;
var G__11566 = g;
var G__11567 = h;
var G__11568 = i;
var G__11569 = j;
var G__11570 = k;
var G__11571 = l;
var G__11572 = m;
var G__11573 = n;
var G__11574 = o;
var G__11575 = p;
var G__11576 = q;
var G__11577 = r;
var G__11578 = s;
var G__11579 = t;
var G__11580 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578,G__11579,G__11580) : cljs.core.apply.call(null,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578,G__11579,G__11580));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__11583 = x;
if(G__11583){
var bit__4263__auto__ = null;
if(cljs.core.truth_((function (){var or__3582__auto__ = bit__4263__auto__;
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return G__11583.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__11583.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11583);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11583);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__11585 = value;
if(G__11585){
var bit__4263__auto__ = (G__11585.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4263__auto__) || (G__11585.cljs$core$ICloneable$)){
return true;
} else {
if((!G__11585.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11585);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11585);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11587 = coll;
if(G__11587){
var bit__4256__auto__ = (G__11587.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4256__auto__) || (G__11587.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11589 = coll;
if(G__11589){
var bit__4256__auto__ = (G__11589.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4256__auto__) || (G__11589.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__11591 = coll;
if(G__11591){
var bit__4256__auto__ = (G__11591.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4256__auto__) || (G__11591.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11593 = coll;
if(G__11593){
var bit__4256__auto__ = (G__11593.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4256__auto__) || (G__11593.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__11598__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11599 = y;
var G__11600 = cljs.core.first(more);
var G__11601 = cljs.core.next(more);
x = G__11599;
y = G__11600;
more = G__11601;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11598 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11602__i = 0, G__11602__a = new Array(arguments.length -  2);
while (G__11602__i < G__11602__a.length) {G__11602__a[G__11602__i] = arguments[G__11602__i + 2]; ++G__11602__i;}
  more = new cljs.core.IndexedSeq(G__11602__a,0);
} 
return G__11598__delegate.call(this,x,y,more);};
G__11598.cljs$lang$maxFixedArity = 2;
G__11598.cljs$lang$applyTo = (function (arglist__11603){
var x = cljs.core.first(arglist__11603);
arglist__11603 = cljs.core.next(arglist__11603);
var y = cljs.core.first(arglist__11603);
var more = cljs.core.rest(arglist__11603);
return G__11598__delegate(x,y,more);
});
G__11598.cljs$core$IFn$_invoke$arity$variadic = G__11598__delegate;
return G__11598;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__11604 = null;
if (arguments.length > 2) {
var G__11605__i = 0, G__11605__a = new Array(arguments.length -  2);
while (G__11605__i < G__11605__a.length) {G__11605__a[G__11605__i] = arguments[G__11605__i + 2]; ++G__11605__i;}
G__11604 = new cljs.core.IndexedSeq(G__11605__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11604);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__11606 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11606) : cljs.core.es6_iterator_seq.call(null,G__11606));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11607 = (n + (1));
var G__11608 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11609 = cljs.core.next(coll__$1);
n = G__11607;
hash_code = G__11608;
coll__$1 = G__11609;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11610 = (n + (1));
var G__11611 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11612 = cljs.core.next(coll__$1);
n = G__11610;
hash_code = G__11611;
coll__$1 = G__11612;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__11613 = o;
return goog.getUid(G__11613);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__11615 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11615) : cljs.core.deref.call(null,G__11615));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11622 = val;
var G__11623 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11622,G__11623) : f.call(null,G__11622,G__11623));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11628 = nval;
var G__11629 = (n + (1));
val = G__11628;
n = G__11629;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11624 = val__$1;
var G__11625 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11624,G__11625) : f.call(null,G__11624,G__11625));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11630 = nval;
var G__11631 = (n + (1));
val__$1 = G__11630;
n = G__11631;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11626 = val__$1;
var G__11627 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11626,G__11627) : f.call(null,G__11626,G__11627));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11632 = nval;
var G__11633 = (n + (1));
val__$1 = G__11632;
n = G__11633;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11640 = val;
var G__11641 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11640,G__11641) : f.call(null,G__11640,G__11641));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11646 = nval;
var G__11647 = (n + (1));
val = G__11646;
n = G__11647;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11642 = val__$1;
var G__11643 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11642,G__11643) : f.call(null,G__11642,G__11643));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11648 = nval;
var G__11649 = (n + (1));
val__$1 = G__11648;
n = G__11649;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11644 = val__$1;
var G__11645 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11644,G__11645) : f.call(null,G__11644,G__11645));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11650 = nval;
var G__11651 = (n + (1));
val__$1 = G__11650;
n = G__11651;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__11653 = x;
if(G__11653){
var bit__4263__auto__ = (G__11653.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4263__auto__) || (G__11653.cljs$core$ICounted$)){
return true;
} else {
if((!G__11653.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11653);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11653);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__11655 = x;
if(G__11655){
var bit__4263__auto__ = (G__11655.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4263__auto__) || (G__11655.cljs$core$IIndexed$)){
return true;
} else {
if((!G__11655.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11655);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11655);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11656 = coll__$1;
var G__11657 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11656,G__11657) : cljs.core.equiv_sequential.call(null,G__11656,G__11657));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11658 = o;
var G__11659 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11658,G__11659) : cljs.core.cons.call(null,G__11658,G__11659));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11662 = coll__$1;
var G__11663 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11662,G__11663) : cljs.core.equiv_sequential.call(null,G__11662,G__11663));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11664 = cljs.core.List.EMPTY;
var G__11665 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11664,G__11665) : cljs.core.with_meta.call(null,G__11664,G__11665));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__11666 = f;
var G__11667 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11666,G__11667) : cljs.core.seq_reduce.call(null,G__11666,G__11667));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__11668 = f;
var G__11669 = start;
var G__11670 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11668,G__11669,G__11670) : cljs.core.seq_reduce.call(null,G__11668,G__11669,G__11670));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11671 = o;
var G__11672 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11671,G__11672) : cljs.core.cons.call(null,G__11671,G__11672));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__11673 = sn;
s = G__11673;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__11678__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__11679 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__11680 = cljs.core.first(xs);
var G__11681 = cljs.core.next(xs);
coll = G__11679;
x = G__11680;
xs = G__11681;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__11678 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__11682__i = 0, G__11682__a = new Array(arguments.length -  2);
while (G__11682__i < G__11682__a.length) {G__11682__a[G__11682__i] = arguments[G__11682__i + 2]; ++G__11682__i;}
  xs = new cljs.core.IndexedSeq(G__11682__a,0);
} 
return G__11678__delegate.call(this,coll,x,xs);};
G__11678.cljs$lang$maxFixedArity = 2;
G__11678.cljs$lang$applyTo = (function (arglist__11683){
var coll = cljs.core.first(arglist__11683);
arglist__11683 = cljs.core.next(arglist__11683);
var x = cljs.core.first(arglist__11683);
var xs = cljs.core.rest(arglist__11683);
return G__11678__delegate(coll,x,xs);
});
G__11678.cljs$core$IFn$_invoke$arity$variadic = G__11678__delegate;
return G__11678;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__11684 = null;
if (arguments.length > 2) {
var G__11685__i = 0, G__11685__a = new Array(arguments.length -  2);
while (G__11685__i < G__11685__a.length) {G__11685__a[G__11685__i] = arguments[G__11685__i + 2]; ++G__11685__i;}
G__11684 = new cljs.core.IndexedSeq(G__11685__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__11684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__11686 = cljs.core.next(s);
var G__11687 = (acc + (1));
s = G__11686;
acc = G__11687;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__11689 = coll;
if(G__11689){
var bit__4256__auto__ = (G__11689.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4256__auto__) || (G__11689.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__11690 = cljs.core.next(coll);
var G__11691 = (n - (1));
coll = G__11690;
n = G__11691;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__11692 = cljs.core.next(coll);
var G__11693 = (n - (1));
var G__11694 = not_found;
coll = G__11692;
n = G__11693;
not_found = G__11694;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__11699 = coll;
if(G__11699){
var bit__4256__auto__ = (G__11699.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4256__auto__) || (G__11699.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11700 = coll;
if(G__11700){
var bit__4263__auto__ = (G__11700.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4263__auto__) || (G__11700.cljs$core$ISeq$)){
return true;
} else {
if((!G__11700.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11700);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11700);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__11701 = coll;
if(G__11701){
var bit__4256__auto__ = (G__11701.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4256__auto__) || (G__11701.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11702 = coll;
if(G__11702){
var bit__4263__auto__ = (G__11702.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4263__auto__) || (G__11702.cljs$core$ISeq$)){
return true;
} else {
if((!G__11702.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11702);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11702);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__11703 = (n__$1 - (1));
var G__11704 = cljs.core.rest(xs);
n__$1 = G__11703;
xs = G__11704;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__11707 = o;
if(G__11707){
var bit__4256__auto__ = (G__11707.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4256__auto__) || (G__11707.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__11708 = o;
if(G__11708){
var bit__4256__auto__ = (G__11708.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4256__auto__) || (G__11708.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__11712__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__11713 = ret;
var G__11714 = cljs.core.first(kvs);
var G__11715 = cljs.core.second(kvs);
var G__11716 = cljs.core.nnext(kvs);
coll = G__11713;
k = G__11714;
v = G__11715;
kvs = G__11716;
continue;
} else {
return ret;
}
break;
}
};
var G__11712 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__11717__i = 0, G__11717__a = new Array(arguments.length -  3);
while (G__11717__i < G__11717__a.length) {G__11717__a[G__11717__i] = arguments[G__11717__i + 3]; ++G__11717__i;}
  kvs = new cljs.core.IndexedSeq(G__11717__a,0);
} 
return G__11712__delegate.call(this,coll,k,v,kvs);};
G__11712.cljs$lang$maxFixedArity = 3;
G__11712.cljs$lang$applyTo = (function (arglist__11718){
var coll = cljs.core.first(arglist__11718);
arglist__11718 = cljs.core.next(arglist__11718);
var k = cljs.core.first(arglist__11718);
arglist__11718 = cljs.core.next(arglist__11718);
var v = cljs.core.first(arglist__11718);
var kvs = cljs.core.rest(arglist__11718);
return G__11712__delegate(coll,k,v,kvs);
});
G__11712.cljs$core$IFn$_invoke$arity$variadic = G__11712__delegate;
return G__11712;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__11719 = null;
if (arguments.length > 3) {
var G__11720__i = 0, G__11720__a = new Array(arguments.length -  3);
while (G__11720__i < G__11720__a.length) {G__11720__a[G__11720__i] = arguments[G__11720__i + 3]; ++G__11720__i;}
G__11719 = new cljs.core.IndexedSeq(G__11720__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__11719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__11723__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__11724 = ret;
var G__11725 = cljs.core.first(ks);
var G__11726 = cljs.core.next(ks);
coll = G__11724;
k = G__11725;
ks = G__11726;
continue;
} else {
return ret;
}
}
break;
}
};
var G__11723 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11727__i = 0, G__11727__a = new Array(arguments.length -  2);
while (G__11727__i < G__11727__a.length) {G__11727__a[G__11727__i] = arguments[G__11727__i + 2]; ++G__11727__i;}
  ks = new cljs.core.IndexedSeq(G__11727__a,0);
} 
return G__11723__delegate.call(this,coll,k,ks);};
G__11723.cljs$lang$maxFixedArity = 2;
G__11723.cljs$lang$applyTo = (function (arglist__11728){
var coll = cljs.core.first(arglist__11728);
arglist__11728 = cljs.core.next(arglist__11728);
var k = cljs.core.first(arglist__11728);
var ks = cljs.core.rest(arglist__11728);
return G__11723__delegate(coll,k,ks);
});
G__11723.cljs$core$IFn$_invoke$arity$variadic = G__11723__delegate;
return G__11723;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__11729 = null;
if (arguments.length > 2) {
var G__11730__i = 0, G__11730__a = new Array(arguments.length -  2);
while (G__11730__i < G__11730__a.length) {G__11730__a[G__11730__i] = arguments[G__11730__i + 2]; ++G__11730__i;}
G__11729 = new cljs.core.IndexedSeq(G__11730__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__11729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3582__auto__ = (function (){var G__11735 = f;
return goog.isFunction(G__11735);
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var G__11736 = f;
if(G__11736){
var bit__4263__auto__ = null;
if(cljs.core.truth_((function (){var or__3582__auto____$1 = bit__4263__auto__;
if(cljs.core.truth_(or__3582__auto____$1)){
return or__3582__auto____$1;
} else {
return G__11736.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__11736.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11736);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11736);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__12202 = null;
var G__12202__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__12202__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11738 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11738) : self__.afn.call(null,G__11738));
});
var G__12202__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11739 = a;
var G__11740 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11739,G__11740) : self__.afn.call(null,G__11739,G__11740));
});
var G__12202__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11741 = a;
var G__11742 = b;
var G__11743 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11741,G__11742,G__11743) : self__.afn.call(null,G__11741,G__11742,G__11743));
});
var G__12202__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11744 = a;
var G__11745 = b;
var G__11746 = c;
var G__11747 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11744,G__11745,G__11746,G__11747) : self__.afn.call(null,G__11744,G__11745,G__11746,G__11747));
});
var G__12202__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11748 = a;
var G__11749 = b;
var G__11750 = c;
var G__11751 = d;
var G__11752 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11748,G__11749,G__11750,G__11751,G__11752) : self__.afn.call(null,G__11748,G__11749,G__11750,G__11751,G__11752));
});
var G__12202__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11753 = a;
var G__11754 = b;
var G__11755 = c;
var G__11756 = d;
var G__11757 = e;
var G__11758 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11753,G__11754,G__11755,G__11756,G__11757,G__11758) : self__.afn.call(null,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758));
});
var G__12202__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11759 = a;
var G__11760 = b;
var G__11761 = c;
var G__11762 = d;
var G__11763 = e;
var G__11764 = f;
var G__11765 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765) : self__.afn.call(null,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765));
});
var G__12202__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11766 = a;
var G__11767 = b;
var G__11768 = c;
var G__11769 = d;
var G__11770 = e;
var G__11771 = f;
var G__11772 = g;
var G__11773 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11766,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773) : self__.afn.call(null,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773));
});
var G__12202__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11774 = a;
var G__11775 = b;
var G__11776 = c;
var G__11777 = d;
var G__11778 = e;
var G__11779 = f;
var G__11780 = g;
var G__11781 = h;
var G__11782 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782) : self__.afn.call(null,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782));
});
var G__12202__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11783 = a;
var G__11784 = b;
var G__11785 = c;
var G__11786 = d;
var G__11787 = e;
var G__11788 = f;
var G__11789 = g;
var G__11790 = h;
var G__11791 = i;
var G__11792 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792) : self__.afn.call(null,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792));
});
var G__12202__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11793 = a;
var G__11794 = b;
var G__11795 = c;
var G__11796 = d;
var G__11797 = e;
var G__11798 = f;
var G__11799 = g;
var G__11800 = h;
var G__11801 = i;
var G__11802 = j;
var G__11803 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801,G__11802,G__11803) : self__.afn.call(null,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801,G__11802,G__11803));
});
var G__12202__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11804 = a;
var G__11805 = b;
var G__11806 = c;
var G__11807 = d;
var G__11808 = e;
var G__11809 = f;
var G__11810 = g;
var G__11811 = h;
var G__11812 = i;
var G__11813 = j;
var G__11814 = k;
var G__11815 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815) : self__.afn.call(null,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815));
});
var G__12202__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11816 = a;
var G__11817 = b;
var G__11818 = c;
var G__11819 = d;
var G__11820 = e;
var G__11821 = f;
var G__11822 = g;
var G__11823 = h;
var G__11824 = i;
var G__11825 = j;
var G__11826 = k;
var G__11827 = l;
var G__11828 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828) : self__.afn.call(null,G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828));
});
var G__12202__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11829 = a;
var G__11830 = b;
var G__11831 = c;
var G__11832 = d;
var G__11833 = e;
var G__11834 = f;
var G__11835 = g;
var G__11836 = h;
var G__11837 = i;
var G__11838 = j;
var G__11839 = k;
var G__11840 = l;
var G__11841 = m;
var G__11842 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11829,G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842) : self__.afn.call(null,G__11829,G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842));
});
var G__12202__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11843 = a;
var G__11844 = b;
var G__11845 = c;
var G__11846 = d;
var G__11847 = e;
var G__11848 = f;
var G__11849 = g;
var G__11850 = h;
var G__11851 = i;
var G__11852 = j;
var G__11853 = k;
var G__11854 = l;
var G__11855 = m;
var G__11856 = n;
var G__11857 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857) : self__.afn.call(null,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857));
});
var G__12202__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11858 = a;
var G__11859 = b;
var G__11860 = c;
var G__11861 = d;
var G__11862 = e;
var G__11863 = f;
var G__11864 = g;
var G__11865 = h;
var G__11866 = i;
var G__11867 = j;
var G__11868 = k;
var G__11869 = l;
var G__11870 = m;
var G__11871 = n;
var G__11872 = o;
var G__11873 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873) : self__.afn.call(null,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873));
});
var G__12202__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11874 = a;
var G__11875 = b;
var G__11876 = c;
var G__11877 = d;
var G__11878 = e;
var G__11879 = f;
var G__11880 = g;
var G__11881 = h;
var G__11882 = i;
var G__11883 = j;
var G__11884 = k;
var G__11885 = l;
var G__11886 = m;
var G__11887 = n;
var G__11888 = o;
var G__11889 = p;
var G__11890 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890) : self__.afn.call(null,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890));
});
var G__12202__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11891 = a;
var G__11892 = b;
var G__11893 = c;
var G__11894 = d;
var G__11895 = e;
var G__11896 = f;
var G__11897 = g;
var G__11898 = h;
var G__11899 = i;
var G__11900 = j;
var G__11901 = k;
var G__11902 = l;
var G__11903 = m;
var G__11904 = n;
var G__11905 = o;
var G__11906 = p;
var G__11907 = q;
var G__11908 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907,G__11908) : self__.afn.call(null,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907,G__11908));
});
var G__12202__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11909 = a;
var G__11910 = b;
var G__11911 = c;
var G__11912 = d;
var G__11913 = e;
var G__11914 = f;
var G__11915 = g;
var G__11916 = h;
var G__11917 = i;
var G__11918 = j;
var G__11919 = k;
var G__11920 = l;
var G__11921 = m;
var G__11922 = n;
var G__11923 = o;
var G__11924 = p;
var G__11925 = q;
var G__11926 = r;
var G__11927 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926,G__11927) : self__.afn.call(null,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926,G__11927));
});
var G__12202__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11928 = a;
var G__11929 = b;
var G__11930 = c;
var G__11931 = d;
var G__11932 = e;
var G__11933 = f;
var G__11934 = g;
var G__11935 = h;
var G__11936 = i;
var G__11937 = j;
var G__11938 = k;
var G__11939 = l;
var G__11940 = m;
var G__11941 = n;
var G__11942 = o;
var G__11943 = p;
var G__11944 = q;
var G__11945 = r;
var G__11946 = s;
var G__11947 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944,G__11945,G__11946,G__11947) : self__.afn.call(null,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944,G__11945,G__11946,G__11947));
});
var G__12202__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11948 = self__.afn;
var G__11949 = a;
var G__11950 = b;
var G__11951 = c;
var G__11952 = d;
var G__11953 = e;
var G__11954 = f;
var G__11955 = g;
var G__11956 = h;
var G__11957 = i;
var G__11958 = j;
var G__11959 = k;
var G__11960 = l;
var G__11961 = m;
var G__11962 = n;
var G__11963 = o;
var G__11964 = p;
var G__11965 = q;
var G__11966 = r;
var G__11967 = s;
var G__11968 = t;
var G__11969 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969) : cljs.core.apply.call(null,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969));
});
G__12202 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12202__1.call(this,self__);
case 2:
return G__12202__2.call(this,self__,a);
case 3:
return G__12202__3.call(this,self__,a,b);
case 4:
return G__12202__4.call(this,self__,a,b,c);
case 5:
return G__12202__5.call(this,self__,a,b,c,d);
case 6:
return G__12202__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12202__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12202__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12202__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12202__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12202__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12202__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12202__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12202__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12202__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12202__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12202__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12202__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12202__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12202__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12202__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12202__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12202.cljs$core$IFn$_invoke$arity$1 = G__12202__1;
G__12202.cljs$core$IFn$_invoke$arity$2 = G__12202__2;
G__12202.cljs$core$IFn$_invoke$arity$3 = G__12202__3;
G__12202.cljs$core$IFn$_invoke$arity$4 = G__12202__4;
G__12202.cljs$core$IFn$_invoke$arity$5 = G__12202__5;
G__12202.cljs$core$IFn$_invoke$arity$6 = G__12202__6;
G__12202.cljs$core$IFn$_invoke$arity$7 = G__12202__7;
G__12202.cljs$core$IFn$_invoke$arity$8 = G__12202__8;
G__12202.cljs$core$IFn$_invoke$arity$9 = G__12202__9;
G__12202.cljs$core$IFn$_invoke$arity$10 = G__12202__10;
G__12202.cljs$core$IFn$_invoke$arity$11 = G__12202__11;
G__12202.cljs$core$IFn$_invoke$arity$12 = G__12202__12;
G__12202.cljs$core$IFn$_invoke$arity$13 = G__12202__13;
G__12202.cljs$core$IFn$_invoke$arity$14 = G__12202__14;
G__12202.cljs$core$IFn$_invoke$arity$15 = G__12202__15;
G__12202.cljs$core$IFn$_invoke$arity$16 = G__12202__16;
G__12202.cljs$core$IFn$_invoke$arity$17 = G__12202__17;
G__12202.cljs$core$IFn$_invoke$arity$18 = G__12202__18;
G__12202.cljs$core$IFn$_invoke$arity$19 = G__12202__19;
G__12202.cljs$core$IFn$_invoke$arity$20 = G__12202__20;
G__12202.cljs$core$IFn$_invoke$arity$21 = G__12202__21;
G__12202.cljs$core$IFn$_invoke$arity$22 = G__12202__22;
return G__12202;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args11737){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11737)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__11970 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11970) : self__.afn.call(null,G__11970));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__11971 = a;
var G__11972 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11971,G__11972) : self__.afn.call(null,G__11971,G__11972));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__11973 = a;
var G__11974 = b;
var G__11975 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11973,G__11974,G__11975) : self__.afn.call(null,G__11973,G__11974,G__11975));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__11976 = a;
var G__11977 = b;
var G__11978 = c;
var G__11979 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11976,G__11977,G__11978,G__11979) : self__.afn.call(null,G__11976,G__11977,G__11978,G__11979));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__11980 = a;
var G__11981 = b;
var G__11982 = c;
var G__11983 = d;
var G__11984 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11980,G__11981,G__11982,G__11983,G__11984) : self__.afn.call(null,G__11980,G__11981,G__11982,G__11983,G__11984));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__11985 = a;
var G__11986 = b;
var G__11987 = c;
var G__11988 = d;
var G__11989 = e;
var G__11990 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11985,G__11986,G__11987,G__11988,G__11989,G__11990) : self__.afn.call(null,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__11991 = a;
var G__11992 = b;
var G__11993 = c;
var G__11994 = d;
var G__11995 = e;
var G__11996 = f;
var G__11997 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997) : self__.afn.call(null,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__11998 = a;
var G__11999 = b;
var G__12000 = c;
var G__12001 = d;
var G__12002 = e;
var G__12003 = f;
var G__12004 = g;
var G__12005 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005) : self__.afn.call(null,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__12006 = a;
var G__12007 = b;
var G__12008 = c;
var G__12009 = d;
var G__12010 = e;
var G__12011 = f;
var G__12012 = g;
var G__12013 = h;
var G__12014 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014) : self__.afn.call(null,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__12015 = a;
var G__12016 = b;
var G__12017 = c;
var G__12018 = d;
var G__12019 = e;
var G__12020 = f;
var G__12021 = g;
var G__12022 = h;
var G__12023 = i;
var G__12024 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024) : self__.afn.call(null,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__12025 = a;
var G__12026 = b;
var G__12027 = c;
var G__12028 = d;
var G__12029 = e;
var G__12030 = f;
var G__12031 = g;
var G__12032 = h;
var G__12033 = i;
var G__12034 = j;
var G__12035 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035) : self__.afn.call(null,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__12036 = a;
var G__12037 = b;
var G__12038 = c;
var G__12039 = d;
var G__12040 = e;
var G__12041 = f;
var G__12042 = g;
var G__12043 = h;
var G__12044 = i;
var G__12045 = j;
var G__12046 = k;
var G__12047 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044,G__12045,G__12046,G__12047) : self__.afn.call(null,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044,G__12045,G__12046,G__12047));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__12048 = a;
var G__12049 = b;
var G__12050 = c;
var G__12051 = d;
var G__12052 = e;
var G__12053 = f;
var G__12054 = g;
var G__12055 = h;
var G__12056 = i;
var G__12057 = j;
var G__12058 = k;
var G__12059 = l;
var G__12060 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060) : self__.afn.call(null,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__12061 = a;
var G__12062 = b;
var G__12063 = c;
var G__12064 = d;
var G__12065 = e;
var G__12066 = f;
var G__12067 = g;
var G__12068 = h;
var G__12069 = i;
var G__12070 = j;
var G__12071 = k;
var G__12072 = l;
var G__12073 = m;
var G__12074 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073,G__12074) : self__.afn.call(null,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073,G__12074));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__12075 = a;
var G__12076 = b;
var G__12077 = c;
var G__12078 = d;
var G__12079 = e;
var G__12080 = f;
var G__12081 = g;
var G__12082 = h;
var G__12083 = i;
var G__12084 = j;
var G__12085 = k;
var G__12086 = l;
var G__12087 = m;
var G__12088 = n;
var G__12089 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089) : self__.afn.call(null,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__12090 = a;
var G__12091 = b;
var G__12092 = c;
var G__12093 = d;
var G__12094 = e;
var G__12095 = f;
var G__12096 = g;
var G__12097 = h;
var G__12098 = i;
var G__12099 = j;
var G__12100 = k;
var G__12101 = l;
var G__12102 = m;
var G__12103 = n;
var G__12104 = o;
var G__12105 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105) : self__.afn.call(null,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__12106 = a;
var G__12107 = b;
var G__12108 = c;
var G__12109 = d;
var G__12110 = e;
var G__12111 = f;
var G__12112 = g;
var G__12113 = h;
var G__12114 = i;
var G__12115 = j;
var G__12116 = k;
var G__12117 = l;
var G__12118 = m;
var G__12119 = n;
var G__12120 = o;
var G__12121 = p;
var G__12122 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122) : self__.afn.call(null,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__12123 = a;
var G__12124 = b;
var G__12125 = c;
var G__12126 = d;
var G__12127 = e;
var G__12128 = f;
var G__12129 = g;
var G__12130 = h;
var G__12131 = i;
var G__12132 = j;
var G__12133 = k;
var G__12134 = l;
var G__12135 = m;
var G__12136 = n;
var G__12137 = o;
var G__12138 = p;
var G__12139 = q;
var G__12140 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140) : self__.afn.call(null,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__12141 = a;
var G__12142 = b;
var G__12143 = c;
var G__12144 = d;
var G__12145 = e;
var G__12146 = f;
var G__12147 = g;
var G__12148 = h;
var G__12149 = i;
var G__12150 = j;
var G__12151 = k;
var G__12152 = l;
var G__12153 = m;
var G__12154 = n;
var G__12155 = o;
var G__12156 = p;
var G__12157 = q;
var G__12158 = r;
var G__12159 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159) : self__.afn.call(null,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__12160 = a;
var G__12161 = b;
var G__12162 = c;
var G__12163 = d;
var G__12164 = e;
var G__12165 = f;
var G__12166 = g;
var G__12167 = h;
var G__12168 = i;
var G__12169 = j;
var G__12170 = k;
var G__12171 = l;
var G__12172 = m;
var G__12173 = n;
var G__12174 = o;
var G__12175 = p;
var G__12176 = q;
var G__12177 = r;
var G__12178 = s;
var G__12179 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179) : self__.afn.call(null,G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12180 = self__.afn;
var G__12181 = a;
var G__12182 = b;
var G__12183 = c;
var G__12184 = d;
var G__12185 = e;
var G__12186 = f;
var G__12187 = g;
var G__12188 = h;
var G__12189 = i;
var G__12190 = j;
var G__12191 = k;
var G__12192 = l;
var G__12193 = m;
var G__12194 = n;
var G__12195 = o;
var G__12196 = p;
var G__12197 = q;
var G__12198 = r;
var G__12199 = s;
var G__12200 = t;
var G__12201 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201) : cljs.core.apply.call(null,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__12206 = o;
if(G__12206){
var bit__4263__auto__ = (G__12206.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4263__auto__) || (G__12206.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__12206.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12206);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12206);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3570__auto__ = !((o == null));
if(and__3570__auto__){
var G__12210 = o;
if(G__12210){
var bit__4263__auto__ = (G__12210.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4263__auto__) || (G__12210.cljs$core$IMeta$)){
return true;
} else {
if((!G__12210.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12210);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12210);
}
} else {
return and__3570__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__12213__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12214 = ret;
var G__12215 = cljs.core.first(ks);
var G__12216 = cljs.core.next(ks);
coll = G__12214;
k = G__12215;
ks = G__12216;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12213 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12217__i = 0, G__12217__a = new Array(arguments.length -  2);
while (G__12217__i < G__12217__a.length) {G__12217__a[G__12217__i] = arguments[G__12217__i + 2]; ++G__12217__i;}
  ks = new cljs.core.IndexedSeq(G__12217__a,0);
} 
return G__12213__delegate.call(this,coll,k,ks);};
G__12213.cljs$lang$maxFixedArity = 2;
G__12213.cljs$lang$applyTo = (function (arglist__12218){
var coll = cljs.core.first(arglist__12218);
arglist__12218 = cljs.core.next(arglist__12218);
var k = cljs.core.first(arglist__12218);
var ks = cljs.core.rest(arglist__12218);
return G__12213__delegate(coll,k,ks);
});
G__12213.cljs$core$IFn$_invoke$arity$variadic = G__12213__delegate;
return G__12213;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__12219 = null;
if (arguments.length > 2) {
var G__12220__i = 0, G__12220__a = new Array(arguments.length -  2);
while (G__12220__i < G__12220__a.length) {G__12220__a[G__12220__i] = arguments[G__12220__i + 2]; ++G__12220__i;}
G__12219 = new cljs.core.IndexedSeq(G__12220__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12219);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12222 = x;
if(G__12222){
var bit__4263__auto__ = (G__12222.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4263__auto__) || (G__12222.cljs$core$ICollection$)){
return true;
} else {
if((!G__12222.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12222);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12222);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12224 = x;
if(G__12224){
var bit__4263__auto__ = (G__12224.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4263__auto__) || (G__12224.cljs$core$ISet$)){
return true;
} else {
if((!G__12224.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12224);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12224);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__12226 = x;
if(G__12226){
var bit__4263__auto__ = (G__12226.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4263__auto__) || (G__12226.cljs$core$IAssociative$)){
return true;
} else {
if((!G__12226.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12226);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12226);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__12228 = x;
if(G__12228){
var bit__4263__auto__ = (G__12228.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4263__auto__) || (G__12228.cljs$core$ISequential$)){
return true;
} else {
if((!G__12228.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12228);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12228);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__12230 = x;
if(G__12230){
var bit__4263__auto__ = (G__12230.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4263__auto__) || (G__12230.cljs$core$ISorted$)){
return true;
} else {
if((!G__12230.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12230);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12230);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__12232 = x;
if(G__12232){
var bit__4263__auto__ = (G__12232.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4263__auto__) || (G__12232.cljs$core$IReduce$)){
return true;
} else {
if((!G__12232.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12232);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12232);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12234 = x;
if(G__12234){
var bit__4263__auto__ = (G__12234.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4263__auto__) || (G__12234.cljs$core$IMap$)){
return true;
} else {
if((!G__12234.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12234);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12234);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__12236 = x;
if(G__12236){
var bit__4263__auto__ = (G__12236.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4263__auto__) || (G__12236.cljs$core$IVector$)){
return true;
} else {
if((!G__12236.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12236);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12236);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__12238 = x;
if(G__12238){
var bit__4256__auto__ = (G__12238.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4256__auto__) || (G__12238.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj12244 = {};
return obj12244;
});
var js_obj__1 = (function() { 
var G__12247__delegate = function (keyvals){
var G__12245 = goog.object.create;
var G__12246 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12245,G__12246) : cljs.core.apply.call(null,G__12245,G__12246));
};
var G__12247 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__12248__i = 0, G__12248__a = new Array(arguments.length -  0);
while (G__12248__i < G__12248__a.length) {G__12248__a[G__12248__i] = arguments[G__12248__i + 0]; ++G__12248__i;}
  keyvals = new cljs.core.IndexedSeq(G__12248__a,0);
} 
return G__12247__delegate.call(this,keyvals);};
G__12247.cljs$lang$maxFixedArity = 0;
G__12247.cljs$lang$applyTo = (function (arglist__12249){
var keyvals = cljs.core.seq(arglist__12249);
return G__12247__delegate(keyvals);
});
G__12247.cljs$core$IFn$_invoke$arity$variadic = G__12247__delegate;
return G__12247;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__12250 = null;
if (arguments.length > 0) {
var G__12251__i = 0, G__12251__a = new Array(arguments.length -  0);
while (G__12251__i < G__12251__a.length) {G__12251__a[G__12251__i] = arguments[G__12251__i + 0]; ++G__12251__i;}
G__12250 = new cljs.core.IndexedSeq(G__12251__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12250);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__12254_12256 = obj;
var G__12255_12257 = ((function (G__12254_12256,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__12254_12256,keys))
;
goog.object.forEach(G__12254_12256,G__12255_12257);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12258 = (i__$1 + (1));
var G__12259 = (j__$1 + (1));
var G__12260 = (len__$1 - (1));
i__$1 = G__12258;
j__$1 = G__12259;
len__$1 = G__12260;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12261 = (i__$1 - (1));
var G__12262 = (j__$1 - (1));
var G__12263 = (len__$1 - (1));
i__$1 = G__12261;
j__$1 = G__12262;
len__$1 = G__12263;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj12265 = {};
return obj12265;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__12267 = s;
if(G__12267){
var bit__4263__auto__ = (G__12267.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4263__auto__) || (G__12267.cljs$core$ISeq$)){
return true;
} else {
if((!G__12267.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12267);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12267);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__12269 = s;
if(G__12269){
var bit__4263__auto__ = (G__12269.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4263__auto__) || (G__12269.cljs$core$ISeqable$)){
return true;
} else {
if((!G__12269.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12269);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12269);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3582__auto__ = cljs.core.fn_QMARK_(f);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var G__12273 = f;
if(G__12273){
var bit__4263__auto__ = (G__12273.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4263__auto__) || (G__12273.cljs$core$IFn$)){
return true;
} else {
if((!G__12273.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12273);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12273);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__12286 = n;
return isNaN(G__12286);
})())) && (!((n === Infinity))) && (((function (){var G__12287 = n;
return parseFloat(G__12287);
})() === (function (){var G__12288 = n;
var G__12289 = (10);
return parseInt(G__12288,G__12289);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__12290__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__12291 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__12292 = etc;
s = G__12291;
xs = G__12292;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__12290 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12293__i = 0, G__12293__a = new Array(arguments.length -  2);
while (G__12293__i < G__12293__a.length) {G__12293__a[G__12293__i] = arguments[G__12293__i + 2]; ++G__12293__i;}
  more = new cljs.core.IndexedSeq(G__12293__a,0);
} 
return G__12290__delegate.call(this,x,y,more);};
G__12290.cljs$lang$maxFixedArity = 2;
G__12290.cljs$lang$applyTo = (function (arglist__12294){
var x = cljs.core.first(arglist__12294);
arglist__12294 = cljs.core.next(arglist__12294);
var y = cljs.core.first(arglist__12294);
var more = cljs.core.rest(arglist__12294);
return G__12290__delegate(x,y,more);
});
G__12290.cljs$core$IFn$_invoke$arity$variadic = G__12290__delegate;
return G__12290;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__12295 = null;
if (arguments.length > 2) {
var G__12296__i = 0, G__12296__a = new Array(arguments.length -  2);
while (G__12296__i < G__12296__a.length) {G__12296__a[G__12296__i] = arguments[G__12296__i + 2]; ++G__12296__i;}
G__12295 = new cljs.core.IndexedSeq(G__12296__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__12300 = x;
if(G__12300){
var bit__4256__auto__ = (G__12300.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4256__auto__) || (G__12300.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__12301 = x;
var G__12302 = y;
return goog.array.defaultCompare(G__12301,G__12302);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__12307 = xs;
var G__12308 = ys;
var G__12309 = len;
var G__12310 = (n + (1));
xs = G__12307;
ys = G__12308;
len = G__12309;
n = G__12310;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__12315 = x;
var G__12316 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12315,G__12316) : f.call(null,G__12315,G__12316));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12317 = y;
var G__12318 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12317,G__12318) : f.call(null,G__12317,G__12318));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__12324 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12324) : cljs.core.to_array.call(null,G__12324));
})();
var G__12325_12327 = a;
var G__12326_12328 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__12325_12327,G__12326_12328);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__12334 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12334) : keyfn.call(null,G__12334));
})(),(function (){var G__12335 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12335) : keyfn.call(null,G__12335));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__12341 = f;
var G__12342 = cljs.core.first(s);
var G__12343 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12341,G__12342,G__12343) : cljs.core.reduce.call(null,G__12341,G__12342,G__12343));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__12344 = val__$1;
var G__12345 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12344,G__12345) : f.call(null,G__12344,G__12345));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12346 = nval;
var G__12347 = cljs.core.next(coll__$1);
val__$1 = G__12346;
coll__$1 = G__12347;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__12351 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12351) : cljs.core.to_array.call(null,G__12351));
})();
var G__12352_12354 = a;
goog.array.shuffle(G__12352_12354);

var G__12353 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12353) : cljs.core.vec.call(null,G__12353));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__12357 = coll;
if(G__12357){
var bit__4256__auto__ = (G__12357.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4256__auto__) || (G__12357.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__12358 = coll;
if(G__12358){
var bit__4256__auto__ = (G__12358.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4256__auto__) || (G__12358.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__12367 = null;
var G__12367__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__12367__1 = (function (x){
var G__12364 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12364) : cf.call(null,G__12364));
});
var G__12367__2 = (function (x,y){
var G__12365 = x;
var G__12366 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12365,G__12366) : f.call(null,G__12365,G__12366));
});
G__12367 = function(x,y){
switch(arguments.length){
case 0:
return G__12367__0.call(this);
case 1:
return G__12367__1.call(this,x);
case 2:
return G__12367__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12367.cljs$core$IFn$_invoke$arity$0 = G__12367__0;
G__12367.cljs$core$IFn$_invoke$arity$1 = G__12367__1;
G__12367.cljs$core$IFn$_invoke$arity$2 = G__12367__2;
return G__12367;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__12374 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12374) : xform.call(null,G__12374));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__12375 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12375) : f__$1.call(null,G__12375));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__12376__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__12376 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12377__i = 0, G__12377__a = new Array(arguments.length -  2);
while (G__12377__i < G__12377__a.length) {G__12377__a[G__12377__i] = arguments[G__12377__i + 2]; ++G__12377__i;}
  more = new cljs.core.IndexedSeq(G__12377__a,0);
} 
return G__12376__delegate.call(this,x,y,more);};
G__12376.cljs$lang$maxFixedArity = 2;
G__12376.cljs$lang$applyTo = (function (arglist__12378){
var x = cljs.core.first(arglist__12378);
arglist__12378 = cljs.core.next(arglist__12378);
var y = cljs.core.first(arglist__12378);
var more = cljs.core.rest(arglist__12378);
return G__12376__delegate(x,y,more);
});
G__12376.cljs$core$IFn$_invoke$arity$variadic = G__12376__delegate;
return G__12376;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__12379 = null;
if (arguments.length > 2) {
var G__12380__i = 0, G__12380__a = new Array(arguments.length -  2);
while (G__12380__i < G__12380__a.length) {G__12380__a[G__12380__i] = arguments[G__12380__i + 2]; ++G__12380__i;}
G__12379 = new cljs.core.IndexedSeq(G__12380__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12379);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__12381__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__12381 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12382__i = 0, G__12382__a = new Array(arguments.length -  2);
while (G__12382__i < G__12382__a.length) {G__12382__a[G__12382__i] = arguments[G__12382__i + 2]; ++G__12382__i;}
  more = new cljs.core.IndexedSeq(G__12382__a,0);
} 
return G__12381__delegate.call(this,x,y,more);};
G__12381.cljs$lang$maxFixedArity = 2;
G__12381.cljs$lang$applyTo = (function (arglist__12383){
var x = cljs.core.first(arglist__12383);
arglist__12383 = cljs.core.next(arglist__12383);
var y = cljs.core.first(arglist__12383);
var more = cljs.core.rest(arglist__12383);
return G__12381__delegate(x,y,more);
});
G__12381.cljs$core$IFn$_invoke$arity$variadic = G__12381__delegate;
return G__12381;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__12384 = null;
if (arguments.length > 2) {
var G__12385__i = 0, G__12385__a = new Array(arguments.length -  2);
while (G__12385__i < G__12385__a.length) {G__12385__a[G__12385__i] = arguments[G__12385__i + 2]; ++G__12385__i;}
G__12384 = new cljs.core.IndexedSeq(G__12385__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__12386__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__12386 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12387__i = 0, G__12387__a = new Array(arguments.length -  2);
while (G__12387__i < G__12387__a.length) {G__12387__a[G__12387__i] = arguments[G__12387__i + 2]; ++G__12387__i;}
  more = new cljs.core.IndexedSeq(G__12387__a,0);
} 
return G__12386__delegate.call(this,x,y,more);};
G__12386.cljs$lang$maxFixedArity = 2;
G__12386.cljs$lang$applyTo = (function (arglist__12388){
var x = cljs.core.first(arglist__12388);
arglist__12388 = cljs.core.next(arglist__12388);
var y = cljs.core.first(arglist__12388);
var more = cljs.core.rest(arglist__12388);
return G__12386__delegate(x,y,more);
});
G__12386.cljs$core$IFn$_invoke$arity$variadic = G__12386__delegate;
return G__12386;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__12389 = null;
if (arguments.length > 2) {
var G__12390__i = 0, G__12390__a = new Array(arguments.length -  2);
while (G__12390__i < G__12390__a.length) {G__12390__a[G__12390__i] = arguments[G__12390__i + 2]; ++G__12390__i;}
G__12389 = new cljs.core.IndexedSeq(G__12390__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12389);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__12395__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12395 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12396__i = 0, G__12396__a = new Array(arguments.length -  2);
while (G__12396__i < G__12396__a.length) {G__12396__a[G__12396__i] = arguments[G__12396__i + 2]; ++G__12396__i;}
  more = new cljs.core.IndexedSeq(G__12396__a,0);
} 
return G__12395__delegate.call(this,x,y,more);};
G__12395.cljs$lang$maxFixedArity = 2;
G__12395.cljs$lang$applyTo = (function (arglist__12397){
var x = cljs.core.first(arglist__12397);
arglist__12397 = cljs.core.next(arglist__12397);
var y = cljs.core.first(arglist__12397);
var more = cljs.core.rest(arglist__12397);
return G__12395__delegate(x,y,more);
});
G__12395.cljs$core$IFn$_invoke$arity$variadic = G__12395__delegate;
return G__12395;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__12398 = null;
if (arguments.length > 2) {
var G__12399__i = 0, G__12399__a = new Array(arguments.length -  2);
while (G__12399__i < G__12399__a.length) {G__12399__a[G__12399__i] = arguments[G__12399__i + 2]; ++G__12399__i;}
G__12398 = new cljs.core.IndexedSeq(G__12399__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12398);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__12400__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__12401 = y;
var G__12402 = cljs.core.first(more);
var G__12403 = cljs.core.next(more);
x = G__12401;
y = G__12402;
more = G__12403;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12400 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12404__i = 0, G__12404__a = new Array(arguments.length -  2);
while (G__12404__i < G__12404__a.length) {G__12404__a[G__12404__i] = arguments[G__12404__i + 2]; ++G__12404__i;}
  more = new cljs.core.IndexedSeq(G__12404__a,0);
} 
return G__12400__delegate.call(this,x,y,more);};
G__12400.cljs$lang$maxFixedArity = 2;
G__12400.cljs$lang$applyTo = (function (arglist__12405){
var x = cljs.core.first(arglist__12405);
arglist__12405 = cljs.core.next(arglist__12405);
var y = cljs.core.first(arglist__12405);
var more = cljs.core.rest(arglist__12405);
return G__12400__delegate(x,y,more);
});
G__12400.cljs$core$IFn$_invoke$arity$variadic = G__12400__delegate;
return G__12400;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__12406 = null;
if (arguments.length > 2) {
var G__12407__i = 0, G__12407__a = new Array(arguments.length -  2);
while (G__12407__i < G__12407__a.length) {G__12407__a[G__12407__i] = arguments[G__12407__i + 2]; ++G__12407__i;}
G__12406 = new cljs.core.IndexedSeq(G__12407__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__12408__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__12409 = y;
var G__12410 = cljs.core.first(more);
var G__12411 = cljs.core.next(more);
x = G__12409;
y = G__12410;
more = G__12411;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12408 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12412__i = 0, G__12412__a = new Array(arguments.length -  2);
while (G__12412__i < G__12412__a.length) {G__12412__a[G__12412__i] = arguments[G__12412__i + 2]; ++G__12412__i;}
  more = new cljs.core.IndexedSeq(G__12412__a,0);
} 
return G__12408__delegate.call(this,x,y,more);};
G__12408.cljs$lang$maxFixedArity = 2;
G__12408.cljs$lang$applyTo = (function (arglist__12413){
var x = cljs.core.first(arglist__12413);
arglist__12413 = cljs.core.next(arglist__12413);
var y = cljs.core.first(arglist__12413);
var more = cljs.core.rest(arglist__12413);
return G__12408__delegate(x,y,more);
});
G__12408.cljs$core$IFn$_invoke$arity$variadic = G__12408__delegate;
return G__12408;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__12414 = null;
if (arguments.length > 2) {
var G__12415__i = 0, G__12415__a = new Array(arguments.length -  2);
while (G__12415__i < G__12415__a.length) {G__12415__a[G__12415__i] = arguments[G__12415__i + 2]; ++G__12415__i;}
G__12414 = new cljs.core.IndexedSeq(G__12415__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12414);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__12416__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__12417 = y;
var G__12418 = cljs.core.first(more);
var G__12419 = cljs.core.next(more);
x = G__12417;
y = G__12418;
more = G__12419;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12416 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12420__i = 0, G__12420__a = new Array(arguments.length -  2);
while (G__12420__i < G__12420__a.length) {G__12420__a[G__12420__i] = arguments[G__12420__i + 2]; ++G__12420__i;}
  more = new cljs.core.IndexedSeq(G__12420__a,0);
} 
return G__12416__delegate.call(this,x,y,more);};
G__12416.cljs$lang$maxFixedArity = 2;
G__12416.cljs$lang$applyTo = (function (arglist__12421){
var x = cljs.core.first(arglist__12421);
arglist__12421 = cljs.core.next(arglist__12421);
var y = cljs.core.first(arglist__12421);
var more = cljs.core.rest(arglist__12421);
return G__12416__delegate(x,y,more);
});
G__12416.cljs$core$IFn$_invoke$arity$variadic = G__12416__delegate;
return G__12416;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__12422 = null;
if (arguments.length > 2) {
var G__12423__i = 0, G__12423__a = new Array(arguments.length -  2);
while (G__12423__i < G__12423__a.length) {G__12423__a[G__12423__i] = arguments[G__12423__i + 2]; ++G__12423__i;}
G__12422 = new cljs.core.IndexedSeq(G__12423__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12422);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__12424__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__12425 = y;
var G__12426 = cljs.core.first(more);
var G__12427 = cljs.core.next(more);
x = G__12425;
y = G__12426;
more = G__12427;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12424 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12428__i = 0, G__12428__a = new Array(arguments.length -  2);
while (G__12428__i < G__12428__a.length) {G__12428__a[G__12428__i] = arguments[G__12428__i + 2]; ++G__12428__i;}
  more = new cljs.core.IndexedSeq(G__12428__a,0);
} 
return G__12424__delegate.call(this,x,y,more);};
G__12424.cljs$lang$maxFixedArity = 2;
G__12424.cljs$lang$applyTo = (function (arglist__12429){
var x = cljs.core.first(arglist__12429);
arglist__12429 = cljs.core.next(arglist__12429);
var y = cljs.core.first(arglist__12429);
var more = cljs.core.rest(arglist__12429);
return G__12424__delegate(x,y,more);
});
G__12424.cljs$core$IFn$_invoke$arity$variadic = G__12424__delegate;
return G__12424;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__12430 = null;
if (arguments.length > 2) {
var G__12431__i = 0, G__12431__a = new Array(arguments.length -  2);
while (G__12431__i < G__12431__a.length) {G__12431__a[G__12431__i] = arguments[G__12431__i + 2]; ++G__12431__i;}
G__12430 = new cljs.core.IndexedSeq(G__12431__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12430);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__3899__auto__ = x;
var y__3900__auto__ = y;
return ((x__3899__auto__ > y__3900__auto__) ? x__3899__auto__ : y__3900__auto__);
});
var max__3 = (function() { 
var G__12432__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__3899__auto__ = x;
var y__3900__auto__ = y;
return ((x__3899__auto__ > y__3900__auto__) ? x__3899__auto__ : y__3900__auto__);
})(),more);
};
var G__12432 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12433__i = 0, G__12433__a = new Array(arguments.length -  2);
while (G__12433__i < G__12433__a.length) {G__12433__a[G__12433__i] = arguments[G__12433__i + 2]; ++G__12433__i;}
  more = new cljs.core.IndexedSeq(G__12433__a,0);
} 
return G__12432__delegate.call(this,x,y,more);};
G__12432.cljs$lang$maxFixedArity = 2;
G__12432.cljs$lang$applyTo = (function (arglist__12434){
var x = cljs.core.first(arglist__12434);
arglist__12434 = cljs.core.next(arglist__12434);
var y = cljs.core.first(arglist__12434);
var more = cljs.core.rest(arglist__12434);
return G__12432__delegate(x,y,more);
});
G__12432.cljs$core$IFn$_invoke$arity$variadic = G__12432__delegate;
return G__12432;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__12435 = null;
if (arguments.length > 2) {
var G__12436__i = 0, G__12436__a = new Array(arguments.length -  2);
while (G__12436__i < G__12436__a.length) {G__12436__a[G__12436__i] = arguments[G__12436__i + 2]; ++G__12436__i;}
G__12435 = new cljs.core.IndexedSeq(G__12436__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12435);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__3906__auto__ = x;
var y__3907__auto__ = y;
return ((x__3906__auto__ < y__3907__auto__) ? x__3906__auto__ : y__3907__auto__);
});
var min__3 = (function() { 
var G__12437__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__3906__auto__ = x;
var y__3907__auto__ = y;
return ((x__3906__auto__ < y__3907__auto__) ? x__3906__auto__ : y__3907__auto__);
})(),more);
};
var G__12437 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12438__i = 0, G__12438__a = new Array(arguments.length -  2);
while (G__12438__i < G__12438__a.length) {G__12438__a[G__12438__i] = arguments[G__12438__i + 2]; ++G__12438__i;}
  more = new cljs.core.IndexedSeq(G__12438__a,0);
} 
return G__12437__delegate.call(this,x,y,more);};
G__12437.cljs$lang$maxFixedArity = 2;
G__12437.cljs$lang$applyTo = (function (arglist__12439){
var x = cljs.core.first(arglist__12439);
arglist__12439 = cljs.core.next(arglist__12439);
var y = cljs.core.first(arglist__12439);
var more = cljs.core.rest(arglist__12439);
return G__12437__delegate(x,y,more);
});
G__12437.cljs$core$IFn$_invoke$arity$variadic = G__12437__delegate;
return G__12437;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__12440 = null;
if (arguments.length > 2) {
var G__12441__i = 0, G__12441__a = new Array(arguments.length -  2);
while (G__12441__i < G__12441__a.length) {G__12441__a[G__12441__i] = arguments[G__12441__i + 2]; ++G__12441__i;}
G__12440 = new cljs.core.IndexedSeq(G__12441__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12440);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__12442__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__12442 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12443__i = 0, G__12443__a = new Array(arguments.length -  2);
while (G__12443__i < G__12443__a.length) {G__12443__a[G__12443__i] = arguments[G__12443__i + 2]; ++G__12443__i;}
  more = new cljs.core.IndexedSeq(G__12443__a,0);
} 
return G__12442__delegate.call(this,x,y,more);};
G__12442.cljs$lang$maxFixedArity = 2;
G__12442.cljs$lang$applyTo = (function (arglist__12444){
var x = cljs.core.first(arglist__12444);
arglist__12444 = cljs.core.next(arglist__12444);
var y = cljs.core.first(arglist__12444);
var more = cljs.core.rest(arglist__12444);
return G__12442__delegate(x,y,more);
});
G__12442.cljs$core$IFn$_invoke$arity$variadic = G__12442__delegate;
return G__12442;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__12445 = null;
if (arguments.length > 2) {
var G__12446__i = 0, G__12446__a = new Array(arguments.length -  2);
while (G__12446__i < G__12446__a.length) {G__12446__a[G__12446__i] = arguments[G__12446__i + 2]; ++G__12446__i;}
G__12445 = new cljs.core.IndexedSeq(G__12446__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12445);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__12447__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__12447 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12448__i = 0, G__12448__a = new Array(arguments.length -  2);
while (G__12448__i < G__12448__a.length) {G__12448__a[G__12448__i] = arguments[G__12448__i + 2]; ++G__12448__i;}
  more = new cljs.core.IndexedSeq(G__12448__a,0);
} 
return G__12447__delegate.call(this,x,y,more);};
G__12447.cljs$lang$maxFixedArity = 2;
G__12447.cljs$lang$applyTo = (function (arglist__12449){
var x = cljs.core.first(arglist__12449);
arglist__12449 = cljs.core.next(arglist__12449);
var y = cljs.core.first(arglist__12449);
var more = cljs.core.rest(arglist__12449);
return G__12447__delegate(x,y,more);
});
G__12447.cljs$core$IFn$_invoke$arity$variadic = G__12447__delegate;
return G__12447;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__12450 = null;
if (arguments.length > 2) {
var G__12451__i = 0, G__12451__a = new Array(arguments.length -  2);
while (G__12451__i < G__12451__a.length) {G__12451__a[G__12451__i] = arguments[G__12451__i + 2]; ++G__12451__i;}
G__12450 = new cljs.core.IndexedSeq(G__12451__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__12456__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12456 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12457__i = 0, G__12457__a = new Array(arguments.length -  2);
while (G__12457__i < G__12457__a.length) {G__12457__a[G__12457__i] = arguments[G__12457__i + 2]; ++G__12457__i;}
  more = new cljs.core.IndexedSeq(G__12457__a,0);
} 
return G__12456__delegate.call(this,x,y,more);};
G__12456.cljs$lang$maxFixedArity = 2;
G__12456.cljs$lang$applyTo = (function (arglist__12458){
var x = cljs.core.first(arglist__12458);
arglist__12458 = cljs.core.next(arglist__12458);
var y = cljs.core.first(arglist__12458);
var more = cljs.core.rest(arglist__12458);
return G__12456__delegate(x,y,more);
});
G__12456.cljs$core$IFn$_invoke$arity$variadic = G__12456__delegate;
return G__12456;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__12459 = null;
if (arguments.length > 2) {
var G__12460__i = 0, G__12460__a = new Array(arguments.length -  2);
while (G__12460__i < G__12460__a.length) {G__12460__a[G__12460__i] = arguments[G__12460__i + 2]; ++G__12460__i;}
G__12459 = new cljs.core.IndexedSeq(G__12460__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12459);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__12461__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__12461 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12462__i = 0, G__12462__a = new Array(arguments.length -  2);
while (G__12462__i < G__12462__a.length) {G__12462__a[G__12462__i] = arguments[G__12462__i + 2]; ++G__12462__i;}
  more = new cljs.core.IndexedSeq(G__12462__a,0);
} 
return G__12461__delegate.call(this,x,y,more);};
G__12461.cljs$lang$maxFixedArity = 2;
G__12461.cljs$lang$applyTo = (function (arglist__12463){
var x = cljs.core.first(arglist__12463);
arglist__12463 = cljs.core.next(arglist__12463);
var y = cljs.core.first(arglist__12463);
var more = cljs.core.rest(arglist__12463);
return G__12461__delegate(x,y,more);
});
G__12461.cljs$core$IFn$_invoke$arity$variadic = G__12461__delegate;
return G__12461;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__12464 = null;
if (arguments.length > 2) {
var G__12465__i = 0, G__12465__a = new Array(arguments.length -  2);
while (G__12465__i < G__12465__a.length) {G__12465__a[G__12465__i] = arguments[G__12465__i + 2]; ++G__12465__i;}
G__12464 = new cljs.core.IndexedSeq(G__12465__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12464);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__12466__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__12466 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12467__i = 0, G__12467__a = new Array(arguments.length -  2);
while (G__12467__i < G__12467__a.length) {G__12467__a[G__12467__i] = arguments[G__12467__i + 2]; ++G__12467__i;}
  more = new cljs.core.IndexedSeq(G__12467__a,0);
} 
return G__12466__delegate.call(this,x,y,more);};
G__12466.cljs$lang$maxFixedArity = 2;
G__12466.cljs$lang$applyTo = (function (arglist__12468){
var x = cljs.core.first(arglist__12468);
arglist__12468 = cljs.core.next(arglist__12468);
var y = cljs.core.first(arglist__12468);
var more = cljs.core.rest(arglist__12468);
return G__12466__delegate(x,y,more);
});
G__12466.cljs$core$IFn$_invoke$arity$variadic = G__12466__delegate;
return G__12466;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__12469 = null;
if (arguments.length > 2) {
var G__12470__i = 0, G__12470__a = new Array(arguments.length -  2);
while (G__12470__i < G__12470__a.length) {G__12470__a[G__12470__i] = arguments[G__12470__i + 2]; ++G__12470__i;}
G__12469 = new cljs.core.IndexedSeq(G__12470__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12469);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__12473 = x;
var G__12474 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12473,G__12474) : cljs.core.mod.call(null,G__12473,G__12474));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__12475__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__12475 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12476__i = 0, G__12476__a = new Array(arguments.length -  2);
while (G__12476__i < G__12476__a.length) {G__12476__a[G__12476__i] = arguments[G__12476__i + 2]; ++G__12476__i;}
  more = new cljs.core.IndexedSeq(G__12476__a,0);
} 
return G__12475__delegate.call(this,x,y,more);};
G__12475.cljs$lang$maxFixedArity = 2;
G__12475.cljs$lang$applyTo = (function (arglist__12477){
var x = cljs.core.first(arglist__12477);
arglist__12477 = cljs.core.next(arglist__12477);
var y = cljs.core.first(arglist__12477);
var more = cljs.core.rest(arglist__12477);
return G__12475__delegate(x,y,more);
});
G__12475.cljs$core$IFn$_invoke$arity$variadic = G__12475__delegate;
return G__12475;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__12478 = null;
if (arguments.length > 2) {
var G__12479__i = 0, G__12479__a = new Array(arguments.length -  2);
while (G__12479__i < G__12479__a.length) {G__12479__a[G__12479__i] = arguments[G__12479__i + 2]; ++G__12479__i;}
G__12478 = new cljs.core.IndexedSeq(G__12479__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12478);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__12480__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__12480 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12481__i = 0, G__12481__a = new Array(arguments.length -  2);
while (G__12481__i < G__12481__a.length) {G__12481__a[G__12481__i] = arguments[G__12481__i + 2]; ++G__12481__i;}
  more = new cljs.core.IndexedSeq(G__12481__a,0);
} 
return G__12480__delegate.call(this,x,y,more);};
G__12480.cljs$lang$maxFixedArity = 2;
G__12480.cljs$lang$applyTo = (function (arglist__12482){
var x = cljs.core.first(arglist__12482);
arglist__12482 = cljs.core.next(arglist__12482);
var y = cljs.core.first(arglist__12482);
var more = cljs.core.rest(arglist__12482);
return G__12480__delegate(x,y,more);
});
G__12480.cljs$core$IFn$_invoke$arity$variadic = G__12480__delegate;
return G__12480;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__12483 = null;
if (arguments.length > 2) {
var G__12484__i = 0, G__12484__a = new Array(arguments.length -  2);
while (G__12484__i < G__12484__a.length) {G__12484__a[G__12484__i] = arguments[G__12484__i + 2]; ++G__12484__i;}
G__12483 = new cljs.core.IndexedSeq(G__12484__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12483);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__12487 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12487) : Math.floor.call(null,G__12487));
} else {
var G__12488 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12488) : Math.ceil.call(null,G__12488));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__12489__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__12489 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12490__i = 0, G__12490__a = new Array(arguments.length -  2);
while (G__12490__i < G__12490__a.length) {G__12490__a[G__12490__i] = arguments[G__12490__i + 2]; ++G__12490__i;}
  more = new cljs.core.IndexedSeq(G__12490__a,0);
} 
return G__12489__delegate.call(this,x,y,more);};
G__12489.cljs$lang$maxFixedArity = 2;
G__12489.cljs$lang$applyTo = (function (arglist__12491){
var x = cljs.core.first(arglist__12491);
arglist__12491 = cljs.core.next(arglist__12491);
var y = cljs.core.first(arglist__12491);
var more = cljs.core.rest(arglist__12491);
return G__12489__delegate(x,y,more);
});
G__12489.cljs$core$IFn$_invoke$arity$variadic = G__12489__delegate;
return G__12489;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__12492 = null;
if (arguments.length > 2) {
var G__12493__i = 0, G__12493__a = new Array(arguments.length -  2);
while (G__12493__i < G__12493__a.length) {G__12493__a[G__12493__i] = arguments[G__12493__i + 2]; ++G__12493__i;}
G__12492 = new cljs.core.IndexedSeq(G__12493__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__12494__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__12494 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12495__i = 0, G__12495__a = new Array(arguments.length -  2);
while (G__12495__i < G__12495__a.length) {G__12495__a[G__12495__i] = arguments[G__12495__i + 2]; ++G__12495__i;}
  more = new cljs.core.IndexedSeq(G__12495__a,0);
} 
return G__12494__delegate.call(this,x,y,more);};
G__12494.cljs$lang$maxFixedArity = 2;
G__12494.cljs$lang$applyTo = (function (arglist__12496){
var x = cljs.core.first(arglist__12496);
arglist__12496 = cljs.core.next(arglist__12496);
var y = cljs.core.first(arglist__12496);
var more = cljs.core.rest(arglist__12496);
return G__12494__delegate(x,y,more);
});
G__12494.cljs$core$IFn$_invoke$arity$variadic = G__12494__delegate;
return G__12494;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__12497 = null;
if (arguments.length > 2) {
var G__12498__i = 0, G__12498__a = new Array(arguments.length -  2);
while (G__12498__i < G__12498__a.length) {G__12498__a[G__12498__i] = arguments[G__12498__i + 2]; ++G__12498__i;}
G__12497 = new cljs.core.IndexedSeq(G__12498__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__12499__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__12499 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12500__i = 0, G__12500__a = new Array(arguments.length -  2);
while (G__12500__i < G__12500__a.length) {G__12500__a[G__12500__i] = arguments[G__12500__i + 2]; ++G__12500__i;}
  more = new cljs.core.IndexedSeq(G__12500__a,0);
} 
return G__12499__delegate.call(this,x,y,more);};
G__12499.cljs$lang$maxFixedArity = 2;
G__12499.cljs$lang$applyTo = (function (arglist__12501){
var x = cljs.core.first(arglist__12501);
arglist__12501 = cljs.core.next(arglist__12501);
var y = cljs.core.first(arglist__12501);
var more = cljs.core.rest(arglist__12501);
return G__12499__delegate(x,y,more);
});
G__12499.cljs$core$IFn$_invoke$arity$variadic = G__12499__delegate;
return G__12499;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__12502 = null;
if (arguments.length > 2) {
var G__12503__i = 0, G__12503__a = new Array(arguments.length -  2);
while (G__12503__i < G__12503__a.length) {G__12503__a[G__12503__i] = arguments[G__12503__i + 2]; ++G__12503__i;}
G__12502 = new cljs.core.IndexedSeq(G__12503__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__12504__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__12504 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12505__i = 0, G__12505__a = new Array(arguments.length -  2);
while (G__12505__i < G__12505__a.length) {G__12505__a[G__12505__i] = arguments[G__12505__i + 2]; ++G__12505__i;}
  more = new cljs.core.IndexedSeq(G__12505__a,0);
} 
return G__12504__delegate.call(this,x,y,more);};
G__12504.cljs$lang$maxFixedArity = 2;
G__12504.cljs$lang$applyTo = (function (arglist__12506){
var x = cljs.core.first(arglist__12506);
arglist__12506 = cljs.core.next(arglist__12506);
var y = cljs.core.first(arglist__12506);
var more = cljs.core.rest(arglist__12506);
return G__12504__delegate(x,y,more);
});
G__12504.cljs$core$IFn$_invoke$arity$variadic = G__12504__delegate;
return G__12504;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__12507 = null;
if (arguments.length > 2) {
var G__12508__i = 0, G__12508__a = new Array(arguments.length -  2);
while (G__12508__i < G__12508__a.length) {G__12508__a[G__12508__i] = arguments[G__12508__i + 2]; ++G__12508__i;}
G__12507 = new cljs.core.IndexedSeq(G__12508__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12507);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__12513__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12514 = y;
var G__12515 = cljs.core.first(more);
var G__12516 = cljs.core.next(more);
x = G__12514;
y = G__12515;
more = G__12516;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12513 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12517__i = 0, G__12517__a = new Array(arguments.length -  2);
while (G__12517__i < G__12517__a.length) {G__12517__a[G__12517__i] = arguments[G__12517__i + 2]; ++G__12517__i;}
  more = new cljs.core.IndexedSeq(G__12517__a,0);
} 
return G__12513__delegate.call(this,x,y,more);};
G__12513.cljs$lang$maxFixedArity = 2;
G__12513.cljs$lang$applyTo = (function (arglist__12518){
var x = cljs.core.first(arglist__12518);
arglist__12518 = cljs.core.next(arglist__12518);
var y = cljs.core.first(arglist__12518);
var more = cljs.core.rest(arglist__12518);
return G__12513__delegate(x,y,more);
});
G__12513.cljs$core$IFn$_invoke$arity$variadic = G__12513__delegate;
return G__12513;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__12519 = null;
if (arguments.length > 2) {
var G__12520__i = 0, G__12520__a = new Array(arguments.length -  2);
while (G__12520__i < G__12520__a.length) {G__12520__a[G__12520__i] = arguments[G__12520__i + 2]; ++G__12520__i;}
G__12519 = new cljs.core.IndexedSeq(G__12520__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12519);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__12521 = (n__$1 - (1));
var G__12522 = cljs.core.next(xs);
n__$1 = G__12521;
xs = G__12522;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__12526 = x;
return goog.string.buildString(G__12526);
}
});
var str__2 = (function() { 
var G__12527__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__12528 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__12529 = cljs.core.next(more);
sb = G__12528;
more = G__12529;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__12527 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__12530__i = 0, G__12530__a = new Array(arguments.length -  1);
while (G__12530__i < G__12530__a.length) {G__12530__a[G__12530__i] = arguments[G__12530__i + 1]; ++G__12530__i;}
  ys = new cljs.core.IndexedSeq(G__12530__a,0);
} 
return G__12527__delegate.call(this,x,ys);};
G__12527.cljs$lang$maxFixedArity = 1;
G__12527.cljs$lang$applyTo = (function (arglist__12531){
var x = cljs.core.first(arglist__12531);
var ys = cljs.core.rest(arglist__12531);
return G__12527__delegate(x,ys);
});
G__12527.cljs$core$IFn$_invoke$arity$variadic = G__12527__delegate;
return G__12527;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__12532 = null;
if (arguments.length > 1) {
var G__12533__i = 0, G__12533__a = new Array(arguments.length -  1);
while (G__12533__i < G__12533__a.length) {G__12533__a[G__12533__i] = arguments[G__12533__i + 1]; ++G__12533__i;}
G__12532 = new cljs.core.IndexedSeq(G__12533__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__12534 = cljs.core.next(xs);
var G__12535 = cljs.core.next(ys);
xs = G__12534;
ys = G__12535;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__12536 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__12537 = cljs.core.next(s);
res = G__12536;
s = G__12537;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__12542 = ((h + (cljs.core.hash((function (){var G__12540 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12540) : cljs.core.key.call(null,G__12540));
})()) ^ cljs.core.hash((function (){var G__12541 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12541) : cljs.core.val.call(null,G__12541));
})()))) % (4503599627370496));
var G__12543 = cljs.core.next(s);
h = G__12542;
s = G__12543;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__12544 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__12545 = cljs.core.next(s__$1);
h = G__12544;
s__$1 = G__12545;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__12556_12566 = cljs.core.seq(fn_map);
var chunk__12557_12567 = null;
var count__12558_12568 = (0);
var i__12559_12569 = (0);
while(true){
if((i__12559_12569 < count__12558_12568)){
var vec__12560_12570 = chunk__12557_12567.cljs$core$IIndexed$_nth$arity$2(null,i__12559_12569);
var key_name_12571 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12560_12570,(0),null);
var f_12572 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12560_12570,(1),null);
var str_name_12573 = (function (){var G__12561 = key_name_12571;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12561) : cljs.core.name.call(null,G__12561));
})();
(obj[str_name_12573] = f_12572);

var G__12574 = seq__12556_12566;
var G__12575 = chunk__12557_12567;
var G__12576 = count__12558_12568;
var G__12577 = (i__12559_12569 + (1));
seq__12556_12566 = G__12574;
chunk__12557_12567 = G__12575;
count__12558_12568 = G__12576;
i__12559_12569 = G__12577;
continue;
} else {
var temp__4126__auto___12578 = cljs.core.seq(seq__12556_12566);
if(temp__4126__auto___12578){
var seq__12556_12579__$1 = temp__4126__auto___12578;
if(cljs.core.chunked_seq_QMARK_(seq__12556_12579__$1)){
var c__4369__auto___12580 = (function (){var G__12562 = seq__12556_12579__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12562) : cljs.core.chunk_first.call(null,G__12562));
})();
var G__12581 = (function (){var G__12563 = seq__12556_12579__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12563) : cljs.core.chunk_rest.call(null,G__12563));
})();
var G__12582 = c__4369__auto___12580;
var G__12583 = cljs.core.count(c__4369__auto___12580);
var G__12584 = (0);
seq__12556_12566 = G__12581;
chunk__12557_12567 = G__12582;
count__12558_12568 = G__12583;
i__12559_12569 = G__12584;
continue;
} else {
var vec__12564_12585 = cljs.core.first(seq__12556_12579__$1);
var key_name_12586 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12564_12585,(0),null);
var f_12587 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12564_12585,(1),null);
var str_name_12588 = (function (){var G__12565 = key_name_12586;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12565) : cljs.core.name.call(null,G__12565));
})();
(obj[str_name_12588] = f_12587);

var G__12589 = cljs.core.next(seq__12556_12579__$1);
var G__12590 = null;
var G__12591 = (0);
var G__12592 = (0);
seq__12556_12566 = G__12589;
chunk__12557_12567 = G__12590;
count__12558_12568 = G__12591;
i__12559_12569 = G__12592;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__12594 = coll;
if(G__12594){
var bit__4263__auto__ = (G__12594.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4263__auto__) || (G__12594.cljs$core$IReversible$)){
return true;
} else {
if((!G__12594.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12594);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12594);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__12595 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__12595;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__12596 = (i - (1));
var G__12597 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__12596;
r = G__12597;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__12598__i = 0, G__12598__a = new Array(arguments.length -  0);
while (G__12598__i < G__12598__a.length) {G__12598__a[G__12598__i] = arguments[G__12598__i + 0]; ++G__12598__i;}
  xs = new cljs.core.IndexedSeq(G__12598__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__12599){
var xs = cljs.core.seq(arglist__12599);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3582__auto__ = (coll == null);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var G__12603 = coll;
if(G__12603){
var bit__4256__auto__ = (G__12603.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4256__auto__) || (G__12603.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__12605 = x;
if(G__12605){
var bit__4263__auto__ = (G__12605.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4263__auto__) || (G__12605.cljs$core$IList$)){
return true;
} else {
if((!G__12605.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12605);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12605);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3570__auto__ = cljs.core.not(a.ns);
if(and__3570__auto__){
return b.ns;
} else {
return and__3570__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12612 = a.ns;
var G__12613 = b.ns;
return goog.array.defaultCompare(G__12612,G__12613);
})();
if(((0) === nsc)){
var G__12614 = a.name;
var G__12615 = b.name;
return goog.array.defaultCompare(G__12614,G__12615);
} else {
return nsc;
}
}
} else {
var G__12616 = a.name;
var G__12617 = b.name;
return goog.array.defaultCompare(G__12616,G__12617);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4003__auto__ = self__._hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__12619 = null;
var G__12619__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__12619__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__12619 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12619__2.call(this,self__,coll);
case 3:
return G__12619__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12619.cljs$core$IFn$_invoke$arity$2 = G__12619__2;
G__12619.cljs$core$IFn$_invoke$arity$3 = G__12619__3;
return G__12619;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args12618){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12618)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__12621 = x;
if(G__12621){
var bit__4256__auto__ = (G__12621.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4256__auto__) || (G__12621.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__12623 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12623) : cljs.core.name.call(null,G__12623));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__12624 = ls.sval();
ls = G__12624;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__12626 = s;
if(G__12626){
var bit__4256__auto__ = (G__12626.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4256__auto__) || (G__12626.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__12627 = cljs.core.next(s__$1);
s__$1 = G__12627;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_12628 = (0);
var xs_12629 = cljs.core.seq(coll);
while(true){
if(xs_12629){
(ret[i_12628] = cljs.core.to_array(cljs.core.first(xs_12629)));

var G__12630 = (i_12628 + (1));
var G__12631 = cljs.core.next(xs_12629);
i_12628 = G__12630;
xs_12629 = G__12631;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12634 = (i + (1));
var G__12635 = cljs.core.next(s__$1);
i = G__12634;
s__$1 = G__12635;
continue;
} else {
return a;
}
break;
}
} else {
var n__4469__auto___12636 = size;
var i_12637 = (0);
while(true){
if((i_12637 < n__4469__auto___12636)){
(a[i_12637] = init_val_or_seq);

var G__12638 = (i_12637 + (1));
i_12637 = G__12638;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12641 = (i + (1));
var G__12642 = cljs.core.next(s__$1);
i = G__12641;
s__$1 = G__12642;
continue;
} else {
return a;
}
break;
}
} else {
var n__4469__auto___12643 = size;
var i_12644 = (0);
while(true){
if((i_12644 < n__4469__auto___12643)){
(a[i_12644] = init_val_or_seq);

var G__12645 = (i_12644 + (1));
i_12644 = G__12645;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12648 = (i + (1));
var G__12649 = cljs.core.next(s__$1);
i = G__12648;
s__$1 = G__12649;
continue;
} else {
return a;
}
break;
}
} else {
var n__4469__auto___12650 = size;
var i_12651 = (0);
while(true){
if((i_12651 < n__4469__auto___12650)){
(a[i_12651] = init_val_or_seq);

var G__12652 = (i_12651 + (1));
i_12651 = G__12652;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12655 = (i + (1));
var G__12656 = cljs.core.next(s__$1);
i = G__12655;
s__$1 = G__12656;
continue;
} else {
return a;
}
break;
}
} else {
var n__4469__auto___12657 = size;
var i_12658 = (0);
while(true){
if((i_12658 < n__4469__auto___12657)){
(a[i_12658] = init_val_or_seq);

var G__12659 = (i_12658 + (1));
i_12658 = G__12659;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__12660 = cljs.core.next(s__$1);
var G__12661 = (i - (1));
var G__12662 = (sum + (1));
s__$1 = G__12660;
i = G__12661;
sum = G__12662;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__12682__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__12682 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__12683__i = 0, G__12683__a = new Array(arguments.length -  2);
while (G__12683__i < G__12683__a.length) {G__12683__a[G__12683__i] = arguments[G__12683__i + 2]; ++G__12683__i;}
  zs = new cljs.core.IndexedSeq(G__12683__a,0);
} 
return G__12682__delegate.call(this,x,y,zs);};
G__12682.cljs$lang$maxFixedArity = 2;
G__12682.cljs$lang$applyTo = (function (arglist__12684){
var x = cljs.core.first(arglist__12684);
arglist__12684 = cljs.core.next(arglist__12684);
var y = cljs.core.first(arglist__12684);
var zs = cljs.core.rest(arglist__12684);
return G__12682__delegate(x,y,zs);
});
G__12682.cljs$core$IFn$_invoke$arity$variadic = G__12682__delegate;
return G__12682;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__12685 = null;
if (arguments.length > 2) {
var G__12686__i = 0, G__12686__a = new Array(arguments.length -  2);
while (G__12686__i < G__12686__a.length) {G__12686__a[G__12686__i] = arguments[G__12686__i + 2]; ++G__12686__i;}
G__12685 = new cljs.core.IndexedSeq(G__12686__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12685);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__12687__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__12687 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__12688__i = 0, G__12688__a = new Array(arguments.length -  4);
while (G__12688__i < G__12688__a.length) {G__12688__a[G__12688__i] = arguments[G__12688__i + 4]; ++G__12688__i;}
  more = new cljs.core.IndexedSeq(G__12688__a,0);
} 
return G__12687__delegate.call(this,a,b,c,d,more);};
G__12687.cljs$lang$maxFixedArity = 4;
G__12687.cljs$lang$applyTo = (function (arglist__12689){
var a = cljs.core.first(arglist__12689);
arglist__12689 = cljs.core.next(arglist__12689);
var b = cljs.core.first(arglist__12689);
arglist__12689 = cljs.core.next(arglist__12689);
var c = cljs.core.first(arglist__12689);
arglist__12689 = cljs.core.next(arglist__12689);
var d = cljs.core.first(arglist__12689);
var more = cljs.core.rest(arglist__12689);
return G__12687__delegate(a,b,c,d,more);
});
G__12687.cljs$core$IFn$_invoke$arity$variadic = G__12687__delegate;
return G__12687;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__12690 = null;
if (arguments.length > 4) {
var G__12691__i = 0, G__12691__a = new Array(arguments.length -  4);
while (G__12691__i < G__12691__a.length) {G__12691__a[G__12691__i] = arguments[G__12691__i + 4]; ++G__12691__i;}
G__12690 = new cljs.core.IndexedSeq(G__12691__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__12690);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__12692__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12693 = ntcoll;
var G__12694 = cljs.core.first(vals);
var G__12695 = cljs.core.next(vals);
tcoll = G__12693;
val = G__12694;
vals = G__12695;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12692 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12696__i = 0, G__12696__a = new Array(arguments.length -  2);
while (G__12696__i < G__12696__a.length) {G__12696__a[G__12696__i] = arguments[G__12696__i + 2]; ++G__12696__i;}
  vals = new cljs.core.IndexedSeq(G__12696__a,0);
} 
return G__12692__delegate.call(this,tcoll,val,vals);};
G__12692.cljs$lang$maxFixedArity = 2;
G__12692.cljs$lang$applyTo = (function (arglist__12697){
var tcoll = cljs.core.first(arglist__12697);
arglist__12697 = cljs.core.next(arglist__12697);
var val = cljs.core.first(arglist__12697);
var vals = cljs.core.rest(arglist__12697);
return G__12692__delegate(tcoll,val,vals);
});
G__12692.cljs$core$IFn$_invoke$arity$variadic = G__12692__delegate;
return G__12692;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__12698 = null;
if (arguments.length > 2) {
var G__12699__i = 0, G__12699__a = new Array(arguments.length -  2);
while (G__12699__i < G__12699__a.length) {G__12699__a[G__12699__i] = arguments[G__12699__i + 2]; ++G__12699__i;}
G__12698 = new cljs.core.IndexedSeq(G__12699__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12698);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__12700__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__12701 = ntcoll;
var G__12702 = cljs.core.first(kvs);
var G__12703 = cljs.core.second(kvs);
var G__12704 = cljs.core.nnext(kvs);
tcoll = G__12701;
key = G__12702;
val = G__12703;
kvs = G__12704;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12700 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12705__i = 0, G__12705__a = new Array(arguments.length -  3);
while (G__12705__i < G__12705__a.length) {G__12705__a[G__12705__i] = arguments[G__12705__i + 3]; ++G__12705__i;}
  kvs = new cljs.core.IndexedSeq(G__12705__a,0);
} 
return G__12700__delegate.call(this,tcoll,key,val,kvs);};
G__12700.cljs$lang$maxFixedArity = 3;
G__12700.cljs$lang$applyTo = (function (arglist__12706){
var tcoll = cljs.core.first(arglist__12706);
arglist__12706 = cljs.core.next(arglist__12706);
var key = cljs.core.first(arglist__12706);
arglist__12706 = cljs.core.next(arglist__12706);
var val = cljs.core.first(arglist__12706);
var kvs = cljs.core.rest(arglist__12706);
return G__12700__delegate(tcoll,key,val,kvs);
});
G__12700.cljs$core$IFn$_invoke$arity$variadic = G__12700__delegate;
return G__12700;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__12707 = null;
if (arguments.length > 3) {
var G__12708__i = 0, G__12708__a = new Array(arguments.length -  3);
while (G__12708__i < G__12708__a.length) {G__12708__a[G__12708__i] = arguments[G__12708__i + 3]; ++G__12708__i;}
G__12707 = new cljs.core.IndexedSeq(G__12708__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__12707);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__12709__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__12710 = ntcoll;
var G__12711 = cljs.core.first(ks);
var G__12712 = cljs.core.next(ks);
tcoll = G__12710;
key = G__12711;
ks = G__12712;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12709 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12713__i = 0, G__12713__a = new Array(arguments.length -  2);
while (G__12713__i < G__12713__a.length) {G__12713__a[G__12713__i] = arguments[G__12713__i + 2]; ++G__12713__i;}
  ks = new cljs.core.IndexedSeq(G__12713__a,0);
} 
return G__12709__delegate.call(this,tcoll,key,ks);};
G__12709.cljs$lang$maxFixedArity = 2;
G__12709.cljs$lang$applyTo = (function (arglist__12714){
var tcoll = cljs.core.first(arglist__12714);
arglist__12714 = cljs.core.next(arglist__12714);
var key = cljs.core.first(arglist__12714);
var ks = cljs.core.rest(arglist__12714);
return G__12709__delegate(tcoll,key,ks);
});
G__12709.cljs$core$IFn$_invoke$arity$variadic = G__12709__delegate;
return G__12709;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__12715 = null;
if (arguments.length > 2) {
var G__12716__i = 0, G__12716__a = new Array(arguments.length -  2);
while (G__12716__i < G__12716__a.length) {G__12716__a[G__12716__i] = arguments[G__12716__i + 2]; ++G__12716__i;}
G__12715 = new cljs.core.IndexedSeq(G__12716__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__12715);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__12717__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12718 = ntcoll;
var G__12719 = cljs.core.first(vals);
var G__12720 = cljs.core.next(vals);
tcoll = G__12718;
val = G__12719;
vals = G__12720;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12717 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12721__i = 0, G__12721__a = new Array(arguments.length -  2);
while (G__12721__i < G__12721__a.length) {G__12721__a[G__12721__i] = arguments[G__12721__i + 2]; ++G__12721__i;}
  vals = new cljs.core.IndexedSeq(G__12721__a,0);
} 
return G__12717__delegate.call(this,tcoll,val,vals);};
G__12717.cljs$lang$maxFixedArity = 2;
G__12717.cljs$lang$applyTo = (function (arglist__12722){
var tcoll = cljs.core.first(arglist__12722);
arglist__12722 = cljs.core.next(arglist__12722);
var val = cljs.core.first(arglist__12722);
var vals = cljs.core.rest(arglist__12722);
return G__12717__delegate(tcoll,val,vals);
});
G__12717.cljs$core$IFn$_invoke$arity$variadic = G__12717__delegate;
return G__12717;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__12723 = null;
if (arguments.length > 2) {
var G__12724__i = 0, G__12724__a = new Array(arguments.length -  2);
while (G__12724__i < G__12724__a.length) {G__12724__a[G__12724__i] = arguments[G__12724__i + 2]; ++G__12724__i;}
G__12723 = new cljs.core.IndexedSeq(G__12724__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4513 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4513);
} else {
var G__12935 = a4513;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12935) : f.call(null,G__12935));
}
} else {
var b4514 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4513,b4514);
} else {
var G__12936 = a4513;
var G__12937 = b4514;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12936,G__12937) : f.call(null,G__12936,G__12937));
}
} else {
var c4515 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4513,b4514,c4515);
} else {
var G__12938 = a4513;
var G__12939 = b4514;
var G__12940 = c4515;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12938,G__12939,G__12940) : f.call(null,G__12938,G__12939,G__12940));
}
} else {
var d4516 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4513,b4514,c4515,d4516);
} else {
var G__12941 = a4513;
var G__12942 = b4514;
var G__12943 = c4515;
var G__12944 = d4516;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12941,G__12942,G__12943,G__12944) : f.call(null,G__12941,G__12942,G__12943,G__12944));
}
} else {
var e4517 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4513,b4514,c4515,d4516,e4517);
} else {
var G__12945 = a4513;
var G__12946 = b4514;
var G__12947 = c4515;
var G__12948 = d4516;
var G__12949 = e4517;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12945,G__12946,G__12947,G__12948,G__12949) : f.call(null,G__12945,G__12946,G__12947,G__12948,G__12949));
}
} else {
var f4518 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4513,b4514,c4515,d4516,e4517,f4518);
} else {
var G__12950 = a4513;
var G__12951 = b4514;
var G__12952 = c4515;
var G__12953 = d4516;
var G__12954 = e4517;
var G__12955 = f4518;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12950,G__12951,G__12952,G__12953,G__12954,G__12955) : f.call(null,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955));
}
} else {
var g4519 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4513,b4514,c4515,d4516,e4517,f4518,g4519);
} else {
var G__12956 = a4513;
var G__12957 = b4514;
var G__12958 = c4515;
var G__12959 = d4516;
var G__12960 = e4517;
var G__12961 = f4518;
var G__12962 = g4519;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962) : f.call(null,G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962));
}
} else {
var h4520 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520);
} else {
var G__12963 = a4513;
var G__12964 = b4514;
var G__12965 = c4515;
var G__12966 = d4516;
var G__12967 = e4517;
var G__12968 = f4518;
var G__12969 = g4519;
var G__12970 = h4520;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970) : f.call(null,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970));
}
} else {
var i4521 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521);
} else {
var G__12971 = a4513;
var G__12972 = b4514;
var G__12973 = c4515;
var G__12974 = d4516;
var G__12975 = e4517;
var G__12976 = f4518;
var G__12977 = g4519;
var G__12978 = h4520;
var G__12979 = i4521;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979) : f.call(null,G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979));
}
} else {
var j4522 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521,j4522);
} else {
var G__12980 = a4513;
var G__12981 = b4514;
var G__12982 = c4515;
var G__12983 = d4516;
var G__12984 = e4517;
var G__12985 = f4518;
var G__12986 = g4519;
var G__12987 = h4520;
var G__12988 = i4521;
var G__12989 = j4522;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988,G__12989) : f.call(null,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988,G__12989));
}
} else {
var k4523 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521,j4522,k4523);
} else {
var G__12990 = a4513;
var G__12991 = b4514;
var G__12992 = c4515;
var G__12993 = d4516;
var G__12994 = e4517;
var G__12995 = f4518;
var G__12996 = g4519;
var G__12997 = h4520;
var G__12998 = i4521;
var G__12999 = j4522;
var G__13000 = k4523;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000) : f.call(null,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000));
}
} else {
var l4524 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521,j4522,k4523,l4524);
} else {
var G__13001 = a4513;
var G__13002 = b4514;
var G__13003 = c4515;
var G__13004 = d4516;
var G__13005 = e4517;
var G__13006 = f4518;
var G__13007 = g4519;
var G__13008 = h4520;
var G__13009 = i4521;
var G__13010 = j4522;
var G__13011 = k4523;
var G__13012 = l4524;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012) : f.call(null,G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012));
}
} else {
var m4525 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521,j4522,k4523,l4524,m4525);
} else {
var G__13013 = a4513;
var G__13014 = b4514;
var G__13015 = c4515;
var G__13016 = d4516;
var G__13017 = e4517;
var G__13018 = f4518;
var G__13019 = g4519;
var G__13020 = h4520;
var G__13021 = i4521;
var G__13022 = j4522;
var G__13023 = k4523;
var G__13024 = l4524;
var G__13025 = m4525;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023,G__13024,G__13025) : f.call(null,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023,G__13024,G__13025));
}
} else {
var n4526 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521,j4522,k4523,l4524,m4525,n4526);
} else {
var G__13026 = a4513;
var G__13027 = b4514;
var G__13028 = c4515;
var G__13029 = d4516;
var G__13030 = e4517;
var G__13031 = f4518;
var G__13032 = g4519;
var G__13033 = h4520;
var G__13034 = i4521;
var G__13035 = j4522;
var G__13036 = k4523;
var G__13037 = l4524;
var G__13038 = m4525;
var G__13039 = n4526;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039) : f.call(null,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039));
}
} else {
var o4527 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521,j4522,k4523,l4524,m4525,n4526,o4527);
} else {
var G__13040 = a4513;
var G__13041 = b4514;
var G__13042 = c4515;
var G__13043 = d4516;
var G__13044 = e4517;
var G__13045 = f4518;
var G__13046 = g4519;
var G__13047 = h4520;
var G__13048 = i4521;
var G__13049 = j4522;
var G__13050 = k4523;
var G__13051 = l4524;
var G__13052 = m4525;
var G__13053 = n4526;
var G__13054 = o4527;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054) : f.call(null,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054));
}
} else {
var p4528 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521,j4522,k4523,l4524,m4525,n4526,o4527,p4528);
} else {
var G__13055 = a4513;
var G__13056 = b4514;
var G__13057 = c4515;
var G__13058 = d4516;
var G__13059 = e4517;
var G__13060 = f4518;
var G__13061 = g4519;
var G__13062 = h4520;
var G__13063 = i4521;
var G__13064 = j4522;
var G__13065 = k4523;
var G__13066 = l4524;
var G__13067 = m4525;
var G__13068 = n4526;
var G__13069 = o4527;
var G__13070 = p4528;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__13055,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070) : f.call(null,G__13055,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070));
}
} else {
var q4529 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521,j4522,k4523,l4524,m4525,n4526,o4527,p4528,q4529);
} else {
var G__13071 = a4513;
var G__13072 = b4514;
var G__13073 = c4515;
var G__13074 = d4516;
var G__13075 = e4517;
var G__13076 = f4518;
var G__13077 = g4519;
var G__13078 = h4520;
var G__13079 = i4521;
var G__13080 = j4522;
var G__13081 = k4523;
var G__13082 = l4524;
var G__13083 = m4525;
var G__13084 = n4526;
var G__13085 = o4527;
var G__13086 = p4528;
var G__13087 = q4529;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087) : f.call(null,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087));
}
} else {
var r4530 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521,j4522,k4523,l4524,m4525,n4526,o4527,p4528,q4529,r4530);
} else {
var G__13088 = a4513;
var G__13089 = b4514;
var G__13090 = c4515;
var G__13091 = d4516;
var G__13092 = e4517;
var G__13093 = f4518;
var G__13094 = g4519;
var G__13095 = h4520;
var G__13096 = i4521;
var G__13097 = j4522;
var G__13098 = k4523;
var G__13099 = l4524;
var G__13100 = m4525;
var G__13101 = n4526;
var G__13102 = o4527;
var G__13103 = p4528;
var G__13104 = q4529;
var G__13105 = r4530;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105) : f.call(null,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105));
}
} else {
var s4531 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521,j4522,k4523,l4524,m4525,n4526,o4527,p4528,q4529,r4530,s4531);
} else {
var G__13106 = a4513;
var G__13107 = b4514;
var G__13108 = c4515;
var G__13109 = d4516;
var G__13110 = e4517;
var G__13111 = f4518;
var G__13112 = g4519;
var G__13113 = h4520;
var G__13114 = i4521;
var G__13115 = j4522;
var G__13116 = k4523;
var G__13117 = l4524;
var G__13118 = m4525;
var G__13119 = n4526;
var G__13120 = o4527;
var G__13121 = p4528;
var G__13122 = q4529;
var G__13123 = r4530;
var G__13124 = s4531;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124) : f.call(null,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124));
}
} else {
var t4532 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4513,b4514,c4515,d4516,e4517,f4518,g4519,h4520,i4521,j4522,k4523,l4524,m4525,n4526,o4527,p4528,q4529,r4530,s4531,t4532);
} else {
var G__13125 = a4513;
var G__13126 = b4514;
var G__13127 = c4515;
var G__13128 = d4516;
var G__13129 = e4517;
var G__13130 = f4518;
var G__13131 = g4519;
var G__13132 = h4520;
var G__13133 = i4521;
var G__13134 = j4522;
var G__13135 = k4523;
var G__13136 = l4524;
var G__13137 = m4525;
var G__13138 = n4526;
var G__13139 = o4527;
var G__13140 = p4528;
var G__13141 = q4529;
var G__13142 = r4530;
var G__13143 = s4531;
var G__13144 = t4532;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144) : f.call(null,G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__13145__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__13145 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__13146__i = 0, G__13146__a = new Array(arguments.length -  5);
while (G__13146__i < G__13146__a.length) {G__13146__a[G__13146__i] = arguments[G__13146__i + 5]; ++G__13146__i;}
  args = new cljs.core.IndexedSeq(G__13146__a,0);
} 
return G__13145__delegate.call(this,f,a,b,c,d,args);};
G__13145.cljs$lang$maxFixedArity = 5;
G__13145.cljs$lang$applyTo = (function (arglist__13147){
var f = cljs.core.first(arglist__13147);
arglist__13147 = cljs.core.next(arglist__13147);
var a = cljs.core.first(arglist__13147);
arglist__13147 = cljs.core.next(arglist__13147);
var b = cljs.core.first(arglist__13147);
arglist__13147 = cljs.core.next(arglist__13147);
var c = cljs.core.first(arglist__13147);
arglist__13147 = cljs.core.next(arglist__13147);
var d = cljs.core.first(arglist__13147);
var args = cljs.core.rest(arglist__13147);
return G__13145__delegate(f,a,b,c,d,args);
});
G__13145.cljs$core$IFn$_invoke$arity$variadic = G__13145__delegate;
return G__13145;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__13148 = null;
if (arguments.length > 5) {
var G__13149__i = 0, G__13149__a = new Array(arguments.length -  5);
while (G__13149__i < G__13149__a.length) {G__13149__a[G__13149__i] = arguments[G__13149__i + 5]; ++G__13149__i;}
G__13148 = new cljs.core.IndexedSeq(G__13149__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__13148);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__13165 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13165) : f.call(null,G__13165));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__13166 = cljs.core.meta(obj);
var G__13167 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13166,G__13167) : f.call(null,G__13166,G__13167));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__13168 = cljs.core.meta(obj);
var G__13169 = a;
var G__13170 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13168,G__13169,G__13170) : f.call(null,G__13168,G__13169,G__13170));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__13171 = cljs.core.meta(obj);
var G__13172 = a;
var G__13173 = b;
var G__13174 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13171,G__13172,G__13173,G__13174) : f.call(null,G__13171,G__13172,G__13173,G__13174));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__13175 = cljs.core.meta(obj);
var G__13176 = a;
var G__13177 = b;
var G__13178 = c;
var G__13179 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13175,G__13176,G__13177,G__13178,G__13179) : f.call(null,G__13175,G__13176,G__13177,G__13178,G__13179));
})());
});
var vary_meta__7 = (function() { 
var G__13180__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__13180 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__13181__i = 0, G__13181__a = new Array(arguments.length -  6);
while (G__13181__i < G__13181__a.length) {G__13181__a[G__13181__i] = arguments[G__13181__i + 6]; ++G__13181__i;}
  args = new cljs.core.IndexedSeq(G__13181__a,0);
} 
return G__13180__delegate.call(this,obj,f,a,b,c,d,args);};
G__13180.cljs$lang$maxFixedArity = 6;
G__13180.cljs$lang$applyTo = (function (arglist__13182){
var obj = cljs.core.first(arglist__13182);
arglist__13182 = cljs.core.next(arglist__13182);
var f = cljs.core.first(arglist__13182);
arglist__13182 = cljs.core.next(arglist__13182);
var a = cljs.core.first(arglist__13182);
arglist__13182 = cljs.core.next(arglist__13182);
var b = cljs.core.first(arglist__13182);
arglist__13182 = cljs.core.next(arglist__13182);
var c = cljs.core.first(arglist__13182);
arglist__13182 = cljs.core.next(arglist__13182);
var d = cljs.core.first(arglist__13182);
var args = cljs.core.rest(arglist__13182);
return G__13180__delegate(obj,f,a,b,c,d,args);
});
G__13180.cljs$core$IFn$_invoke$arity$variadic = G__13180__delegate;
return G__13180;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__13183 = null;
if (arguments.length > 6) {
var G__13184__i = 0, G__13184__a = new Array(arguments.length -  6);
while (G__13184__i < G__13184__a.length) {G__13184__a[G__13184__i] = arguments[G__13184__i + 6]; ++G__13184__i;}
G__13183 = new cljs.core.IndexedSeq(G__13184__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__13183);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__13185__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__13185 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13186__i = 0, G__13186__a = new Array(arguments.length -  2);
while (G__13186__i < G__13186__a.length) {G__13186__a[G__13186__i] = arguments[G__13186__i + 2]; ++G__13186__i;}
  more = new cljs.core.IndexedSeq(G__13186__a,0);
} 
return G__13185__delegate.call(this,x,y,more);};
G__13185.cljs$lang$maxFixedArity = 2;
G__13185.cljs$lang$applyTo = (function (arglist__13187){
var x = cljs.core.first(arglist__13187);
arglist__13187 = cljs.core.next(arglist__13187);
var y = cljs.core.first(arglist__13187);
var more = cljs.core.rest(arglist__13187);
return G__13185__delegate(x,y,more);
});
G__13185.cljs$core$IFn$_invoke$arity$variadic = G__13185__delegate;
return G__13185;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__13188 = null;
if (arguments.length > 2) {
var G__13189__i = 0, G__13189__a = new Array(arguments.length -  2);
while (G__13189__i < G__13189__a.length) {G__13189__a[G__13189__i] = arguments[G__13189__i + 2]; ++G__13189__i;}
G__13188 = new cljs.core.IndexedSeq(G__13189__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t13193 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t13193 = (function (nil_iter,meta13194){
this.nil_iter = nil_iter;
this.meta13194 = meta13194;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t13193.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t13193.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t13193.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t13193.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_13195){
var self__ = this;
var _13195__$1 = this;
return self__.meta13194;
});

cljs.core.t13193.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_13195,meta13194__$1){
var self__ = this;
var _13195__$1 = this;
return (new cljs.core.t13193(self__.nil_iter,meta13194__$1));
});

cljs.core.t13193.cljs$lang$type = true;

cljs.core.t13193.cljs$lang$ctorStr = "cljs.core/t13193";

cljs.core.t13193.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/t13193");
});

cljs.core.__GT_t13193 = (function __GT_t13193(nil_iter__$1,meta13194){
return (new cljs.core.t13193(nil_iter__$1,meta13194));
});

}

return (new cljs.core.t13193(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8,54,cljs.core.constant$keyword$9,3067,cljs.core.constant$keyword$10,3,cljs.core.constant$keyword$11,3063,cljs.core.constant$keyword$12,"/home/catonano/.boot/cache/tmp/home/catonano/Taranto/hoplon.io/hoplon.io/kzx/wl22oq/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3570__auto__ = !((lt.stepper == null));
if(and__3570__auto__){
return self__.iter.hasNext();
} else {
return and__3570__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__13196 = lt;
var G__13197 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13196,G__13197) : self__.xform.call(null,G__13196,G__13197));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13198 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13198) : self__.xform.call(null,G__13198));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__13200 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13200) : xform.call(null,G__13200));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__13202 = cljs.core.next(iters__$1);
iters__$1 = G__13202;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4469__auto___13203 = self__.iters.length;
var i_13204 = (0);
while(true){
if((i_13204 < n__4469__auto___13203)){
(self__.nexts[i_13204] = (self__.iters[i_13204]).next());

var G__13205 = (i_13204 + (1));
i_13204 = G__13205;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3570__auto__ = !((lt.stepper == null));
if(and__3570__auto__){
return this$.hasNext();
} else {
return and__3570__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13201 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13201) : self__.xform.call(null,G__13201));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__13210 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13210) : xform.call(null,G__13210));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__13211_13215 = cljs.core.seq(colls);
var chunk__13212_13216 = null;
var count__13213_13217 = (0);
var i__13214_13218 = (0);
while(true){
if((i__13214_13218 < count__13213_13217)){
var coll_13219 = chunk__13212_13216.cljs$core$IIndexed$_nth$arity$2(null,i__13214_13218);
iters.push(cljs.core.iter(coll_13219));

var G__13220 = seq__13211_13215;
var G__13221 = chunk__13212_13216;
var G__13222 = count__13213_13217;
var G__13223 = (i__13214_13218 + (1));
seq__13211_13215 = G__13220;
chunk__13212_13216 = G__13221;
count__13213_13217 = G__13222;
i__13214_13218 = G__13223;
continue;
} else {
var temp__4126__auto___13224 = cljs.core.seq(seq__13211_13215);
if(temp__4126__auto___13224){
var seq__13211_13225__$1 = temp__4126__auto___13224;
if(cljs.core.chunked_seq_QMARK_(seq__13211_13225__$1)){
var c__4369__auto___13226 = cljs.core.chunk_first(seq__13211_13225__$1);
var G__13227 = cljs.core.chunk_rest(seq__13211_13225__$1);
var G__13228 = c__4369__auto___13226;
var G__13229 = cljs.core.count(c__4369__auto___13226);
var G__13230 = (0);
seq__13211_13215 = G__13227;
chunk__13212_13216 = G__13228;
count__13213_13217 = G__13229;
i__13214_13218 = G__13230;
continue;
} else {
var coll_13231 = cljs.core.first(seq__13211_13225__$1);
iters.push(cljs.core.iter(coll_13231));

var G__13232 = cljs.core.next(seq__13211_13225__$1);
var G__13233 = null;
var G__13234 = (0);
var G__13235 = (0);
seq__13211_13215 = G__13232;
chunk__13212_13216 = G__13233;
count__13213_13217 = G__13234;
i__13214_13218 = G__13235;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3582__auto__ = cljs.core.seq(coll);
if(or__3582__auto__){
return or__3582__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__13236__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__13236 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__13237__i = 0, G__13237__a = new Array(arguments.length -  2);
while (G__13237__i < G__13237__a.length) {G__13237__a[G__13237__i] = arguments[G__13237__i + 2]; ++G__13237__i;}
  colls = new cljs.core.IndexedSeq(G__13237__a,0);
} 
return G__13236__delegate.call(this,xform,coll,colls);};
G__13236.cljs$lang$maxFixedArity = 2;
G__13236.cljs$lang$applyTo = (function (arglist__13238){
var xform = cljs.core.first(arglist__13238);
arglist__13238 = cljs.core.next(arglist__13238);
var coll = cljs.core.first(arglist__13238);
var colls = cljs.core.rest(arglist__13238);
return G__13236__delegate(xform,coll,colls);
});
G__13236.cljs$core$IFn$_invoke$arity$variadic = G__13236__delegate;
return G__13236;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__13239 = null;
if (arguments.length > 2) {
var G__13240__i = 0, G__13240__a = new Array(arguments.length -  2);
while (G__13240__i < G__13240__a.length) {G__13240__a[G__13240__i] = arguments[G__13240__i + 2]; ++G__13240__i;}
G__13239 = new cljs.core.IndexedSeq(G__13240__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__13239);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__13242 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13242) : pred.call(null,G__13242));
})())){
var G__13243 = pred;
var G__13244 = cljs.core.next(coll);
pred = G__13243;
coll = G__13244;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3582__auto__ = (function (){var G__13248 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13248) : pred.call(null,G__13248));
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var G__13249 = pred;
var G__13250 = cljs.core.next(coll);
pred = G__13249;
coll = G__13250;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__13257 = null;
var G__13257__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__13257__1 = (function (x){
return cljs.core.not((function (){var G__13254 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13254) : f.call(null,G__13254));
})());
});
var G__13257__2 = (function (x,y){
return cljs.core.not((function (){var G__13255 = x;
var G__13256 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13255,G__13256) : f.call(null,G__13255,G__13256));
})());
});
var G__13257__3 = (function() { 
var G__13258__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__13258 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13259__i = 0, G__13259__a = new Array(arguments.length -  2);
while (G__13259__i < G__13259__a.length) {G__13259__a[G__13259__i] = arguments[G__13259__i + 2]; ++G__13259__i;}
  zs = new cljs.core.IndexedSeq(G__13259__a,0);
} 
return G__13258__delegate.call(this,x,y,zs);};
G__13258.cljs$lang$maxFixedArity = 2;
G__13258.cljs$lang$applyTo = (function (arglist__13260){
var x = cljs.core.first(arglist__13260);
arglist__13260 = cljs.core.next(arglist__13260);
var y = cljs.core.first(arglist__13260);
var zs = cljs.core.rest(arglist__13260);
return G__13258__delegate(x,y,zs);
});
G__13258.cljs$core$IFn$_invoke$arity$variadic = G__13258__delegate;
return G__13258;
})()
;
G__13257 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__13257__0.call(this);
case 1:
return G__13257__1.call(this,x);
case 2:
return G__13257__2.call(this,x,y);
default:
var G__13261 = null;
if (arguments.length > 2) {
var G__13262__i = 0, G__13262__a = new Array(arguments.length -  2);
while (G__13262__i < G__13262__a.length) {G__13262__a[G__13262__i] = arguments[G__13262__i + 2]; ++G__13262__i;}
G__13261 = new cljs.core.IndexedSeq(G__13262__a,0);
}
return G__13257__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13261);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13257.cljs$lang$maxFixedArity = 2;
G__13257.cljs$lang$applyTo = G__13257__3.cljs$lang$applyTo;
G__13257.cljs$core$IFn$_invoke$arity$0 = G__13257__0;
G__13257.cljs$core$IFn$_invoke$arity$1 = G__13257__1;
G__13257.cljs$core$IFn$_invoke$arity$2 = G__13257__2;
G__13257.cljs$core$IFn$_invoke$arity$variadic = G__13257__3.cljs$core$IFn$_invoke$arity$variadic;
return G__13257;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__13263__delegate = function (args){
return x;
};
var G__13263 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13264__i = 0, G__13264__a = new Array(arguments.length -  0);
while (G__13264__i < G__13264__a.length) {G__13264__a[G__13264__i] = arguments[G__13264__i + 0]; ++G__13264__i;}
  args = new cljs.core.IndexedSeq(G__13264__a,0);
} 
return G__13263__delegate.call(this,args);};
G__13263.cljs$lang$maxFixedArity = 0;
G__13263.cljs$lang$applyTo = (function (arglist__13265){
var args = cljs.core.seq(arglist__13265);
return G__13263__delegate(args);
});
G__13263.cljs$core$IFn$_invoke$arity$variadic = G__13263__delegate;
return G__13263;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__13320 = null;
var G__13320__0 = (function (){
var G__13293 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13293) : f.call(null,G__13293));
});
var G__13320__1 = (function (x){
var G__13294 = (function (){var G__13295 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13295) : g.call(null,G__13295));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13294) : f.call(null,G__13294));
});
var G__13320__2 = (function (x,y){
var G__13296 = (function (){var G__13297 = x;
var G__13298 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13297,G__13298) : g.call(null,G__13297,G__13298));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13296) : f.call(null,G__13296));
});
var G__13320__3 = (function (x,y,z){
var G__13299 = (function (){var G__13300 = x;
var G__13301 = y;
var G__13302 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13300,G__13301,G__13302) : g.call(null,G__13300,G__13301,G__13302));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13299) : f.call(null,G__13299));
});
var G__13320__4 = (function() { 
var G__13321__delegate = function (x,y,z,args){
var G__13303 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13303) : f.call(null,G__13303));
};
var G__13321 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13322__i = 0, G__13322__a = new Array(arguments.length -  3);
while (G__13322__i < G__13322__a.length) {G__13322__a[G__13322__i] = arguments[G__13322__i + 3]; ++G__13322__i;}
  args = new cljs.core.IndexedSeq(G__13322__a,0);
} 
return G__13321__delegate.call(this,x,y,z,args);};
G__13321.cljs$lang$maxFixedArity = 3;
G__13321.cljs$lang$applyTo = (function (arglist__13323){
var x = cljs.core.first(arglist__13323);
arglist__13323 = cljs.core.next(arglist__13323);
var y = cljs.core.first(arglist__13323);
arglist__13323 = cljs.core.next(arglist__13323);
var z = cljs.core.first(arglist__13323);
var args = cljs.core.rest(arglist__13323);
return G__13321__delegate(x,y,z,args);
});
G__13321.cljs$core$IFn$_invoke$arity$variadic = G__13321__delegate;
return G__13321;
})()
;
G__13320 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13320__0.call(this);
case 1:
return G__13320__1.call(this,x);
case 2:
return G__13320__2.call(this,x,y);
case 3:
return G__13320__3.call(this,x,y,z);
default:
var G__13324 = null;
if (arguments.length > 3) {
var G__13325__i = 0, G__13325__a = new Array(arguments.length -  3);
while (G__13325__i < G__13325__a.length) {G__13325__a[G__13325__i] = arguments[G__13325__i + 3]; ++G__13325__i;}
G__13324 = new cljs.core.IndexedSeq(G__13325__a,0);
}
return G__13320__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13320.cljs$lang$maxFixedArity = 3;
G__13320.cljs$lang$applyTo = G__13320__4.cljs$lang$applyTo;
G__13320.cljs$core$IFn$_invoke$arity$0 = G__13320__0;
G__13320.cljs$core$IFn$_invoke$arity$1 = G__13320__1;
G__13320.cljs$core$IFn$_invoke$arity$2 = G__13320__2;
G__13320.cljs$core$IFn$_invoke$arity$3 = G__13320__3;
G__13320.cljs$core$IFn$_invoke$arity$variadic = G__13320__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13320;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__13326 = null;
var G__13326__0 = (function (){
var G__13304 = (function (){var G__13305 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13305) : g.call(null,G__13305));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13304) : f.call(null,G__13304));
});
var G__13326__1 = (function (x){
var G__13306 = (function (){var G__13307 = (function (){var G__13308 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13308) : h.call(null,G__13308));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13307) : g.call(null,G__13307));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13306) : f.call(null,G__13306));
});
var G__13326__2 = (function (x,y){
var G__13309 = (function (){var G__13310 = (function (){var G__13311 = x;
var G__13312 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13311,G__13312) : h.call(null,G__13311,G__13312));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13310) : g.call(null,G__13310));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13309) : f.call(null,G__13309));
});
var G__13326__3 = (function (x,y,z){
var G__13313 = (function (){var G__13314 = (function (){var G__13315 = x;
var G__13316 = y;
var G__13317 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13315,G__13316,G__13317) : h.call(null,G__13315,G__13316,G__13317));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13314) : g.call(null,G__13314));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13313) : f.call(null,G__13313));
});
var G__13326__4 = (function() { 
var G__13327__delegate = function (x,y,z,args){
var G__13318 = (function (){var G__13319 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13319) : g.call(null,G__13319));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13318) : f.call(null,G__13318));
};
var G__13327 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13328__i = 0, G__13328__a = new Array(arguments.length -  3);
while (G__13328__i < G__13328__a.length) {G__13328__a[G__13328__i] = arguments[G__13328__i + 3]; ++G__13328__i;}
  args = new cljs.core.IndexedSeq(G__13328__a,0);
} 
return G__13327__delegate.call(this,x,y,z,args);};
G__13327.cljs$lang$maxFixedArity = 3;
G__13327.cljs$lang$applyTo = (function (arglist__13329){
var x = cljs.core.first(arglist__13329);
arglist__13329 = cljs.core.next(arglist__13329);
var y = cljs.core.first(arglist__13329);
arglist__13329 = cljs.core.next(arglist__13329);
var z = cljs.core.first(arglist__13329);
var args = cljs.core.rest(arglist__13329);
return G__13327__delegate(x,y,z,args);
});
G__13327.cljs$core$IFn$_invoke$arity$variadic = G__13327__delegate;
return G__13327;
})()
;
G__13326 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13326__0.call(this);
case 1:
return G__13326__1.call(this,x);
case 2:
return G__13326__2.call(this,x,y);
case 3:
return G__13326__3.call(this,x,y,z);
default:
var G__13330 = null;
if (arguments.length > 3) {
var G__13331__i = 0, G__13331__a = new Array(arguments.length -  3);
while (G__13331__i < G__13331__a.length) {G__13331__a[G__13331__i] = arguments[G__13331__i + 3]; ++G__13331__i;}
G__13330 = new cljs.core.IndexedSeq(G__13331__a,0);
}
return G__13326__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13326.cljs$lang$maxFixedArity = 3;
G__13326.cljs$lang$applyTo = G__13326__4.cljs$lang$applyTo;
G__13326.cljs$core$IFn$_invoke$arity$0 = G__13326__0;
G__13326.cljs$core$IFn$_invoke$arity$1 = G__13326__1;
G__13326.cljs$core$IFn$_invoke$arity$2 = G__13326__2;
G__13326.cljs$core$IFn$_invoke$arity$3 = G__13326__3;
G__13326.cljs$core$IFn$_invoke$arity$variadic = G__13326__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13326;
})()
});
var comp__4 = (function() { 
var G__13332__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__13333__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__13334 = cljs.core.first(fs__$2).call(null,ret);
var G__13335 = cljs.core.next(fs__$2);
ret = G__13334;
fs__$2 = G__13335;
continue;
} else {
return ret;
}
break;
}
};
var G__13333 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13336__i = 0, G__13336__a = new Array(arguments.length -  0);
while (G__13336__i < G__13336__a.length) {G__13336__a[G__13336__i] = arguments[G__13336__i + 0]; ++G__13336__i;}
  args = new cljs.core.IndexedSeq(G__13336__a,0);
} 
return G__13333__delegate.call(this,args);};
G__13333.cljs$lang$maxFixedArity = 0;
G__13333.cljs$lang$applyTo = (function (arglist__13337){
var args = cljs.core.seq(arglist__13337);
return G__13333__delegate(args);
});
G__13333.cljs$core$IFn$_invoke$arity$variadic = G__13333__delegate;
return G__13333;
})()
;
;})(fs__$1))
};
var G__13332 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__13338__i = 0, G__13338__a = new Array(arguments.length -  3);
while (G__13338__i < G__13338__a.length) {G__13338__a[G__13338__i] = arguments[G__13338__i + 3]; ++G__13338__i;}
  fs = new cljs.core.IndexedSeq(G__13338__a,0);
} 
return G__13332__delegate.call(this,f1,f2,f3,fs);};
G__13332.cljs$lang$maxFixedArity = 3;
G__13332.cljs$lang$applyTo = (function (arglist__13339){
var f1 = cljs.core.first(arglist__13339);
arglist__13339 = cljs.core.next(arglist__13339);
var f2 = cljs.core.first(arglist__13339);
arglist__13339 = cljs.core.next(arglist__13339);
var f3 = cljs.core.first(arglist__13339);
var fs = cljs.core.rest(arglist__13339);
return G__13332__delegate(f1,f2,f3,fs);
});
G__13332.cljs$core$IFn$_invoke$arity$variadic = G__13332__delegate;
return G__13332;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__13340 = null;
if (arguments.length > 3) {
var G__13341__i = 0, G__13341__a = new Array(arguments.length -  3);
while (G__13341__i < G__13341__a.length) {G__13341__a[G__13341__i] = arguments[G__13341__i + 3]; ++G__13341__i;}
G__13340 = new cljs.core.IndexedSeq(G__13341__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__13340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__13426 = null;
var G__13426__0 = (function (){
var G__13384 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13384) : f.call(null,G__13384));
});
var G__13426__1 = (function (x){
var G__13385 = arg1;
var G__13386 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13385,G__13386) : f.call(null,G__13385,G__13386));
});
var G__13426__2 = (function (x,y){
var G__13387 = arg1;
var G__13388 = x;
var G__13389 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13387,G__13388,G__13389) : f.call(null,G__13387,G__13388,G__13389));
});
var G__13426__3 = (function (x,y,z){
var G__13390 = arg1;
var G__13391 = x;
var G__13392 = y;
var G__13393 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13390,G__13391,G__13392,G__13393) : f.call(null,G__13390,G__13391,G__13392,G__13393));
});
var G__13426__4 = (function() { 
var G__13427__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__13427 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13428__i = 0, G__13428__a = new Array(arguments.length -  3);
while (G__13428__i < G__13428__a.length) {G__13428__a[G__13428__i] = arguments[G__13428__i + 3]; ++G__13428__i;}
  args = new cljs.core.IndexedSeq(G__13428__a,0);
} 
return G__13427__delegate.call(this,x,y,z,args);};
G__13427.cljs$lang$maxFixedArity = 3;
G__13427.cljs$lang$applyTo = (function (arglist__13429){
var x = cljs.core.first(arglist__13429);
arglist__13429 = cljs.core.next(arglist__13429);
var y = cljs.core.first(arglist__13429);
arglist__13429 = cljs.core.next(arglist__13429);
var z = cljs.core.first(arglist__13429);
var args = cljs.core.rest(arglist__13429);
return G__13427__delegate(x,y,z,args);
});
G__13427.cljs$core$IFn$_invoke$arity$variadic = G__13427__delegate;
return G__13427;
})()
;
G__13426 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13426__0.call(this);
case 1:
return G__13426__1.call(this,x);
case 2:
return G__13426__2.call(this,x,y);
case 3:
return G__13426__3.call(this,x,y,z);
default:
var G__13430 = null;
if (arguments.length > 3) {
var G__13431__i = 0, G__13431__a = new Array(arguments.length -  3);
while (G__13431__i < G__13431__a.length) {G__13431__a[G__13431__i] = arguments[G__13431__i + 3]; ++G__13431__i;}
G__13430 = new cljs.core.IndexedSeq(G__13431__a,0);
}
return G__13426__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13430);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13426.cljs$lang$maxFixedArity = 3;
G__13426.cljs$lang$applyTo = G__13426__4.cljs$lang$applyTo;
G__13426.cljs$core$IFn$_invoke$arity$0 = G__13426__0;
G__13426.cljs$core$IFn$_invoke$arity$1 = G__13426__1;
G__13426.cljs$core$IFn$_invoke$arity$2 = G__13426__2;
G__13426.cljs$core$IFn$_invoke$arity$3 = G__13426__3;
G__13426.cljs$core$IFn$_invoke$arity$variadic = G__13426__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13426;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__13432 = null;
var G__13432__0 = (function (){
var G__13394 = arg1;
var G__13395 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13394,G__13395) : f.call(null,G__13394,G__13395));
});
var G__13432__1 = (function (x){
var G__13396 = arg1;
var G__13397 = arg2;
var G__13398 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13396,G__13397,G__13398) : f.call(null,G__13396,G__13397,G__13398));
});
var G__13432__2 = (function (x,y){
var G__13399 = arg1;
var G__13400 = arg2;
var G__13401 = x;
var G__13402 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13399,G__13400,G__13401,G__13402) : f.call(null,G__13399,G__13400,G__13401,G__13402));
});
var G__13432__3 = (function (x,y,z){
var G__13403 = arg1;
var G__13404 = arg2;
var G__13405 = x;
var G__13406 = y;
var G__13407 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13403,G__13404,G__13405,G__13406,G__13407) : f.call(null,G__13403,G__13404,G__13405,G__13406,G__13407));
});
var G__13432__4 = (function() { 
var G__13433__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__13433 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13434__i = 0, G__13434__a = new Array(arguments.length -  3);
while (G__13434__i < G__13434__a.length) {G__13434__a[G__13434__i] = arguments[G__13434__i + 3]; ++G__13434__i;}
  args = new cljs.core.IndexedSeq(G__13434__a,0);
} 
return G__13433__delegate.call(this,x,y,z,args);};
G__13433.cljs$lang$maxFixedArity = 3;
G__13433.cljs$lang$applyTo = (function (arglist__13435){
var x = cljs.core.first(arglist__13435);
arglist__13435 = cljs.core.next(arglist__13435);
var y = cljs.core.first(arglist__13435);
arglist__13435 = cljs.core.next(arglist__13435);
var z = cljs.core.first(arglist__13435);
var args = cljs.core.rest(arglist__13435);
return G__13433__delegate(x,y,z,args);
});
G__13433.cljs$core$IFn$_invoke$arity$variadic = G__13433__delegate;
return G__13433;
})()
;
G__13432 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13432__0.call(this);
case 1:
return G__13432__1.call(this,x);
case 2:
return G__13432__2.call(this,x,y);
case 3:
return G__13432__3.call(this,x,y,z);
default:
var G__13436 = null;
if (arguments.length > 3) {
var G__13437__i = 0, G__13437__a = new Array(arguments.length -  3);
while (G__13437__i < G__13437__a.length) {G__13437__a[G__13437__i] = arguments[G__13437__i + 3]; ++G__13437__i;}
G__13436 = new cljs.core.IndexedSeq(G__13437__a,0);
}
return G__13432__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13432.cljs$lang$maxFixedArity = 3;
G__13432.cljs$lang$applyTo = G__13432__4.cljs$lang$applyTo;
G__13432.cljs$core$IFn$_invoke$arity$0 = G__13432__0;
G__13432.cljs$core$IFn$_invoke$arity$1 = G__13432__1;
G__13432.cljs$core$IFn$_invoke$arity$2 = G__13432__2;
G__13432.cljs$core$IFn$_invoke$arity$3 = G__13432__3;
G__13432.cljs$core$IFn$_invoke$arity$variadic = G__13432__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13432;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__13438 = null;
var G__13438__0 = (function (){
var G__13408 = arg1;
var G__13409 = arg2;
var G__13410 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13408,G__13409,G__13410) : f.call(null,G__13408,G__13409,G__13410));
});
var G__13438__1 = (function (x){
var G__13411 = arg1;
var G__13412 = arg2;
var G__13413 = arg3;
var G__13414 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13411,G__13412,G__13413,G__13414) : f.call(null,G__13411,G__13412,G__13413,G__13414));
});
var G__13438__2 = (function (x,y){
var G__13415 = arg1;
var G__13416 = arg2;
var G__13417 = arg3;
var G__13418 = x;
var G__13419 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13415,G__13416,G__13417,G__13418,G__13419) : f.call(null,G__13415,G__13416,G__13417,G__13418,G__13419));
});
var G__13438__3 = (function (x,y,z){
var G__13420 = arg1;
var G__13421 = arg2;
var G__13422 = arg3;
var G__13423 = x;
var G__13424 = y;
var G__13425 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13420,G__13421,G__13422,G__13423,G__13424,G__13425) : f.call(null,G__13420,G__13421,G__13422,G__13423,G__13424,G__13425));
});
var G__13438__4 = (function() { 
var G__13439__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__13439 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13440__i = 0, G__13440__a = new Array(arguments.length -  3);
while (G__13440__i < G__13440__a.length) {G__13440__a[G__13440__i] = arguments[G__13440__i + 3]; ++G__13440__i;}
  args = new cljs.core.IndexedSeq(G__13440__a,0);
} 
return G__13439__delegate.call(this,x,y,z,args);};
G__13439.cljs$lang$maxFixedArity = 3;
G__13439.cljs$lang$applyTo = (function (arglist__13441){
var x = cljs.core.first(arglist__13441);
arglist__13441 = cljs.core.next(arglist__13441);
var y = cljs.core.first(arglist__13441);
arglist__13441 = cljs.core.next(arglist__13441);
var z = cljs.core.first(arglist__13441);
var args = cljs.core.rest(arglist__13441);
return G__13439__delegate(x,y,z,args);
});
G__13439.cljs$core$IFn$_invoke$arity$variadic = G__13439__delegate;
return G__13439;
})()
;
G__13438 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13438__0.call(this);
case 1:
return G__13438__1.call(this,x);
case 2:
return G__13438__2.call(this,x,y);
case 3:
return G__13438__3.call(this,x,y,z);
default:
var G__13442 = null;
if (arguments.length > 3) {
var G__13443__i = 0, G__13443__a = new Array(arguments.length -  3);
while (G__13443__i < G__13443__a.length) {G__13443__a[G__13443__i] = arguments[G__13443__i + 3]; ++G__13443__i;}
G__13442 = new cljs.core.IndexedSeq(G__13443__a,0);
}
return G__13438__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13442);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13438.cljs$lang$maxFixedArity = 3;
G__13438.cljs$lang$applyTo = G__13438__4.cljs$lang$applyTo;
G__13438.cljs$core$IFn$_invoke$arity$0 = G__13438__0;
G__13438.cljs$core$IFn$_invoke$arity$1 = G__13438__1;
G__13438.cljs$core$IFn$_invoke$arity$2 = G__13438__2;
G__13438.cljs$core$IFn$_invoke$arity$3 = G__13438__3;
G__13438.cljs$core$IFn$_invoke$arity$variadic = G__13438__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13438;
})()
});
var partial__5 = (function() { 
var G__13444__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__13445__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__13445 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13446__i = 0, G__13446__a = new Array(arguments.length -  0);
while (G__13446__i < G__13446__a.length) {G__13446__a[G__13446__i] = arguments[G__13446__i + 0]; ++G__13446__i;}
  args = new cljs.core.IndexedSeq(G__13446__a,0);
} 
return G__13445__delegate.call(this,args);};
G__13445.cljs$lang$maxFixedArity = 0;
G__13445.cljs$lang$applyTo = (function (arglist__13447){
var args = cljs.core.seq(arglist__13447);
return G__13445__delegate(args);
});
G__13445.cljs$core$IFn$_invoke$arity$variadic = G__13445__delegate;
return G__13445;
})()
;
};
var G__13444 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__13448__i = 0, G__13448__a = new Array(arguments.length -  4);
while (G__13448__i < G__13448__a.length) {G__13448__a[G__13448__i] = arguments[G__13448__i + 4]; ++G__13448__i;}
  more = new cljs.core.IndexedSeq(G__13448__a,0);
} 
return G__13444__delegate.call(this,f,arg1,arg2,arg3,more);};
G__13444.cljs$lang$maxFixedArity = 4;
G__13444.cljs$lang$applyTo = (function (arglist__13449){
var f = cljs.core.first(arglist__13449);
arglist__13449 = cljs.core.next(arglist__13449);
var arg1 = cljs.core.first(arglist__13449);
arglist__13449 = cljs.core.next(arglist__13449);
var arg2 = cljs.core.first(arglist__13449);
arglist__13449 = cljs.core.next(arglist__13449);
var arg3 = cljs.core.first(arglist__13449);
var more = cljs.core.rest(arglist__13449);
return G__13444__delegate(f,arg1,arg2,arg3,more);
});
G__13444.cljs$core$IFn$_invoke$arity$variadic = G__13444__delegate;
return G__13444;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__13450 = null;
if (arguments.length > 4) {
var G__13451__i = 0, G__13451__a = new Array(arguments.length -  4);
while (G__13451__i < G__13451__a.length) {G__13451__a[G__13451__i] = arguments[G__13451__i + 4]; ++G__13451__i;}
G__13450 = new cljs.core.IndexedSeq(G__13451__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__13450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__13484 = null;
var G__13484__1 = (function (a){
var G__13468 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13468) : f.call(null,G__13468));
});
var G__13484__2 = (function (a,b){
var G__13469 = (((a == null))?x:a);
var G__13470 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13469,G__13470) : f.call(null,G__13469,G__13470));
});
var G__13484__3 = (function (a,b,c){
var G__13471 = (((a == null))?x:a);
var G__13472 = b;
var G__13473 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13471,G__13472,G__13473) : f.call(null,G__13471,G__13472,G__13473));
});
var G__13484__4 = (function() { 
var G__13485__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__13485 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13486__i = 0, G__13486__a = new Array(arguments.length -  3);
while (G__13486__i < G__13486__a.length) {G__13486__a[G__13486__i] = arguments[G__13486__i + 3]; ++G__13486__i;}
  ds = new cljs.core.IndexedSeq(G__13486__a,0);
} 
return G__13485__delegate.call(this,a,b,c,ds);};
G__13485.cljs$lang$maxFixedArity = 3;
G__13485.cljs$lang$applyTo = (function (arglist__13487){
var a = cljs.core.first(arglist__13487);
arglist__13487 = cljs.core.next(arglist__13487);
var b = cljs.core.first(arglist__13487);
arglist__13487 = cljs.core.next(arglist__13487);
var c = cljs.core.first(arglist__13487);
var ds = cljs.core.rest(arglist__13487);
return G__13485__delegate(a,b,c,ds);
});
G__13485.cljs$core$IFn$_invoke$arity$variadic = G__13485__delegate;
return G__13485;
})()
;
G__13484 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__13484__1.call(this,a);
case 2:
return G__13484__2.call(this,a,b);
case 3:
return G__13484__3.call(this,a,b,c);
default:
var G__13488 = null;
if (arguments.length > 3) {
var G__13489__i = 0, G__13489__a = new Array(arguments.length -  3);
while (G__13489__i < G__13489__a.length) {G__13489__a[G__13489__i] = arguments[G__13489__i + 3]; ++G__13489__i;}
G__13488 = new cljs.core.IndexedSeq(G__13489__a,0);
}
return G__13484__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13488);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13484.cljs$lang$maxFixedArity = 3;
G__13484.cljs$lang$applyTo = G__13484__4.cljs$lang$applyTo;
G__13484.cljs$core$IFn$_invoke$arity$1 = G__13484__1;
G__13484.cljs$core$IFn$_invoke$arity$2 = G__13484__2;
G__13484.cljs$core$IFn$_invoke$arity$3 = G__13484__3;
G__13484.cljs$core$IFn$_invoke$arity$variadic = G__13484__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13484;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__13490 = null;
var G__13490__2 = (function (a,b){
var G__13474 = (((a == null))?x:a);
var G__13475 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13474,G__13475) : f.call(null,G__13474,G__13475));
});
var G__13490__3 = (function (a,b,c){
var G__13476 = (((a == null))?x:a);
var G__13477 = (((b == null))?y:b);
var G__13478 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13476,G__13477,G__13478) : f.call(null,G__13476,G__13477,G__13478));
});
var G__13490__4 = (function() { 
var G__13491__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__13491 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13492__i = 0, G__13492__a = new Array(arguments.length -  3);
while (G__13492__i < G__13492__a.length) {G__13492__a[G__13492__i] = arguments[G__13492__i + 3]; ++G__13492__i;}
  ds = new cljs.core.IndexedSeq(G__13492__a,0);
} 
return G__13491__delegate.call(this,a,b,c,ds);};
G__13491.cljs$lang$maxFixedArity = 3;
G__13491.cljs$lang$applyTo = (function (arglist__13493){
var a = cljs.core.first(arglist__13493);
arglist__13493 = cljs.core.next(arglist__13493);
var b = cljs.core.first(arglist__13493);
arglist__13493 = cljs.core.next(arglist__13493);
var c = cljs.core.first(arglist__13493);
var ds = cljs.core.rest(arglist__13493);
return G__13491__delegate(a,b,c,ds);
});
G__13491.cljs$core$IFn$_invoke$arity$variadic = G__13491__delegate;
return G__13491;
})()
;
G__13490 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13490__2.call(this,a,b);
case 3:
return G__13490__3.call(this,a,b,c);
default:
var G__13494 = null;
if (arguments.length > 3) {
var G__13495__i = 0, G__13495__a = new Array(arguments.length -  3);
while (G__13495__i < G__13495__a.length) {G__13495__a[G__13495__i] = arguments[G__13495__i + 3]; ++G__13495__i;}
G__13494 = new cljs.core.IndexedSeq(G__13495__a,0);
}
return G__13490__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13494);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13490.cljs$lang$maxFixedArity = 3;
G__13490.cljs$lang$applyTo = G__13490__4.cljs$lang$applyTo;
G__13490.cljs$core$IFn$_invoke$arity$2 = G__13490__2;
G__13490.cljs$core$IFn$_invoke$arity$3 = G__13490__3;
G__13490.cljs$core$IFn$_invoke$arity$variadic = G__13490__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13490;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__13496 = null;
var G__13496__2 = (function (a,b){
var G__13479 = (((a == null))?x:a);
var G__13480 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13479,G__13480) : f.call(null,G__13479,G__13480));
});
var G__13496__3 = (function (a,b,c){
var G__13481 = (((a == null))?x:a);
var G__13482 = (((b == null))?y:b);
var G__13483 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13481,G__13482,G__13483) : f.call(null,G__13481,G__13482,G__13483));
});
var G__13496__4 = (function() { 
var G__13497__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__13497 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13498__i = 0, G__13498__a = new Array(arguments.length -  3);
while (G__13498__i < G__13498__a.length) {G__13498__a[G__13498__i] = arguments[G__13498__i + 3]; ++G__13498__i;}
  ds = new cljs.core.IndexedSeq(G__13498__a,0);
} 
return G__13497__delegate.call(this,a,b,c,ds);};
G__13497.cljs$lang$maxFixedArity = 3;
G__13497.cljs$lang$applyTo = (function (arglist__13499){
var a = cljs.core.first(arglist__13499);
arglist__13499 = cljs.core.next(arglist__13499);
var b = cljs.core.first(arglist__13499);
arglist__13499 = cljs.core.next(arglist__13499);
var c = cljs.core.first(arglist__13499);
var ds = cljs.core.rest(arglist__13499);
return G__13497__delegate(a,b,c,ds);
});
G__13497.cljs$core$IFn$_invoke$arity$variadic = G__13497__delegate;
return G__13497;
})()
;
G__13496 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13496__2.call(this,a,b);
case 3:
return G__13496__3.call(this,a,b,c);
default:
var G__13500 = null;
if (arguments.length > 3) {
var G__13501__i = 0, G__13501__a = new Array(arguments.length -  3);
while (G__13501__i < G__13501__a.length) {G__13501__a[G__13501__i] = arguments[G__13501__i + 3]; ++G__13501__i;}
G__13500 = new cljs.core.IndexedSeq(G__13501__a,0);
}
return G__13496__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13500);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13496.cljs$lang$maxFixedArity = 3;
G__13496.cljs$lang$applyTo = G__13496__4.cljs$lang$applyTo;
G__13496.cljs$core$IFn$_invoke$arity$2 = G__13496__2;
G__13496.cljs$core$IFn$_invoke$arity$3 = G__13496__3;
G__13496.cljs$core$IFn$_invoke$arity$variadic = G__13496__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13496;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__13532 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__13532) : cljs.core.volatile_BANG_.call(null,G__13532));
})();
return ((function (i){
return (function() {
var G__13562 = null;
var G__13562__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13562__1 = (function (result){
var G__13533 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13533) : rf.call(null,G__13533));
});
var G__13562__2 = (function (result,input){
var G__13534 = result;
var G__13535 = (function (){var G__13536 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__13537 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13536,G__13537) : f.call(null,G__13536,G__13537));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13534,G__13535) : rf.call(null,G__13534,G__13535));
});
G__13562 = function(result,input){
switch(arguments.length){
case 0:
return G__13562__0.call(this);
case 1:
return G__13562__1.call(this,result);
case 2:
return G__13562__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13562.cljs$core$IFn$_invoke$arity$0 = G__13562__0;
G__13562.cljs$core$IFn$_invoke$arity$1 = G__13562__1;
G__13562.cljs$core$IFn$_invoke$arity$2 = G__13562__2;
return G__13562;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4469__auto___13563 = size;
var i_13564 = (0);
while(true){
if((i_13564 < n__4469__auto___13563)){
cljs.core.chunk_append(b,(function (){var G__13558 = (idx + i_13564);
var G__13559 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13564);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13558,G__13559) : f.call(null,G__13558,G__13559));
})());

var G__13565 = (i_13564 + (1));
i_13564 = G__13565;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__13560 = idx;
var G__13561 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13560,G__13561) : f.call(null,G__13560,G__13561));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__13584 = null;
var G__13584__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13584__1 = (function (result){
var G__13578 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13578) : rf.call(null,G__13578));
});
var G__13584__2 = (function (result,input){
var v = (function (){var G__13579 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13579) : f.call(null,G__13579));
})();
if((v == null)){
return result;
} else {
var G__13580 = result;
var G__13581 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13580,G__13581) : rf.call(null,G__13580,G__13581));
}
});
G__13584 = function(result,input){
switch(arguments.length){
case 0:
return G__13584__0.call(this);
case 1:
return G__13584__1.call(this,result);
case 2:
return G__13584__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13584.cljs$core$IFn$_invoke$arity$0 = G__13584__0;
G__13584.cljs$core$IFn$_invoke$arity$1 = G__13584__1;
G__13584.cljs$core$IFn$_invoke$arity$2 = G__13584__2;
return G__13584;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4469__auto___13585 = size;
var i_13586 = (0);
while(true){
if((i_13586 < n__4469__auto___13585)){
var x_13587 = (function (){var G__13582 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13586);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13582) : f.call(null,G__13582));
})();
if((x_13587 == null)){
} else {
cljs.core.chunk_append(b,x_13587);
}

var G__13588 = (i_13586 + (1));
i_13586 = G__13588;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13583 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13583) : f.call(null,G__13583));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13589 = this$__$1;
return goog.getUid(G__13589);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__13590 = cljs.core.seq(self__.watches);
var chunk__13591 = null;
var count__13592 = (0);
var i__13593 = (0);
while(true){
if((i__13593 < count__13592)){
var vec__13594 = chunk__13591.cljs$core$IIndexed$_nth$arity$2(null,i__13593);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13594,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13594,(1),null);
var G__13595_13604 = key;
var G__13596_13605 = this$__$1;
var G__13597_13606 = oldval;
var G__13598_13607 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13595_13604,G__13596_13605,G__13597_13606,G__13598_13607) : f.call(null,G__13595_13604,G__13596_13605,G__13597_13606,G__13598_13607));

var G__13608 = seq__13590;
var G__13609 = chunk__13591;
var G__13610 = count__13592;
var G__13611 = (i__13593 + (1));
seq__13590 = G__13608;
chunk__13591 = G__13609;
count__13592 = G__13610;
i__13593 = G__13611;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13590);
if(temp__4126__auto__){
var seq__13590__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13590__$1)){
var c__4369__auto__ = cljs.core.chunk_first(seq__13590__$1);
var G__13612 = cljs.core.chunk_rest(seq__13590__$1);
var G__13613 = c__4369__auto__;
var G__13614 = cljs.core.count(c__4369__auto__);
var G__13615 = (0);
seq__13590 = G__13612;
chunk__13591 = G__13613;
count__13592 = G__13614;
i__13593 = G__13615;
continue;
} else {
var vec__13599 = cljs.core.first(seq__13590__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13599,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13599,(1),null);
var G__13600_13616 = key;
var G__13601_13617 = this$__$1;
var G__13602_13618 = oldval;
var G__13603_13619 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13600_13616,G__13601_13617,G__13602_13618,G__13603_13619) : f.call(null,G__13600_13616,G__13601_13617,G__13602_13618,G__13603_13619));

var G__13620 = cljs.core.next(seq__13590__$1);
var G__13621 = null;
var G__13622 = (0);
var G__13623 = (0);
seq__13590 = G__13620;
chunk__13591 = G__13621;
count__13592 = G__13622;
i__13593 = G__13623;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__13627__delegate = function (x,p__13624){
var map__13626 = p__13624;
var map__13626__$1 = ((cljs.core.seq_QMARK_(map__13626))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__13626):map__13626);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13626__$1,cljs.core.constant$keyword$13);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13626__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__13627 = function (x,var_args){
var p__13624 = null;
if (arguments.length > 1) {
var G__13628__i = 0, G__13628__a = new Array(arguments.length -  1);
while (G__13628__i < G__13628__a.length) {G__13628__a[G__13628__i] = arguments[G__13628__i + 1]; ++G__13628__i;}
  p__13624 = new cljs.core.IndexedSeq(G__13628__a,0);
} 
return G__13627__delegate.call(this,x,p__13624);};
G__13627.cljs$lang$maxFixedArity = 1;
G__13627.cljs$lang$applyTo = (function (arglist__13629){
var x = cljs.core.first(arglist__13629);
var p__13624 = cljs.core.rest(arglist__13629);
return G__13627__delegate(x,p__13624);
});
G__13627.cljs$core$IFn$_invoke$arity$variadic = G__13627__delegate;
return G__13627;
})()
;
atom = function(x,var_args){
var p__13624 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__13630 = null;
if (arguments.length > 1) {
var G__13631__i = 0, G__13631__a = new Array(arguments.length -  1);
while (G__13631__i < G__13631__a.length) {G__13631__a[G__13631__i] = arguments[G__13631__i + 1]; ++G__13631__i;}
G__13630 = new cljs.core.IndexedSeq(G__13631__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13630);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13638 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13638) : f.call(null,G__13638));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13639 = a.state;
var G__13640 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13639,G__13640) : f.call(null,G__13639,G__13640));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13641 = a.state;
var G__13642 = x;
var G__13643 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13641,G__13642,G__13643) : f.call(null,G__13641,G__13642,G__13643));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__13644__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__13644 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__13645__i = 0, G__13645__a = new Array(arguments.length -  4);
while (G__13645__i < G__13645__a.length) {G__13645__a[G__13645__i] = arguments[G__13645__i + 4]; ++G__13645__i;}
  more = new cljs.core.IndexedSeq(G__13645__a,0);
} 
return G__13644__delegate.call(this,a,f,x,y,more);};
G__13644.cljs$lang$maxFixedArity = 4;
G__13644.cljs$lang$applyTo = (function (arglist__13646){
var a = cljs.core.first(arglist__13646);
arglist__13646 = cljs.core.next(arglist__13646);
var f = cljs.core.first(arglist__13646);
arglist__13646 = cljs.core.next(arglist__13646);
var x = cljs.core.first(arglist__13646);
arglist__13646 = cljs.core.next(arglist__13646);
var y = cljs.core.first(arglist__13646);
var more = cljs.core.rest(arglist__13646);
return G__13644__delegate(a,f,x,y,more);
});
G__13644.cljs$core$IFn$_invoke$arity$variadic = G__13644__delegate;
return G__13644;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__13647 = null;
if (arguments.length > 4) {
var G__13648__i = 0, G__13648__a = new Array(arguments.length -  4);
while (G__13648__i < G__13648__a.length) {G__13648__a[G__13648__i] = arguments[G__13648__i + 4]; ++G__13648__i;}
G__13647 = new cljs.core.IndexedSeq(G__13648__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__13647);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__13715 = null;
var G__13715__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13715__1 = (function (result){
var G__13682 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13682) : rf.call(null,G__13682));
});
var G__13715__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__13683 = i;
var G__13684 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13683,G__13684) : f.call(null,G__13683,G__13684));
})();
if((v == null)){
return result;
} else {
var G__13685 = result;
var G__13686 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13685,G__13686) : rf.call(null,G__13685,G__13686));
}
});
G__13715 = function(result,input){
switch(arguments.length){
case 0:
return G__13715__0.call(this);
case 1:
return G__13715__1.call(this,result);
case 2:
return G__13715__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13715.cljs$core$IFn$_invoke$arity$0 = G__13715__0;
G__13715.cljs$core$IFn$_invoke$arity$1 = G__13715__1;
G__13715.cljs$core$IFn$_invoke$arity$2 = G__13715__2;
return G__13715;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4469__auto___13716 = size;
var i_13717 = (0);
while(true){
if((i_13717 < n__4469__auto___13716)){
var x_13718 = (function (){var G__13711 = (idx + i_13717);
var G__13712 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13717);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13711,G__13712) : f.call(null,G__13711,G__13712));
})();
if((x_13718 == null)){
} else {
cljs.core.chunk_append(b,x_13718);
}

var G__13719 = (i_13717 + (1));
i_13717 = G__13719;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13713 = idx;
var G__13714 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13713,G__13714) : f.call(null,G__13713,G__13714));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__13933 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13933) : p.call(null,G__13933));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3570__auto__ = (function (){var G__13935 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13935) : p.call(null,G__13935));
})();
if(cljs.core.truth_(and__3570__auto__)){
var G__13936 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13936) : p.call(null,G__13936));
} else {
return and__3570__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3570__auto__ = (function (){var G__13938 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13938) : p.call(null,G__13938));
})();
if(cljs.core.truth_(and__3570__auto__)){
var and__3570__auto____$1 = (function (){var G__13940 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13940) : p.call(null,G__13940));
})();
if(cljs.core.truth_(and__3570__auto____$1)){
var G__13941 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13941) : p.call(null,G__13941));
} else {
return and__3570__auto____$1;
}
} else {
return and__3570__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__14110__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__14110 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14111__i = 0, G__14111__a = new Array(arguments.length -  3);
while (G__14111__i < G__14111__a.length) {G__14111__a[G__14111__i] = arguments[G__14111__i + 3]; ++G__14111__i;}
  args = new cljs.core.IndexedSeq(G__14111__a,0);
} 
return G__14110__delegate.call(this,x,y,z,args);};
G__14110.cljs$lang$maxFixedArity = 3;
G__14110.cljs$lang$applyTo = (function (arglist__14112){
var x = cljs.core.first(arglist__14112);
arglist__14112 = cljs.core.next(arglist__14112);
var y = cljs.core.first(arglist__14112);
arglist__14112 = cljs.core.next(arglist__14112);
var z = cljs.core.first(arglist__14112);
var args = cljs.core.rest(arglist__14112);
return G__14110__delegate(x,y,z,args);
});
G__14110.cljs$core$IFn$_invoke$arity$variadic = G__14110__delegate;
return G__14110;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__14113 = null;
if (arguments.length > 3) {
var G__14114__i = 0, G__14114__a = new Array(arguments.length -  3);
while (G__14114__i < G__14114__a.length) {G__14114__a[G__14114__i] = arguments[G__14114__i + 3]; ++G__14114__i;}
G__14113 = new cljs.core.IndexedSeq(G__14114__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14113);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3570__auto__ = (function (){var G__13973 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13973) : p1.call(null,G__13973));
})();
if(cljs.core.truth_(and__3570__auto__)){
var G__13974 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13974) : p2.call(null,G__13974));
} else {
return and__3570__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3570__auto__ = (function (){var G__13976 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13976) : p1.call(null,G__13976));
})();
if(cljs.core.truth_(and__3570__auto__)){
var and__3570__auto____$1 = (function (){var G__13978 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13978) : p1.call(null,G__13978));
})();
if(cljs.core.truth_(and__3570__auto____$1)){
var and__3570__auto____$2 = (function (){var G__13980 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13980) : p2.call(null,G__13980));
})();
if(cljs.core.truth_(and__3570__auto____$2)){
var G__13981 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13981) : p2.call(null,G__13981));
} else {
return and__3570__auto____$2;
}
} else {
return and__3570__auto____$1;
}
} else {
return and__3570__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3570__auto__ = (function (){var G__13983 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13983) : p1.call(null,G__13983));
})();
if(cljs.core.truth_(and__3570__auto__)){
var and__3570__auto____$1 = (function (){var G__13985 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13985) : p1.call(null,G__13985));
})();
if(cljs.core.truth_(and__3570__auto____$1)){
var and__3570__auto____$2 = (function (){var G__13987 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13987) : p1.call(null,G__13987));
})();
if(cljs.core.truth_(and__3570__auto____$2)){
var and__3570__auto____$3 = (function (){var G__13989 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13989) : p2.call(null,G__13989));
})();
if(cljs.core.truth_(and__3570__auto____$3)){
var and__3570__auto____$4 = (function (){var G__13991 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13991) : p2.call(null,G__13991));
})();
if(cljs.core.truth_(and__3570__auto____$4)){
var G__13992 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13992) : p2.call(null,G__13992));
} else {
return and__3570__auto____$4;
}
} else {
return and__3570__auto____$3;
}
} else {
return and__3570__auto____$2;
}
} else {
return and__3570__auto____$1;
}
} else {
return and__3570__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__14115__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13720_SHARP_){
var and__3570__auto__ = (function (){var G__13997 = p1__13720_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13997) : p1.call(null,G__13997));
})();
if(cljs.core.truth_(and__3570__auto__)){
var G__13998 = p1__13720_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13998) : p2.call(null,G__13998));
} else {
return and__3570__auto__;
}
}),args)));
};
var G__14115 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14116__i = 0, G__14116__a = new Array(arguments.length -  3);
while (G__14116__i < G__14116__a.length) {G__14116__a[G__14116__i] = arguments[G__14116__i + 3]; ++G__14116__i;}
  args = new cljs.core.IndexedSeq(G__14116__a,0);
} 
return G__14115__delegate.call(this,x,y,z,args);};
G__14115.cljs$lang$maxFixedArity = 3;
G__14115.cljs$lang$applyTo = (function (arglist__14117){
var x = cljs.core.first(arglist__14117);
arglist__14117 = cljs.core.next(arglist__14117);
var y = cljs.core.first(arglist__14117);
arglist__14117 = cljs.core.next(arglist__14117);
var z = cljs.core.first(arglist__14117);
var args = cljs.core.rest(arglist__14117);
return G__14115__delegate(x,y,z,args);
});
G__14115.cljs$core$IFn$_invoke$arity$variadic = G__14115__delegate;
return G__14115;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__14118 = null;
if (arguments.length > 3) {
var G__14119__i = 0, G__14119__a = new Array(arguments.length -  3);
while (G__14119__i < G__14119__a.length) {G__14119__a[G__14119__i] = arguments[G__14119__i + 3]; ++G__14119__i;}
G__14118 = new cljs.core.IndexedSeq(G__14119__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14118);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3570__auto__ = (function (){var G__14044 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14044) : p1.call(null,G__14044));
})();
if(cljs.core.truth_(and__3570__auto__)){
var and__3570__auto____$1 = (function (){var G__14046 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14046) : p2.call(null,G__14046));
})();
if(cljs.core.truth_(and__3570__auto____$1)){
var G__14047 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14047) : p3.call(null,G__14047));
} else {
return and__3570__auto____$1;
}
} else {
return and__3570__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3570__auto__ = (function (){var G__14049 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14049) : p1.call(null,G__14049));
})();
if(cljs.core.truth_(and__3570__auto__)){
var and__3570__auto____$1 = (function (){var G__14051 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14051) : p2.call(null,G__14051));
})();
if(cljs.core.truth_(and__3570__auto____$1)){
var and__3570__auto____$2 = (function (){var G__14053 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14053) : p3.call(null,G__14053));
})();
if(cljs.core.truth_(and__3570__auto____$2)){
var and__3570__auto____$3 = (function (){var G__14055 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14055) : p1.call(null,G__14055));
})();
if(cljs.core.truth_(and__3570__auto____$3)){
var and__3570__auto____$4 = (function (){var G__14057 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14057) : p2.call(null,G__14057));
})();
if(cljs.core.truth_(and__3570__auto____$4)){
var G__14058 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14058) : p3.call(null,G__14058));
} else {
return and__3570__auto____$4;
}
} else {
return and__3570__auto____$3;
}
} else {
return and__3570__auto____$2;
}
} else {
return and__3570__auto____$1;
}
} else {
return and__3570__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3570__auto__ = (function (){var G__14060 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14060) : p1.call(null,G__14060));
})();
if(cljs.core.truth_(and__3570__auto__)){
var and__3570__auto____$1 = (function (){var G__14062 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14062) : p2.call(null,G__14062));
})();
if(cljs.core.truth_(and__3570__auto____$1)){
var and__3570__auto____$2 = (function (){var G__14064 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14064) : p3.call(null,G__14064));
})();
if(cljs.core.truth_(and__3570__auto____$2)){
var and__3570__auto____$3 = (function (){var G__14066 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14066) : p1.call(null,G__14066));
})();
if(cljs.core.truth_(and__3570__auto____$3)){
var and__3570__auto____$4 = (function (){var G__14068 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14068) : p2.call(null,G__14068));
})();
if(cljs.core.truth_(and__3570__auto____$4)){
var and__3570__auto____$5 = (function (){var G__14070 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14070) : p3.call(null,G__14070));
})();
if(cljs.core.truth_(and__3570__auto____$5)){
var and__3570__auto____$6 = (function (){var G__14072 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14072) : p1.call(null,G__14072));
})();
if(cljs.core.truth_(and__3570__auto____$6)){
var and__3570__auto____$7 = (function (){var G__14074 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14074) : p2.call(null,G__14074));
})();
if(cljs.core.truth_(and__3570__auto____$7)){
var G__14075 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14075) : p3.call(null,G__14075));
} else {
return and__3570__auto____$7;
}
} else {
return and__3570__auto____$6;
}
} else {
return and__3570__auto____$5;
}
} else {
return and__3570__auto____$4;
}
} else {
return and__3570__auto____$3;
}
} else {
return and__3570__auto____$2;
}
} else {
return and__3570__auto____$1;
}
} else {
return and__3570__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__14120__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13721_SHARP_){
var and__3570__auto__ = (function (){var G__14082 = p1__13721_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14082) : p1.call(null,G__14082));
})();
if(cljs.core.truth_(and__3570__auto__)){
var and__3570__auto____$1 = (function (){var G__14084 = p1__13721_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14084) : p2.call(null,G__14084));
})();
if(cljs.core.truth_(and__3570__auto____$1)){
var G__14085 = p1__13721_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14085) : p3.call(null,G__14085));
} else {
return and__3570__auto____$1;
}
} else {
return and__3570__auto__;
}
}),args)));
};
var G__14120 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14121__i = 0, G__14121__a = new Array(arguments.length -  3);
while (G__14121__i < G__14121__a.length) {G__14121__a[G__14121__i] = arguments[G__14121__i + 3]; ++G__14121__i;}
  args = new cljs.core.IndexedSeq(G__14121__a,0);
} 
return G__14120__delegate.call(this,x,y,z,args);};
G__14120.cljs$lang$maxFixedArity = 3;
G__14120.cljs$lang$applyTo = (function (arglist__14122){
var x = cljs.core.first(arglist__14122);
arglist__14122 = cljs.core.next(arglist__14122);
var y = cljs.core.first(arglist__14122);
arglist__14122 = cljs.core.next(arglist__14122);
var z = cljs.core.first(arglist__14122);
var args = cljs.core.rest(arglist__14122);
return G__14120__delegate(x,y,z,args);
});
G__14120.cljs$core$IFn$_invoke$arity$variadic = G__14120__delegate;
return G__14120;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__14123 = null;
if (arguments.length > 3) {
var G__14124__i = 0, G__14124__a = new Array(arguments.length -  3);
while (G__14124__i < G__14124__a.length) {G__14124__a[G__14124__i] = arguments[G__14124__i + 3]; ++G__14124__i;}
G__14123 = new cljs.core.IndexedSeq(G__14124__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14123);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__14125__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13722_SHARP_){
var G__14101 = x;
return (p1__13722_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13722_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14101) : p1__13722_SHARP_.call(null,G__14101));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13723_SHARP_){
var and__3570__auto__ = (function (){var G__14103 = x;
return (p1__13723_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13723_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14103) : p1__13723_SHARP_.call(null,G__14103));
})();
if(cljs.core.truth_(and__3570__auto__)){
var G__14104 = y;
return (p1__13723_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13723_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14104) : p1__13723_SHARP_.call(null,G__14104));
} else {
return and__3570__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13724_SHARP_){
var and__3570__auto__ = (function (){var G__14106 = x;
return (p1__13724_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13724_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14106) : p1__13724_SHARP_.call(null,G__14106));
})();
if(cljs.core.truth_(and__3570__auto__)){
var and__3570__auto____$1 = (function (){var G__14108 = y;
return (p1__13724_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13724_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14108) : p1__13724_SHARP_.call(null,G__14108));
})();
if(cljs.core.truth_(and__3570__auto____$1)){
var G__14109 = z;
return (p1__13724_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13724_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14109) : p1__13724_SHARP_.call(null,G__14109));
} else {
return and__3570__auto____$1;
}
} else {
return and__3570__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__14126__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13725_SHARP_){
return cljs.core.every_QMARK_(p1__13725_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__14126 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14127__i = 0, G__14127__a = new Array(arguments.length -  3);
while (G__14127__i < G__14127__a.length) {G__14127__a[G__14127__i] = arguments[G__14127__i + 3]; ++G__14127__i;}
  args = new cljs.core.IndexedSeq(G__14127__a,0);
} 
return G__14126__delegate.call(this,x,y,z,args);};
G__14126.cljs$lang$maxFixedArity = 3;
G__14126.cljs$lang$applyTo = (function (arglist__14128){
var x = cljs.core.first(arglist__14128);
arglist__14128 = cljs.core.next(arglist__14128);
var y = cljs.core.first(arglist__14128);
arglist__14128 = cljs.core.next(arglist__14128);
var z = cljs.core.first(arglist__14128);
var args = cljs.core.rest(arglist__14128);
return G__14126__delegate(x,y,z,args);
});
G__14126.cljs$core$IFn$_invoke$arity$variadic = G__14126__delegate;
return G__14126;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__14129 = null;
if (arguments.length > 3) {
var G__14130__i = 0, G__14130__a = new Array(arguments.length -  3);
while (G__14130__i < G__14130__a.length) {G__14130__a[G__14130__i] = arguments[G__14130__i + 3]; ++G__14130__i;}
G__14129 = new cljs.core.IndexedSeq(G__14130__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14129);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__14125 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14131__i = 0, G__14131__a = new Array(arguments.length -  3);
while (G__14131__i < G__14131__a.length) {G__14131__a[G__14131__i] = arguments[G__14131__i + 3]; ++G__14131__i;}
  ps = new cljs.core.IndexedSeq(G__14131__a,0);
} 
return G__14125__delegate.call(this,p1,p2,p3,ps);};
G__14125.cljs$lang$maxFixedArity = 3;
G__14125.cljs$lang$applyTo = (function (arglist__14132){
var p1 = cljs.core.first(arglist__14132);
arglist__14132 = cljs.core.next(arglist__14132);
var p2 = cljs.core.first(arglist__14132);
arglist__14132 = cljs.core.next(arglist__14132);
var p3 = cljs.core.first(arglist__14132);
var ps = cljs.core.rest(arglist__14132);
return G__14125__delegate(p1,p2,p3,ps);
});
G__14125.cljs$core$IFn$_invoke$arity$variadic = G__14125__delegate;
return G__14125;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__14133 = null;
if (arguments.length > 3) {
var G__14134__i = 0, G__14134__a = new Array(arguments.length -  3);
while (G__14134__i < G__14134__a.length) {G__14134__a[G__14134__i] = arguments[G__14134__i + 3]; ++G__14134__i;}
G__14133 = new cljs.core.IndexedSeq(G__14134__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__14340 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14340) : p.call(null,G__14340));
});
var sp1__2 = (function (x,y){
var or__3582__auto__ = (function (){var G__14342 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14342) : p.call(null,G__14342));
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var G__14343 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14343) : p.call(null,G__14343));
}
});
var sp1__3 = (function (x,y,z){
var or__3582__auto__ = (function (){var G__14345 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14345) : p.call(null,G__14345));
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (function (){var G__14347 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14347) : p.call(null,G__14347));
})();
if(cljs.core.truth_(or__3582__auto____$1)){
return or__3582__auto____$1;
} else {
var G__14348 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14348) : p.call(null,G__14348));
}
}
});
var sp1__4 = (function() { 
var G__14509__delegate = function (x,y,z,args){
var or__3582__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__14509 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14510__i = 0, G__14510__a = new Array(arguments.length -  3);
while (G__14510__i < G__14510__a.length) {G__14510__a[G__14510__i] = arguments[G__14510__i + 3]; ++G__14510__i;}
  args = new cljs.core.IndexedSeq(G__14510__a,0);
} 
return G__14509__delegate.call(this,x,y,z,args);};
G__14509.cljs$lang$maxFixedArity = 3;
G__14509.cljs$lang$applyTo = (function (arglist__14511){
var x = cljs.core.first(arglist__14511);
arglist__14511 = cljs.core.next(arglist__14511);
var y = cljs.core.first(arglist__14511);
arglist__14511 = cljs.core.next(arglist__14511);
var z = cljs.core.first(arglist__14511);
var args = cljs.core.rest(arglist__14511);
return G__14509__delegate(x,y,z,args);
});
G__14509.cljs$core$IFn$_invoke$arity$variadic = G__14509__delegate;
return G__14509;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__14512 = null;
if (arguments.length > 3) {
var G__14513__i = 0, G__14513__a = new Array(arguments.length -  3);
while (G__14513__i < G__14513__a.length) {G__14513__a[G__14513__i] = arguments[G__14513__i + 3]; ++G__14513__i;}
G__14512 = new cljs.core.IndexedSeq(G__14513__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14512);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3582__auto__ = (function (){var G__14380 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14380) : p1.call(null,G__14380));
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var G__14381 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14381) : p2.call(null,G__14381));
}
});
var sp2__2 = (function (x,y){
var or__3582__auto__ = (function (){var G__14383 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14383) : p1.call(null,G__14383));
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (function (){var G__14385 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14385) : p1.call(null,G__14385));
})();
if(cljs.core.truth_(or__3582__auto____$1)){
return or__3582__auto____$1;
} else {
var or__3582__auto____$2 = (function (){var G__14387 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14387) : p2.call(null,G__14387));
})();
if(cljs.core.truth_(or__3582__auto____$2)){
return or__3582__auto____$2;
} else {
var G__14388 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14388) : p2.call(null,G__14388));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3582__auto__ = (function (){var G__14390 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14390) : p1.call(null,G__14390));
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (function (){var G__14392 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14392) : p1.call(null,G__14392));
})();
if(cljs.core.truth_(or__3582__auto____$1)){
return or__3582__auto____$1;
} else {
var or__3582__auto____$2 = (function (){var G__14394 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14394) : p1.call(null,G__14394));
})();
if(cljs.core.truth_(or__3582__auto____$2)){
return or__3582__auto____$2;
} else {
var or__3582__auto____$3 = (function (){var G__14396 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14396) : p2.call(null,G__14396));
})();
if(cljs.core.truth_(or__3582__auto____$3)){
return or__3582__auto____$3;
} else {
var or__3582__auto____$4 = (function (){var G__14398 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14398) : p2.call(null,G__14398));
})();
if(cljs.core.truth_(or__3582__auto____$4)){
return or__3582__auto____$4;
} else {
var G__14399 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14399) : p2.call(null,G__14399));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__14514__delegate = function (x,y,z,args){
var or__3582__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return cljs.core.some(((function (or__3582__auto__){
return (function (p1__14135_SHARP_){
var or__3582__auto____$1 = (function (){var G__14401 = p1__14135_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14401) : p1.call(null,G__14401));
})();
if(cljs.core.truth_(or__3582__auto____$1)){
return or__3582__auto____$1;
} else {
var G__14402 = p1__14135_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14402) : p2.call(null,G__14402));
}
});})(or__3582__auto__))
,args);
}
};
var G__14514 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14515__i = 0, G__14515__a = new Array(arguments.length -  3);
while (G__14515__i < G__14515__a.length) {G__14515__a[G__14515__i] = arguments[G__14515__i + 3]; ++G__14515__i;}
  args = new cljs.core.IndexedSeq(G__14515__a,0);
} 
return G__14514__delegate.call(this,x,y,z,args);};
G__14514.cljs$lang$maxFixedArity = 3;
G__14514.cljs$lang$applyTo = (function (arglist__14516){
var x = cljs.core.first(arglist__14516);
arglist__14516 = cljs.core.next(arglist__14516);
var y = cljs.core.first(arglist__14516);
arglist__14516 = cljs.core.next(arglist__14516);
var z = cljs.core.first(arglist__14516);
var args = cljs.core.rest(arglist__14516);
return G__14514__delegate(x,y,z,args);
});
G__14514.cljs$core$IFn$_invoke$arity$variadic = G__14514__delegate;
return G__14514;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__14517 = null;
if (arguments.length > 3) {
var G__14518__i = 0, G__14518__a = new Array(arguments.length -  3);
while (G__14518__i < G__14518__a.length) {G__14518__a[G__14518__i] = arguments[G__14518__i + 3]; ++G__14518__i;}
G__14517 = new cljs.core.IndexedSeq(G__14518__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14517);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3582__auto__ = (function (){var G__14448 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14448) : p1.call(null,G__14448));
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (function (){var G__14450 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14450) : p2.call(null,G__14450));
})();
if(cljs.core.truth_(or__3582__auto____$1)){
return or__3582__auto____$1;
} else {
var G__14451 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14451) : p3.call(null,G__14451));
}
}
});
var sp3__2 = (function (x,y){
var or__3582__auto__ = (function (){var G__14453 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14453) : p1.call(null,G__14453));
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (function (){var G__14455 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14455) : p2.call(null,G__14455));
})();
if(cljs.core.truth_(or__3582__auto____$1)){
return or__3582__auto____$1;
} else {
var or__3582__auto____$2 = (function (){var G__14457 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14457) : p3.call(null,G__14457));
})();
if(cljs.core.truth_(or__3582__auto____$2)){
return or__3582__auto____$2;
} else {
var or__3582__auto____$3 = (function (){var G__14459 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14459) : p1.call(null,G__14459));
})();
if(cljs.core.truth_(or__3582__auto____$3)){
return or__3582__auto____$3;
} else {
var or__3582__auto____$4 = (function (){var G__14461 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14461) : p2.call(null,G__14461));
})();
if(cljs.core.truth_(or__3582__auto____$4)){
return or__3582__auto____$4;
} else {
var G__14462 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14462) : p3.call(null,G__14462));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3582__auto__ = (function (){var G__14464 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14464) : p1.call(null,G__14464));
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (function (){var G__14466 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14466) : p2.call(null,G__14466));
})();
if(cljs.core.truth_(or__3582__auto____$1)){
return or__3582__auto____$1;
} else {
var or__3582__auto____$2 = (function (){var G__14468 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14468) : p3.call(null,G__14468));
})();
if(cljs.core.truth_(or__3582__auto____$2)){
return or__3582__auto____$2;
} else {
var or__3582__auto____$3 = (function (){var G__14470 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14470) : p1.call(null,G__14470));
})();
if(cljs.core.truth_(or__3582__auto____$3)){
return or__3582__auto____$3;
} else {
var or__3582__auto____$4 = (function (){var G__14472 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14472) : p2.call(null,G__14472));
})();
if(cljs.core.truth_(or__3582__auto____$4)){
return or__3582__auto____$4;
} else {
var or__3582__auto____$5 = (function (){var G__14474 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14474) : p3.call(null,G__14474));
})();
if(cljs.core.truth_(or__3582__auto____$5)){
return or__3582__auto____$5;
} else {
var or__3582__auto____$6 = (function (){var G__14476 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14476) : p1.call(null,G__14476));
})();
if(cljs.core.truth_(or__3582__auto____$6)){
return or__3582__auto____$6;
} else {
var or__3582__auto____$7 = (function (){var G__14478 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14478) : p2.call(null,G__14478));
})();
if(cljs.core.truth_(or__3582__auto____$7)){
return or__3582__auto____$7;
} else {
var G__14479 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14479) : p3.call(null,G__14479));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__14519__delegate = function (x,y,z,args){
var or__3582__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return cljs.core.some(((function (or__3582__auto__){
return (function (p1__14136_SHARP_){
var or__3582__auto____$1 = (function (){var G__14481 = p1__14136_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14481) : p1.call(null,G__14481));
})();
if(cljs.core.truth_(or__3582__auto____$1)){
return or__3582__auto____$1;
} else {
var or__3582__auto____$2 = (function (){var G__14483 = p1__14136_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14483) : p2.call(null,G__14483));
})();
if(cljs.core.truth_(or__3582__auto____$2)){
return or__3582__auto____$2;
} else {
var G__14484 = p1__14136_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14484) : p3.call(null,G__14484));
}
}
});})(or__3582__auto__))
,args);
}
};
var G__14519 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14520__i = 0, G__14520__a = new Array(arguments.length -  3);
while (G__14520__i < G__14520__a.length) {G__14520__a[G__14520__i] = arguments[G__14520__i + 3]; ++G__14520__i;}
  args = new cljs.core.IndexedSeq(G__14520__a,0);
} 
return G__14519__delegate.call(this,x,y,z,args);};
G__14519.cljs$lang$maxFixedArity = 3;
G__14519.cljs$lang$applyTo = (function (arglist__14521){
var x = cljs.core.first(arglist__14521);
arglist__14521 = cljs.core.next(arglist__14521);
var y = cljs.core.first(arglist__14521);
arglist__14521 = cljs.core.next(arglist__14521);
var z = cljs.core.first(arglist__14521);
var args = cljs.core.rest(arglist__14521);
return G__14519__delegate(x,y,z,args);
});
G__14519.cljs$core$IFn$_invoke$arity$variadic = G__14519__delegate;
return G__14519;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__14522 = null;
if (arguments.length > 3) {
var G__14523__i = 0, G__14523__a = new Array(arguments.length -  3);
while (G__14523__i < G__14523__a.length) {G__14523__a[G__14523__i] = arguments[G__14523__i + 3]; ++G__14523__i;}
G__14522 = new cljs.core.IndexedSeq(G__14523__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14522);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__14524__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__14137_SHARP_){
var G__14500 = x;
return (p1__14137_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14137_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14500) : p1__14137_SHARP_.call(null,G__14500));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__14138_SHARP_){
var or__3582__auto__ = (function (){var G__14502 = x;
return (p1__14138_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14138_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14502) : p1__14138_SHARP_.call(null,G__14502));
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var G__14503 = y;
return (p1__14138_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14138_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14503) : p1__14138_SHARP_.call(null,G__14503));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__14139_SHARP_){
var or__3582__auto__ = (function (){var G__14505 = x;
return (p1__14139_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14139_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14505) : p1__14139_SHARP_.call(null,G__14505));
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (function (){var G__14507 = y;
return (p1__14139_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14139_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14507) : p1__14139_SHARP_.call(null,G__14507));
})();
if(cljs.core.truth_(or__3582__auto____$1)){
return or__3582__auto____$1;
} else {
var G__14508 = z;
return (p1__14139_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14139_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14508) : p1__14139_SHARP_.call(null,G__14508));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__14525__delegate = function (x,y,z,args){
var or__3582__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return cljs.core.some(((function (or__3582__auto__,ps__$1){
return (function (p1__14140_SHARP_){
return cljs.core.some(p1__14140_SHARP_,args);
});})(or__3582__auto__,ps__$1))
,ps__$1);
}
};
var G__14525 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14526__i = 0, G__14526__a = new Array(arguments.length -  3);
while (G__14526__i < G__14526__a.length) {G__14526__a[G__14526__i] = arguments[G__14526__i + 3]; ++G__14526__i;}
  args = new cljs.core.IndexedSeq(G__14526__a,0);
} 
return G__14525__delegate.call(this,x,y,z,args);};
G__14525.cljs$lang$maxFixedArity = 3;
G__14525.cljs$lang$applyTo = (function (arglist__14527){
var x = cljs.core.first(arglist__14527);
arglist__14527 = cljs.core.next(arglist__14527);
var y = cljs.core.first(arglist__14527);
arglist__14527 = cljs.core.next(arglist__14527);
var z = cljs.core.first(arglist__14527);
var args = cljs.core.rest(arglist__14527);
return G__14525__delegate(x,y,z,args);
});
G__14525.cljs$core$IFn$_invoke$arity$variadic = G__14525__delegate;
return G__14525;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__14528 = null;
if (arguments.length > 3) {
var G__14529__i = 0, G__14529__a = new Array(arguments.length -  3);
while (G__14529__i < G__14529__a.length) {G__14529__a[G__14529__i] = arguments[G__14529__i + 3]; ++G__14529__i;}
G__14528 = new cljs.core.IndexedSeq(G__14529__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14528);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__14524 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14530__i = 0, G__14530__a = new Array(arguments.length -  3);
while (G__14530__i < G__14530__a.length) {G__14530__a[G__14530__i] = arguments[G__14530__i + 3]; ++G__14530__i;}
  ps = new cljs.core.IndexedSeq(G__14530__a,0);
} 
return G__14524__delegate.call(this,p1,p2,p3,ps);};
G__14524.cljs$lang$maxFixedArity = 3;
G__14524.cljs$lang$applyTo = (function (arglist__14531){
var p1 = cljs.core.first(arglist__14531);
arglist__14531 = cljs.core.next(arglist__14531);
var p2 = cljs.core.first(arglist__14531);
arglist__14531 = cljs.core.next(arglist__14531);
var p3 = cljs.core.first(arglist__14531);
var ps = cljs.core.rest(arglist__14531);
return G__14524__delegate(p1,p2,p3,ps);
});
G__14524.cljs$core$IFn$_invoke$arity$variadic = G__14524__delegate;
return G__14524;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__14532 = null;
if (arguments.length > 3) {
var G__14533__i = 0, G__14533__a = new Array(arguments.length -  3);
while (G__14533__i < G__14533__a.length) {G__14533__a[G__14533__i] = arguments[G__14533__i + 3]; ++G__14533__i;}
G__14532 = new cljs.core.IndexedSeq(G__14533__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__14588 = null;
var G__14588__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14588__1 = (function (result){
var G__14574 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14574) : rf.call(null,G__14574));
});
var G__14588__2 = (function (result,input){
var G__14575 = result;
var G__14576 = (function (){var G__14577 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14577) : f.call(null,G__14577));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14575,G__14576) : rf.call(null,G__14575,G__14576));
});
var G__14588__3 = (function() { 
var G__14589__delegate = function (result,input,inputs){
var G__14578 = result;
var G__14579 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14578,G__14579) : rf.call(null,G__14578,G__14579));
};
var G__14589 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__14590__i = 0, G__14590__a = new Array(arguments.length -  2);
while (G__14590__i < G__14590__a.length) {G__14590__a[G__14590__i] = arguments[G__14590__i + 2]; ++G__14590__i;}
  inputs = new cljs.core.IndexedSeq(G__14590__a,0);
} 
return G__14589__delegate.call(this,result,input,inputs);};
G__14589.cljs$lang$maxFixedArity = 2;
G__14589.cljs$lang$applyTo = (function (arglist__14591){
var result = cljs.core.first(arglist__14591);
arglist__14591 = cljs.core.next(arglist__14591);
var input = cljs.core.first(arglist__14591);
var inputs = cljs.core.rest(arglist__14591);
return G__14589__delegate(result,input,inputs);
});
G__14589.cljs$core$IFn$_invoke$arity$variadic = G__14589__delegate;
return G__14589;
})()
;
G__14588 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__14588__0.call(this);
case 1:
return G__14588__1.call(this,result);
case 2:
return G__14588__2.call(this,result,input);
default:
var G__14592 = null;
if (arguments.length > 2) {
var G__14593__i = 0, G__14593__a = new Array(arguments.length -  2);
while (G__14593__i < G__14593__a.length) {G__14593__a[G__14593__i] = arguments[G__14593__i + 2]; ++G__14593__i;}
G__14592 = new cljs.core.IndexedSeq(G__14593__a,0);
}
return G__14588__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__14592);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14588.cljs$lang$maxFixedArity = 2;
G__14588.cljs$lang$applyTo = G__14588__3.cljs$lang$applyTo;
G__14588.cljs$core$IFn$_invoke$arity$0 = G__14588__0;
G__14588.cljs$core$IFn$_invoke$arity$1 = G__14588__1;
G__14588.cljs$core$IFn$_invoke$arity$2 = G__14588__2;
G__14588.cljs$core$IFn$_invoke$arity$variadic = G__14588__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14588;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4469__auto___14594 = size;
var i_14595 = (0);
while(true){
if((i_14595 < n__4469__auto___14594)){
cljs.core.chunk_append(b,(function (){var G__14580 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14595);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14580) : f.call(null,G__14580));
})());

var G__14596 = (i_14595 + (1));
i_14595 = G__14596;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14581 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14581) : f.call(null,G__14581));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__14582 = cljs.core.first(s1);
var G__14583 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14582,G__14583) : f.call(null,G__14582,G__14583));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__14584 = cljs.core.first(s1);
var G__14585 = cljs.core.first(s2);
var G__14586 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14584,G__14585,G__14586) : f.call(null,G__14584,G__14585,G__14586));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__14597__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__14534_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__14534_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__14597 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14598__i = 0, G__14598__a = new Array(arguments.length -  4);
while (G__14598__i < G__14598__a.length) {G__14598__a[G__14598__i] = arguments[G__14598__i + 4]; ++G__14598__i;}
  colls = new cljs.core.IndexedSeq(G__14598__a,0);
} 
return G__14597__delegate.call(this,f,c1,c2,c3,colls);};
G__14597.cljs$lang$maxFixedArity = 4;
G__14597.cljs$lang$applyTo = (function (arglist__14599){
var f = cljs.core.first(arglist__14599);
arglist__14599 = cljs.core.next(arglist__14599);
var c1 = cljs.core.first(arglist__14599);
arglist__14599 = cljs.core.next(arglist__14599);
var c2 = cljs.core.first(arglist__14599);
arglist__14599 = cljs.core.next(arglist__14599);
var c3 = cljs.core.first(arglist__14599);
var colls = cljs.core.rest(arglist__14599);
return G__14597__delegate(f,c1,c2,c3,colls);
});
G__14597.cljs$core$IFn$_invoke$arity$variadic = G__14597__delegate;
return G__14597;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__14600 = null;
if (arguments.length > 4) {
var G__14601__i = 0, G__14601__a = new Array(arguments.length -  4);
while (G__14601__i < G__14601__a.length) {G__14601__a[G__14601__i] = arguments[G__14601__i + 4]; ++G__14601__i;}
G__14600 = new cljs.core.IndexedSeq(G__14601__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14600);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14610 = null;
var G__14610__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14610__1 = (function (result){
var G__14607 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14607) : rf.call(null,G__14607));
});
var G__14610__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__14608 = result;
var G__14609 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14608,G__14609) : rf.call(null,G__14608,G__14609));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__14610 = function(result,input){
switch(arguments.length){
case 0:
return G__14610__0.call(this);
case 1:
return G__14610__1.call(this,result);
case 2:
return G__14610__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14610.cljs$core$IFn$_invoke$arity$0 = G__14610__0;
G__14610.cljs$core$IFn$_invoke$arity$1 = G__14610__1;
G__14610.cljs$core$IFn$_invoke$arity$2 = G__14610__2;
return G__14610;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14617 = null;
var G__14617__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14617__1 = (function (result){
var G__14614 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14614) : rf.call(null,G__14614));
});
var G__14617__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__14615 = result;
var G__14616 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14615,G__14616) : rf.call(null,G__14615,G__14616));
}
});
G__14617 = function(result,input){
switch(arguments.length){
case 0:
return G__14617__0.call(this);
case 1:
return G__14617__1.call(this,result);
case 2:
return G__14617__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14617.cljs$core$IFn$_invoke$arity$0 = G__14617__0;
G__14617.cljs$core$IFn$_invoke$arity$1 = G__14617__1;
G__14617.cljs$core$IFn$_invoke$arity$2 = G__14617__2;
return G__14617;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__14618 = (n__$1 - (1));
var G__14619 = cljs.core.rest(s);
n__$1 = G__14618;
coll__$1 = G__14619;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__14622 = cljs.core.next(s);
var G__14623 = cljs.core.next(lead);
s = G__14622;
lead = G__14623;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__14636 = null;
var G__14636__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14636__1 = (function (result){
var G__14630 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14630) : rf.call(null,G__14630));
});
var G__14636__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3570__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3570__auto__)){
var G__14631 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14631) : pred.call(null,G__14631));
} else {
return and__3570__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__14632 = result;
var G__14633 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14632,G__14633) : rf.call(null,G__14632,G__14633));
}
});
G__14636 = function(result,input){
switch(arguments.length){
case 0:
return G__14636__0.call(this);
case 1:
return G__14636__1.call(this,result);
case 2:
return G__14636__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14636.cljs$core$IFn$_invoke$arity$0 = G__14636__0;
G__14636.cljs$core$IFn$_invoke$arity$1 = G__14636__1;
G__14636.cljs$core$IFn$_invoke$arity$2 = G__14636__2;
return G__14636;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3570__auto__ = s;
if(and__3570__auto__){
var G__14635 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14635) : pred__$1.call(null,G__14635));
} else {
return and__3570__auto__;
}
})())){
var G__14637 = pred__$1;
var G__14638 = cljs.core.rest(s);
pred__$1 = G__14637;
coll__$1 = G__14638;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__14647 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14647) : f.call(null,G__14647));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__14650__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__14650 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14651__i = 0, G__14651__a = new Array(arguments.length -  2);
while (G__14651__i < G__14651__a.length) {G__14651__a[G__14651__i] = arguments[G__14651__i + 2]; ++G__14651__i;}
  colls = new cljs.core.IndexedSeq(G__14651__a,0);
} 
return G__14650__delegate.call(this,c1,c2,colls);};
G__14650.cljs$lang$maxFixedArity = 2;
G__14650.cljs$lang$applyTo = (function (arglist__14652){
var c1 = cljs.core.first(arglist__14652);
arglist__14652 = cljs.core.next(arglist__14652);
var c2 = cljs.core.first(arglist__14652);
var colls = cljs.core.rest(arglist__14652);
return G__14650__delegate(c1,c2,colls);
});
G__14650.cljs$core$IFn$_invoke$arity$variadic = G__14650__delegate;
return G__14650;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__14653 = null;
if (arguments.length > 2) {
var G__14654__i = 0, G__14654__a = new Array(arguments.length -  2);
while (G__14654__i < G__14654__a.length) {G__14654__a[G__14654__i] = arguments[G__14654__i + 2]; ++G__14654__i;}
G__14653 = new cljs.core.IndexedSeq(G__14654__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__14653);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__14669 = null;
var G__14669__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14669__1 = (function (result){
var G__14662 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14662) : rf.call(null,G__14662));
});
var G__14669__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__14663 = result;
var G__14664 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14663,G__14664) : rf.call(null,G__14663,G__14664));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__14665 = sepr;
var G__14666 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14665,G__14666) : rf.call(null,G__14665,G__14666));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__14667 = result;
var G__14668 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14667,G__14668) : rf.call(null,G__14667,G__14668));
}
});
G__14669 = function(result,input){
switch(arguments.length){
case 0:
return G__14669__0.call(this);
case 1:
return G__14669__1.call(this,result);
case 2:
return G__14669__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14669.cljs$core$IFn$_invoke$arity$0 = G__14669__0;
G__14669.cljs$core$IFn$_invoke$arity$1 = G__14669__1;
G__14669.cljs$core$IFn$_invoke$arity$2 = G__14669__2;
return G__14669;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__14678__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__14678 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__14679__i = 0, G__14679__a = new Array(arguments.length -  1);
while (G__14679__i < G__14679__a.length) {G__14679__a[G__14679__i] = arguments[G__14679__i + 1]; ++G__14679__i;}
  colls = new cljs.core.IndexedSeq(G__14679__a,0);
} 
return G__14678__delegate.call(this,f,colls);};
G__14678.cljs$lang$maxFixedArity = 1;
G__14678.cljs$lang$applyTo = (function (arglist__14680){
var f = cljs.core.first(arglist__14680);
var colls = cljs.core.rest(arglist__14680);
return G__14678__delegate(f,colls);
});
G__14678.cljs$core$IFn$_invoke$arity$variadic = G__14678__delegate;
return G__14678;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__14681 = null;
if (arguments.length > 1) {
var G__14682__i = 0, G__14682__a = new Array(arguments.length -  1);
while (G__14682__i < G__14682__a.length) {G__14682__a[G__14682__i] = arguments[G__14682__i + 1]; ++G__14682__i;}
G__14681 = new cljs.core.IndexedSeq(G__14682__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14681);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__14701 = null;
var G__14701__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14701__1 = (function (result){
var G__14695 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14695) : rf.call(null,G__14695));
});
var G__14701__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__14696 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14696) : pred.call(null,G__14696));
})())){
var G__14697 = result;
var G__14698 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14697,G__14698) : rf.call(null,G__14697,G__14698));
} else {
return result;
}
});
G__14701 = function(result,input){
switch(arguments.length){
case 0:
return G__14701__0.call(this);
case 1:
return G__14701__1.call(this,result);
case 2:
return G__14701__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14701.cljs$core$IFn$_invoke$arity$0 = G__14701__0;
G__14701.cljs$core$IFn$_invoke$arity$1 = G__14701__1;
G__14701.cljs$core$IFn$_invoke$arity$2 = G__14701__2;
return G__14701;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4469__auto___14702 = size;
var i_14703 = (0);
while(true){
if((i_14703 < n__4469__auto___14702)){
if(cljs.core.truth_((function (){var G__14699 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14703);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14699) : pred.call(null,G__14699));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14703));
} else {
}

var G__14704 = (i_14703 + (1));
i_14703 = G__14704;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__14700 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14700) : pred.call(null,G__14700));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__14711 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__14711) : branch_QMARK_.call(null,G__14711));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__14712 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__14712) : children.call(null,G__14712));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__14713_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__14713_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__14716 = to;
if(G__14716){
var bit__4256__auto__ = (G__14716.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4256__auto__) || (G__14716.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__14717 = to;
if(G__14717){
var bit__4256__auto__ = (G__14717.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4256__auto__) || (G__14717.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__14719 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14719) : f.call(null,G__14719));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__14720__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__14720 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14721__i = 0, G__14721__a = new Array(arguments.length -  4);
while (G__14721__i < G__14721__a.length) {G__14721__a[G__14721__i] = arguments[G__14721__i + 4]; ++G__14721__i;}
  colls = new cljs.core.IndexedSeq(G__14721__a,0);
} 
return G__14720__delegate.call(this,f,c1,c2,c3,colls);};
G__14720.cljs$lang$maxFixedArity = 4;
G__14720.cljs$lang$applyTo = (function (arglist__14722){
var f = cljs.core.first(arglist__14722);
arglist__14722 = cljs.core.next(arglist__14722);
var c1 = cljs.core.first(arglist__14722);
arglist__14722 = cljs.core.next(arglist__14722);
var c2 = cljs.core.first(arglist__14722);
arglist__14722 = cljs.core.next(arglist__14722);
var c3 = cljs.core.first(arglist__14722);
var colls = cljs.core.rest(arglist__14722);
return G__14720__delegate(f,c1,c2,c3,colls);
});
G__14720.cljs$core$IFn$_invoke$arity$variadic = G__14720__delegate;
return G__14720;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__14723 = null;
if (arguments.length > 4) {
var G__14724__i = 0, G__14724__a = new Array(arguments.length -  4);
while (G__14724__i < G__14724__a.length) {G__14724__a[G__14724__i] = arguments[G__14724__i + 4]; ++G__14724__i;}
G__14723 = new cljs.core.IndexedSeq(G__14724__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__14726 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14726) : pred.call(null,G__14726));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__14741 = m__$1;
if(G__14741){
var bit__4263__auto__ = (G__14741.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4263__auto__) || (G__14741.cljs$core$ILookup$)){
return true;
} else {
if((!G__14741.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14741);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14741);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__14742 = sentinel;
var G__14743 = m__$2;
var G__14744 = cljs.core.next(ks__$1);
sentinel = G__14742;
m__$1 = G__14743;
ks__$1 = G__14744;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__14745,v){
var vec__14750 = p__14745;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14750,(0),null);
var ks = cljs.core.nthnext(vec__14750,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__14751,f){
var vec__14789 = p__14751;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14789,(0),null);
var ks = cljs.core.nthnext(vec__14789,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14790 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14790) : f.call(null,G__14790));
})());
}
});
var update_in__4 = (function (m,p__14752,f,a){
var vec__14791 = p__14752;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14791,(0),null);
var ks = cljs.core.nthnext(vec__14791,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14792 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14793 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14792,G__14793) : f.call(null,G__14792,G__14793));
})());
}
});
var update_in__5 = (function (m,p__14753,f,a,b){
var vec__14794 = p__14753;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14794,(0),null);
var ks = cljs.core.nthnext(vec__14794,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14795 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14796 = a;
var G__14797 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14795,G__14796,G__14797) : f.call(null,G__14795,G__14796,G__14797));
})());
}
});
var update_in__6 = (function (m,p__14754,f,a,b,c){
var vec__14798 = p__14754;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14798,(0),null);
var ks = cljs.core.nthnext(vec__14798,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14799 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14800 = a;
var G__14801 = b;
var G__14802 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14799,G__14800,G__14801,G__14802) : f.call(null,G__14799,G__14800,G__14801,G__14802));
})());
}
});
var update_in__7 = (function() { 
var G__14804__delegate = function (m,p__14755,f,a,b,c,args){
var vec__14803 = p__14755;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14803,(0),null);
var ks = cljs.core.nthnext(vec__14803,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__14804 = function (m,p__14755,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__14805__i = 0, G__14805__a = new Array(arguments.length -  6);
while (G__14805__i < G__14805__a.length) {G__14805__a[G__14805__i] = arguments[G__14805__i + 6]; ++G__14805__i;}
  args = new cljs.core.IndexedSeq(G__14805__a,0);
} 
return G__14804__delegate.call(this,m,p__14755,f,a,b,c,args);};
G__14804.cljs$lang$maxFixedArity = 6;
G__14804.cljs$lang$applyTo = (function (arglist__14806){
var m = cljs.core.first(arglist__14806);
arglist__14806 = cljs.core.next(arglist__14806);
var p__14755 = cljs.core.first(arglist__14806);
arglist__14806 = cljs.core.next(arglist__14806);
var f = cljs.core.first(arglist__14806);
arglist__14806 = cljs.core.next(arglist__14806);
var a = cljs.core.first(arglist__14806);
arglist__14806 = cljs.core.next(arglist__14806);
var b = cljs.core.first(arglist__14806);
arglist__14806 = cljs.core.next(arglist__14806);
var c = cljs.core.first(arglist__14806);
var args = cljs.core.rest(arglist__14806);
return G__14804__delegate(m,p__14755,f,a,b,c,args);
});
G__14804.cljs$core$IFn$_invoke$arity$variadic = G__14804__delegate;
return G__14804;
})()
;
update_in = function(m,p__14755,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__14755,f);
case 4:
return update_in__4.call(this,m,p__14755,f,a);
case 5:
return update_in__5.call(this,m,p__14755,f,a,b);
case 6:
return update_in__6.call(this,m,p__14755,f,a,b,c);
default:
var G__14807 = null;
if (arguments.length > 6) {
var G__14808__i = 0, G__14808__a = new Array(arguments.length -  6);
while (G__14808__i < G__14808__a.length) {G__14808__a[G__14808__i] = arguments[G__14808__i + 6]; ++G__14808__i;}
G__14807 = new cljs.core.IndexedSeq(G__14808__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__14755,f,a,b,c, G__14807);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14819 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14819) : f.call(null,G__14819));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14820 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14821 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14820,G__14821) : f.call(null,G__14820,G__14821));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14822 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14823 = x;
var G__14824 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14822,G__14823,G__14824) : f.call(null,G__14822,G__14823,G__14824));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14825 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14826 = x;
var G__14827 = y;
var G__14828 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14825,G__14826,G__14827,G__14828) : f.call(null,G__14825,G__14826,G__14827,G__14828));
})());
});
var update__7 = (function() { 
var G__14829__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__14829 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__14830__i = 0, G__14830__a = new Array(arguments.length -  6);
while (G__14830__i < G__14830__a.length) {G__14830__a[G__14830__i] = arguments[G__14830__i + 6]; ++G__14830__i;}
  more = new cljs.core.IndexedSeq(G__14830__a,0);
} 
return G__14829__delegate.call(this,m,k,f,x,y,z,more);};
G__14829.cljs$lang$maxFixedArity = 6;
G__14829.cljs$lang$applyTo = (function (arglist__14831){
var m = cljs.core.first(arglist__14831);
arglist__14831 = cljs.core.next(arglist__14831);
var k = cljs.core.first(arglist__14831);
arglist__14831 = cljs.core.next(arglist__14831);
var f = cljs.core.first(arglist__14831);
arglist__14831 = cljs.core.next(arglist__14831);
var x = cljs.core.first(arglist__14831);
arglist__14831 = cljs.core.next(arglist__14831);
var y = cljs.core.first(arglist__14831);
arglist__14831 = cljs.core.next(arglist__14831);
var z = cljs.core.first(arglist__14831);
var more = cljs.core.rest(arglist__14831);
return G__14829__delegate(m,k,f,x,y,z,more);
});
G__14829.cljs$core$IFn$_invoke$arity$variadic = G__14829__delegate;
return G__14829;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__14832 = null;
if (arguments.length > 6) {
var G__14833__i = 0, G__14833__a = new Array(arguments.length -  6);
while (G__14833__i < G__14833__a.length) {G__14833__a[G__14833__i] = arguments[G__14833__i + 6]; ++G__14833__i;}
G__14832 = new cljs.core.IndexedSeq(G__14833__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__14832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__14834 = (ll - (5));
var G__14835 = r;
ll = G__14834;
ret = G__14835;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14840 = cljs.core.pv_aget(node,(0));
var G__14841 = (level - (5));
node = G__14840;
level = G__14841;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14842 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__14843 = (level - (5));
node = G__14842;
level = G__14843;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14853 = init__$2;
var G__14854 = (j + i);
var G__14855 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14853,G__14854,G__14855) : f.call(null,G__14853,G__14854,G__14855));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14866 = (j + (1));
var G__14867 = init__$3;
j = G__14866;
init__$2 = G__14867;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14856 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14856) : cljs.core.deref.call(null,G__14856));
} else {
var G__14868 = (i + len);
var G__14869 = init__$2;
i = G__14868;
init__$1 = G__14869;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__14857 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__14857) : cljs.core.tv_editable_root.call(null,G__14857));
})(),(function (){var G__14858 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__14858) : cljs.core.tv_editable_tail.call(null,G__14858));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14859 = init__$2;
var G__14860 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14859,G__14860) : f.call(null,G__14859,G__14860));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14870 = (j + (1));
var G__14871 = init__$3;
j = G__14870;
init__$2 = G__14871;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14861 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14861) : cljs.core.deref.call(null,G__14861));
} else {
var G__14872 = (i + len);
var G__14873 = init__$2;
i = G__14872;
init__$1 = G__14873;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__14862 = coll__$1;
var G__14863 = cljs.core.first_array_for_longvec(coll__$1);
var G__14864 = (0);
var G__14865 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14862,G__14863,G__14864,G__14865) : cljs.core.chunked_seq.call(null,G__14862,G__14863,G__14864,G__14865));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4469__auto___14874 = len;
var i_14875 = (0);
while(true){
if((i_14875 < n__4469__auto___14874)){
(new_tail[i_14875] = (self__.tail[i_14875]));

var G__14876 = (i_14875 + (1));
i_14875 = G__14876;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__14877 = null;
var G__14877__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__14877__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__14877 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14877__2.call(this,self__,k);
case 3:
return G__14877__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14877.cljs$core$IFn$_invoke$arity$2 = G__14877__2;
G__14877.cljs$core$IFn$_invoke$arity$3 = G__14877__3;
return G__14877;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args14852){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14852)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__14878 = (i + (1));
var G__14879 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__14878;
out = G__14879;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14880__i = 0, G__14880__a = new Array(arguments.length -  0);
while (G__14880__i < G__14880__a.length) {G__14880__a[G__14880__i] = arguments[G__14880__i + 0]; ++G__14880__i;}
  args = new cljs.core.IndexedSeq(G__14880__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__14881){
var args = cljs.core.seq(arglist__14881);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14882 = self__.vec;
var G__14883 = self__.node;
var G__14884 = self__.i;
var G__14885 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14882,G__14883,G__14884,G__14885) : cljs.core.chunked_seq.call(null,G__14882,G__14883,G__14884,G__14885));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__14886 = self__.vec;
var G__14887 = (self__.i + self__.off);
var G__14888 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14886,G__14887,G__14888) : cljs.core.subvec.call(null,G__14886,G__14887,G__14888));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__14889 = self__.vec;
var G__14890 = (self__.i + self__.off);
var G__14891 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14889,G__14890,G__14891) : cljs.core.subvec.call(null,G__14889,G__14890,G__14891));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14892 = self__.vec;
var G__14893 = self__.node;
var G__14894 = self__.i;
var G__14895 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14892,G__14893,G__14894,G__14895) : cljs.core.chunked_seq.call(null,G__14892,G__14893,G__14894,G__14895));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14896 = self__.vec;
var G__14897 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14898 = end;
var G__14899 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14896,G__14897,G__14898,G__14899) : cljs.core.chunked_seq.call(null,G__14896,G__14897,G__14898,G__14899));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__14900 = self__.vec;
var G__14901 = self__.node;
var G__14902 = self__.i;
var G__14903 = self__.off;
var G__14904 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__14900,G__14901,G__14902,G__14903,G__14904) : cljs.core.chunked_seq.call(null,G__14900,G__14901,G__14902,G__14903,G__14904));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14905 = self__.vec;
var G__14906 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14907 = end;
var G__14908 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14905,G__14906,G__14907,G__14908) : cljs.core.chunked_seq.call(null,G__14905,G__14906,G__14907,G__14908));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__14910 = self__.meta;
var G__14911 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__14912 = self__.start;
var G__14913 = (function (){var x__3899__auto__ = self__.end;
var y__3900__auto__ = (v_pos + (1));
return ((x__3899__auto__ > y__3900__auto__) ? x__3899__auto__ : y__3900__auto__);
})();
var G__14914 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14910,G__14911,G__14912,G__14913,G__14914) : cljs.core.build_subvec.call(null,G__14910,G__14911,G__14912,G__14913,G__14914));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__14915 = self__.meta;
var G__14916 = self__.v;
var G__14917 = self__.start;
var G__14918 = (self__.end - (1));
var G__14919 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14915,G__14916,G__14917,G__14918,G__14919) : cljs.core.build_subvec.call(null,G__14915,G__14916,G__14917,G__14918,G__14919));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__14921 = meta__$1;
var G__14922 = self__.v;
var G__14923 = self__.start;
var G__14924 = self__.end;
var G__14925 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14921,G__14922,G__14923,G__14924,G__14925) : cljs.core.build_subvec.call(null,G__14921,G__14922,G__14923,G__14924,G__14925));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__14926 = self__.meta;
var G__14927 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__14928 = self__.start;
var G__14929 = (self__.end + (1));
var G__14930 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14926,G__14927,G__14928,G__14929,G__14930) : cljs.core.build_subvec.call(null,G__14926,G__14927,G__14928,G__14929,G__14930));
});

cljs.core.Subvec.prototype.call = (function() {
var G__14931 = null;
var G__14931__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__14931__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__14931 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14931__2.call(this,self__,k);
case 3:
return G__14931__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14931.cljs$core$IFn$_invoke$arity$2 = G__14931__2;
G__14931.cljs$core$IFn$_invoke$arity$3 = G__14931__3;
return G__14931;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args14909){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14909)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__14932 = meta;
var G__14933 = v.v;
var G__14934 = (v.start + start);
var G__14935 = (v.start + end);
var G__14936 = __hash;
meta = G__14932;
v = G__14933;
start = G__14934;
end = G__14935;
__hash = G__14936;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj14943 = {};
return obj14943;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__14951 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__14952 = (level - (5));
node = G__14951;
level = G__14952;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__14956 = null;
var G__14956__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14956__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14956 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14956__2.call(this,self__,k);
case 3:
return G__14956__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14956.cljs$core$IFn$_invoke$arity$2 = G__14956__2;
G__14956.cljs$core$IFn$_invoke$arity$3 = G__14956__3;
return G__14956;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args14953){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14953)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3582__auto__ = self__.front;
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3582__auto__ = self__.rear;
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__14957 = (i + incr);
i = G__14957;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__14958 = (i + (1));
var G__14959 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__14958;
out = G__14959;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj14963 = {};
return obj14963;
})();
var l = ks.length;
var i_14964 = (0);
while(true){
if((i_14964 < l)){
var k_14965 = (ks[i_14964]);
(new_obj[k_14965] = (obj[k_14965]));

var G__14966 = (i_14964 + (1));
i_14964 = G__14966;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3570__auto__ = (function (){var G__14970 = k;
return goog.isString(G__14970);
})();
if(cljs.core.truth_(and__3570__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3570__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__14971 = init__$1;
var G__14972 = k;
var G__14973 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14971,G__14972,G__14973) : f.call(null,G__14971,G__14972,G__14973));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14974 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14974) : cljs.core.deref.call(null,G__14974));
} else {
var G__14980 = cljs.core.rest(keys__$1);
var G__14981 = init__$2;
keys__$1 = G__14980;
init__$1 = G__14981;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3570__auto__ = (function (){var G__14976 = k;
return goog.isString(G__14976);
})();
if(cljs.core.truth_(and__3570__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3570__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__14977 = k;
return goog.isString(G__14977);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3570__auto__ = (function (){var G__14979 = k;
return goog.isString(G__14979);
})();
if(cljs.core.truth_(and__3570__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3570__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__14967_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__14967_SHARP_,(self__.strobj[p1__14967_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__14982 = null;
var G__14982__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14982__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14982 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14982__2.call(this,self__,k);
case 3:
return G__14982__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14982.cljs$core$IFn$_invoke$arity$2 = G__14982__2;
G__14982.cljs$core$IFn$_invoke$arity$3 = G__14982__3;
return G__14982;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args14968){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14968)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj14984 = {};
return obj14984;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__14985 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14985,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14985,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__14986 = (i + (2));
i = G__14986;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__14987 = (i + (2));
i = G__14987;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__14988 = (i + (2));
i = G__14988;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__14989 = (i + (2));
i = G__14989;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__14990 = (i + (2));
i = G__14990;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3582__auto__ = (function (){var G__14994 = k;
return goog.isString(G__14994);
})();
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_14995 = (0);
while(true){
if((i_14995 < l)){
(narr[i_14995] = (arr[i_14995]));

var G__14996 = (i_14995 + (1));
i_14995 = G__14996;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14998 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14998) : cljs.core.keys.call(null,G__14998));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14999 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14999) : cljs.core.vals.call(null,G__14999));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15000 = cljs.core.seq(coll);
var chunk__15001 = null;
var count__15002 = (0);
var i__15003 = (0);
while(true){
if((i__15003 < count__15002)){
var vec__15004 = chunk__15001.cljs$core$IIndexed$_nth$arity$2(null,i__15003);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15004,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15004,(1),null);
var G__15005_15018 = v;
var G__15006_15019 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15005_15018,G__15006_15019) : f.call(null,G__15005_15018,G__15006_15019));

var G__15020 = seq__15000;
var G__15021 = chunk__15001;
var G__15022 = count__15002;
var G__15023 = (i__15003 + (1));
seq__15000 = G__15020;
chunk__15001 = G__15021;
count__15002 = G__15022;
i__15003 = G__15023;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15000);
if(temp__4126__auto__){
var seq__15000__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15000__$1)){
var c__4369__auto__ = cljs.core.chunk_first(seq__15000__$1);
var G__15024 = cljs.core.chunk_rest(seq__15000__$1);
var G__15025 = c__4369__auto__;
var G__15026 = cljs.core.count(c__4369__auto__);
var G__15027 = (0);
seq__15000 = G__15024;
chunk__15001 = G__15025;
count__15002 = G__15026;
i__15003 = G__15027;
continue;
} else {
var vec__15007 = cljs.core.first(seq__15000__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15007,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15007,(1),null);
var G__15008_15028 = v;
var G__15009_15029 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15008_15028,G__15009_15029) : f.call(null,G__15008_15028,G__15009_15029));

var G__15030 = cljs.core.next(seq__15000__$1);
var G__15031 = null;
var G__15032 = (0);
var G__15033 = (0);
seq__15000 = G__15030;
chunk__15001 = G__15031;
count__15002 = G__15032;
i__15003 = G__15033;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__15010 = init__$1;
var G__15011 = (self__.arr[i]);
var G__15012 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15010,G__15011,G__15012) : f.call(null,G__15010,G__15011,G__15012));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15013 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15013) : cljs.core.deref.call(null,G__15013));
} else {
var G__15034 = (i + (2));
var G__15035 = init__$2;
i = G__15034;
init__$1 = G__15035;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__15014 = other;
if(G__15014){
var bit__4256__auto__ = (G__15014.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4256__auto__) || (G__15014.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__15036 = (i + (2));
i = G__15036;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj15016 = {};
return obj15016;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__15037 = (s + (2));
var G__15038 = d;
s = G__15037;
d = G__15038;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__15039 = (s + (2));
var G__15040 = (d + (2));
s = G__15039;
d = G__15040;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__15017 = cljs.core.aclone(self__.arr);
(G__15017[(idx + (1))] = v);

return G__15017;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15041 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15042 = cljs.core.next(es);
ret = G__15041;
es = G__15042;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__15043 = null;
var G__15043__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15043__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15043 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15043__2.call(this,self__,k);
case 3:
return G__15043__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15043.cljs$core$IFn$_invoke$arity$2 = G__15043__2;
G__15043.cljs$core$IFn$_invoke$arity$3 = G__15043__3;
return G__15043;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args14997){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14997)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15044 = (i + (2));
var G__15045 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15044;
ret = G__15045;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__15046_15054 = self__.arr;
G__15046_15054.pop();

G__15046_15054.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__15047 = self__.len;
var G__15048 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__15047,G__15048) : cljs.core.array__GT_transient_hash_map.call(null,G__15047,G__15048));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__15049 = o;
if(G__15049){
var bit__4263__auto__ = (G__15049.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4263__auto__) || (G__15049.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15049.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15049);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15049);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__15050 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15050) : cljs.core.key.call(null,G__15050));
})(),(function (){var G__15051 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15051) : cljs.core.val.call(null,G__15051));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__15055 = cljs.core.next(es);
var G__15056 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__15052 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15052) : cljs.core.key.call(null,G__15052));
})(),(function (){var G__15053 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15053) : cljs.core.val.call(null,G__15053));
})());
es = G__15055;
tcoll__$2 = G__15056;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__15057 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__15058 = (i + (2));
out = G__15057;
i = G__15058;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__15061 = cljs.core.aclone(arr);
(G__15061[i] = a);

return G__15061;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__15062 = cljs.core.aclone(arr);
(G__15062[i] = a);

(G__15062[j] = b);

return G__15062;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__15067 = init__$1;
var G__15068 = k;
var G__15069 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15067,G__15068,G__15069) : f.call(null,G__15067,G__15068,G__15069));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15070 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15070) : cljs.core.deref.call(null,G__15070));
} else {
var G__15071 = (i + (2));
var G__15072 = init__$2;
i = G__15071;
init__$1 = G__15072;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15073 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15073) : cljs.core.create_inode_seq.call(null,G__15073));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15087 = (0);
var j_15088 = (0);
while(true){
if((i_15087 < (32))){
if((((self__.bitmap >>> i_15087) & (1)) === (0))){
var G__15089 = (i_15087 + (1));
var G__15090 = j_15088;
i_15087 = G__15089;
j_15088 = G__15090;
continue;
} else {
(nodes[i_15087] = ((!(((self__.arr[j_15088]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_15088])),(self__.arr[j_15088]),(self__.arr[(j_15088 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15088 + (1))])));

var G__15091 = (i_15087 + (1));
var G__15092 = (j_15088 + (2));
i_15087 = G__15091;
j_15088 = G__15092;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15074 = edit__$1;
var G__15075 = (shift + (5));
var G__15076 = key_or_nil;
var G__15077 = val_or_node;
var G__15078 = hash;
var G__15079 = key;
var G__15080 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15074,G__15075,G__15076,G__15077,G__15078,G__15079,G__15080) : cljs.core.create_node.call(null,G__15074,G__15075,G__15076,G__15077,G__15078,G__15079,G__15080));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15093 = (0);
var j_15094 = (0);
while(true){
if((i_15093 < (32))){
if((((self__.bitmap >>> i_15093) & (1)) === (0))){
var G__15095 = (i_15093 + (1));
var G__15096 = j_15094;
i_15093 = G__15095;
j_15094 = G__15096;
continue;
} else {
(nodes[i_15093] = ((!(((self__.arr[j_15094]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_15094])),(self__.arr[j_15094]),(self__.arr[(j_15094 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15094 + (1))])));

var G__15097 = (i_15093 + (1));
var G__15098 = (j_15094 + (2));
i_15093 = G__15097;
j_15094 = G__15098;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15081 = (shift + (5));
var G__15082 = key_or_nil;
var G__15083 = val_or_node;
var G__15084 = hash;
var G__15085 = key;
var G__15086 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15081,G__15082,G__15083,G__15084,G__15085,G__15086) : cljs.core.create_node.call(null,G__15081,G__15082,G__15083,G__15084,G__15085,G__15086));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__15099 = (i + (1));
var G__15100 = (j + (2));
var G__15101 = (bitmap | ((1) << i));
i = G__15099;
j = G__15100;
bitmap = G__15101;
continue;
} else {
var G__15102 = (i + (1));
var G__15103 = j;
var G__15104 = bitmap;
i = G__15102;
j = G__15103;
bitmap = G__15104;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15105 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__15105) : cljs.core.create_array_node_seq.call(null,G__15105));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15106 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15106) : cljs.core.deref.call(null,G__15106));
} else {
var G__15107 = (i + (1));
var G__15108 = init__$2;
i = G__15107;
init__$1 = G__15108;
continue;
}
} else {
var G__15109 = (i + (1));
var G__15110 = init__$1;
i = G__15109;
init__$1 = G__15110;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__15111 = (i + (2));
i = G__15111;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15112 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15112) : cljs.core.create_inode_seq.call(null,G__15112));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__15113 = self__.nodes;
var G__15114 = (self__.i + (2));
var G__15115 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15113,G__15114,G__15115) : cljs.core.create_inode_seq.call(null,G__15113,G__15114,G__15115));
} else {
var G__15116 = self__.nodes;
var G__15117 = self__.i;
var G__15118 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15116,G__15117,G__15118) : cljs.core.create_inode_seq.call(null,G__15116,G__15117,G__15118));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__15122 = (j + (2));
j = G__15122;
continue;
}
} else {
var G__15123 = (j + (2));
j = G__15123;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__15124 = null;
var G__15125 = self__.nodes;
var G__15126 = self__.i;
var G__15127 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15124,G__15125,G__15126,G__15127) : cljs.core.create_array_node_seq.call(null,G__15124,G__15125,G__15126,G__15127));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__15132 = (j + (1));
j = G__15132;
continue;
}
} else {
var G__15133 = (j + (1));
j = G__15133;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15135 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15135) : cljs.core.keys.call(null,G__15135));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15136 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15136) : cljs.core.vals.call(null,G__15136));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15137 = cljs.core.seq(coll);
var chunk__15138 = null;
var count__15139 = (0);
var i__15140 = (0);
while(true){
if((i__15140 < count__15139)){
var vec__15141 = chunk__15138.cljs$core$IIndexed$_nth$arity$2(null,i__15140);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15141,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15141,(1),null);
var G__15142_15153 = v;
var G__15143_15154 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15142_15153,G__15143_15154) : f.call(null,G__15142_15153,G__15143_15154));

var G__15155 = seq__15137;
var G__15156 = chunk__15138;
var G__15157 = count__15139;
var G__15158 = (i__15140 + (1));
seq__15137 = G__15155;
chunk__15138 = G__15156;
count__15139 = G__15157;
i__15140 = G__15158;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15137);
if(temp__4126__auto__){
var seq__15137__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15137__$1)){
var c__4369__auto__ = cljs.core.chunk_first(seq__15137__$1);
var G__15159 = cljs.core.chunk_rest(seq__15137__$1);
var G__15160 = c__4369__auto__;
var G__15161 = cljs.core.count(c__4369__auto__);
var G__15162 = (0);
seq__15137 = G__15159;
chunk__15138 = G__15160;
count__15139 = G__15161;
i__15140 = G__15162;
continue;
} else {
var vec__15144 = cljs.core.first(seq__15137__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15144,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15144,(1),null);
var G__15145_15163 = v;
var G__15146_15164 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15145_15163,G__15146_15164) : f.call(null,G__15145_15163,G__15146_15164));

var G__15165 = cljs.core.next(seq__15137__$1);
var G__15166 = null;
var G__15167 = (0);
var G__15168 = (0);
seq__15137 = G__15165;
chunk__15138 = G__15166;
count__15139 = G__15167;
i__15140 = G__15168;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__15147 = init;
var G__15148 = null;
var G__15149 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15147,G__15148,G__15149) : f.call(null,G__15147,G__15148,G__15149));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15150 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15150) : cljs.core.deref.call(null,G__15150));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj15152 = {};
return obj15152;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15169 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15170 = cljs.core.next(es);
ret = G__15169;
es = G__15170;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__15171 = null;
var G__15171__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15171__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15171 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15171__2.call(this,self__,k);
case 3:
return G__15171__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15171.cljs$core$IFn$_invoke$arity$2 = G__15171__2;
G__15171.cljs$core$IFn$_invoke$arity$3 = G__15171__3;
return G__15171;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args15134){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15134)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15172 = (i + (2));
var G__15173 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15172;
ret = G__15173;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15174 = (i + (1));
var G__15175 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__15174;
out = G__15175;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__15176 = o;
if(G__15176){
var bit__4263__auto__ = (G__15176.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4263__auto__) || (G__15176.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15176.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15176);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15176);
}
})()){
return tcoll.assoc_BANG_((function (){var G__15177 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15177) : cljs.core.key.call(null,G__15177));
})(),(function (){var G__15178 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15178) : cljs.core.val.call(null,G__15178));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__15181 = cljs.core.next(es);
var G__15182 = tcoll__$1.assoc_BANG_((function (){var G__15179 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15179) : cljs.core.key.call(null,G__15179));
})(),(function (){var G__15180 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15180) : cljs.core.val.call(null,G__15180));
})());
es = G__15181;
tcoll__$1 = G__15182;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__15183 = ((ascending_QMARK_)?t.left:t.right);
var G__15184 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__15183;
stack__$1 = G__15184;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15197 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15197) : cljs.core.deref.call(null,G__15197));
} else {
var init__$2 = (function (){var G__15198 = init__$1;
var G__15199 = node.key;
var G__15200 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15198,G__15199,G__15200) : f.call(null,G__15198,G__15199,G__15200));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15201 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15201) : cljs.core.deref.call(null,G__15201));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__15202 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15202) : cljs.core.deref.call(null,G__15202));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__15204 = null;
var G__15204__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15204__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15204 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15204__2.call(this,self__,k);
case 3:
return G__15204__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15204.cljs$core$IFn$_invoke$arity$2 = G__15204__2;
G__15204.cljs$core$IFn$_invoke$arity$3 = G__15204__3;
return G__15204;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args15203){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15203)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__15206 = null;
var G__15206__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15206__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15206 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15206__2.call(this,self__,k);
case 3:
return G__15206__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15206.cljs$core$IFn$_invoke$arity$2 = G__15206__2;
G__15206.cljs$core$IFn$_invoke$arity$3 = G__15206__3;
return G__15206;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args15205){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15205)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__15219 = k;
var G__15220 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15219,G__15220) : comp.call(null,G__15219,G__15220));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__15239 = k;
var G__15240 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15239,G__15240) : comp.call(null,G__15239,G__15240));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__15251 = k;
var G__15252 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15251,G__15252) : comp.call(null,G__15251,G__15252));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15254 = cljs.core.seq(coll);
var chunk__15255 = null;
var count__15256 = (0);
var i__15257 = (0);
while(true){
if((i__15257 < count__15256)){
var vec__15258 = chunk__15255.cljs$core$IIndexed$_nth$arity$2(null,i__15257);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15258,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15258,(1),null);
var G__15259_15271 = v;
var G__15260_15272 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15259_15271,G__15260_15272) : f.call(null,G__15259_15271,G__15260_15272));

var G__15273 = seq__15254;
var G__15274 = chunk__15255;
var G__15275 = count__15256;
var G__15276 = (i__15257 + (1));
seq__15254 = G__15273;
chunk__15255 = G__15274;
count__15256 = G__15275;
i__15257 = G__15276;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15254);
if(temp__4126__auto__){
var seq__15254__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15254__$1)){
var c__4369__auto__ = cljs.core.chunk_first(seq__15254__$1);
var G__15277 = cljs.core.chunk_rest(seq__15254__$1);
var G__15278 = c__4369__auto__;
var G__15279 = cljs.core.count(c__4369__auto__);
var G__15280 = (0);
seq__15254 = G__15277;
chunk__15255 = G__15278;
count__15256 = G__15279;
i__15257 = G__15280;
continue;
} else {
var vec__15261 = cljs.core.first(seq__15254__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15261,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15261,(1),null);
var G__15262_15281 = v;
var G__15263_15282 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15262_15281,G__15263_15282) : f.call(null,G__15262_15281,G__15263_15282));

var G__15283 = cljs.core.next(seq__15254__$1);
var G__15284 = null;
var G__15285 = (0);
var G__15286 = (0);
seq__15254 = G__15283;
chunk__15255 = G__15284;
count__15256 = G__15285;
i__15257 = G__15286;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15264 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15264) : cljs.core.keys.call(null,G__15264));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15265 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15265) : cljs.core.vals.call(null,G__15265));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15266 = k;
var G__15267 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15266,G__15267) : self__.comp.call(null,G__15266,G__15267));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__15287 = t.left;
t = G__15287;
continue;
} else {
var G__15288 = t.right;
t = G__15288;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15289 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15290 = cljs.core.next(es);
ret = G__15289;
es = G__15290;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__15291 = null;
var G__15291__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15291__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15291 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15291__2.call(this,self__,k);
case 3:
return G__15291__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15291.cljs$core$IFn$_invoke$arity$2 = G__15291__2;
G__15291.cljs$core$IFn$_invoke$arity$3 = G__15291__3;
return G__15291;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args15253){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15253)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15268 = k;
var G__15269 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15268,G__15269) : self__.comp.call(null,G__15268,G__15269));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__15292 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15293 = t.left;
stack = G__15292;
t = G__15293;
continue;
} else {
var G__15294 = stack;
var G__15295 = t.right;
stack = G__15294;
t = G__15295;
continue;
}
} else {
if((c > (0))){
var G__15296 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15297 = t.right;
stack = G__15296;
t = G__15297;
continue;
} else {
var G__15298 = stack;
var G__15299 = t.left;
stack = G__15298;
t = G__15299;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__15270 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15270) : cljs.core.key.call(null,G__15270));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__15300 = cljs.core.nnext(in$);
var G__15301 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15300;
out = G__15301;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15302__i = 0, G__15302__a = new Array(arguments.length -  0);
while (G__15302__i < G__15302__a.length) {G__15302__a[G__15302__i] = arguments[G__15302__i + 0]; ++G__15302__i;}
  keyvals = new cljs.core.IndexedSeq(G__15302__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__15303){
var keyvals = cljs.core.seq(arglist__15303);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15304__i = 0, G__15304__a = new Array(arguments.length -  0);
while (G__15304__i < G__15304__a.length) {G__15304__a[G__15304__i] = arguments[G__15304__i + 0]; ++G__15304__i;}
  keyvals = new cljs.core.IndexedSeq(G__15304__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__15305){
var keyvals = cljs.core.seq(arglist__15305);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj15309 = {};
return obj15309;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__15310 = cljs.core.nnext(kvs);
kvs = G__15310;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15311__i = 0, G__15311__a = new Array(arguments.length -  0);
while (G__15311__i < G__15311__a.length) {G__15311__a[G__15311__i] = arguments[G__15311__i + 0]; ++G__15311__i;}
  keyvals = new cljs.core.IndexedSeq(G__15311__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__15312){
var keyvals = cljs.core.seq(arglist__15312);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__15313 = cljs.core.nnext(in$);
var G__15314 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15313;
out = G__15314;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15315__i = 0, G__15315__a = new Array(arguments.length -  0);
while (G__15315__i < G__15315__a.length) {G__15315__a[G__15315__i] = arguments[G__15315__i + 0]; ++G__15315__i;}
  keyvals = new cljs.core.IndexedSeq(G__15315__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__15316){
var keyvals = cljs.core.seq(arglist__15316);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__15317 = cljs.core.nnext(in$);
var G__15318 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15317;
out = G__15318;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__15319__i = 0, G__15319__a = new Array(arguments.length -  1);
while (G__15319__i < G__15319__a.length) {G__15319__a[G__15319__i] = arguments[G__15319__i + 1]; ++G__15319__i;}
  keyvals = new cljs.core.IndexedSeq(G__15319__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__15320){
var comparator = cljs.core.first(arglist__15320);
var keyvals = cljs.core.rest(arglist__15320);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15321 = self__.mseq;
if(G__15321){
var bit__4263__auto__ = (G__15321.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4263__auto__) || (G__15321.cljs$core$INext$)){
return true;
} else {
if((!G__15321.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15321);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15321);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15322 = self__.mseq;
if(G__15322){
var bit__4263__auto__ = (G__15322.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4263__auto__) || (G__15322.cljs$core$INext$)){
return true;
} else {
if((!G__15322.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15322);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15322);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15323 = self__.mseq;
if(G__15323){
var bit__4263__auto__ = (G__15323.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4263__auto__) || (G__15323.cljs$core$INext$)){
return true;
} else {
if((!G__15323.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15323);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15323);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15324 = self__.mseq;
if(G__15324){
var bit__4263__auto__ = (G__15324.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4263__auto__) || (G__15324.cljs$core$INext$)){
return true;
} else {
if((!G__15324.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15324);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15324);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__15325_SHARP_,p2__15326_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3582__auto__ = p1__15325_SHARP_;
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__15326_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__15327__i = 0, G__15327__a = new Array(arguments.length -  0);
while (G__15327__i < G__15327__a.length) {G__15327__a[G__15327__i] = arguments[G__15327__i + 0]; ++G__15327__i;}
  maps = new cljs.core.IndexedSeq(G__15327__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__15328){
var maps = cljs.core.seq(arglist__15328);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15331 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15332 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15331,G__15332) : f.call(null,G__15331,G__15332));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3582__auto__ = m1;
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__15333__i = 0, G__15333__a = new Array(arguments.length -  1);
while (G__15333__i < G__15333__a.length) {G__15333__a[G__15333__i] = arguments[G__15333__i + 1]; ++G__15333__i;}
  maps = new cljs.core.IndexedSeq(G__15333__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__15334){
var f = cljs.core.first(arglist__15334);
var maps = cljs.core.rest(arglist__15334);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$14);
var G__15335 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$14))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__15336 = cljs.core.next(keys);
ret = G__15335;
keys = G__15336;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15339 = cljs.core.seq(coll);
var chunk__15340 = null;
var count__15341 = (0);
var i__15342 = (0);
while(true){
if((i__15342 < count__15341)){
var vec__15343 = chunk__15340.cljs$core$IIndexed$_nth$arity$2(null,i__15342);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15343,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15343,(1),null);
var G__15344_15349 = v;
var G__15345_15350 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15344_15349,G__15345_15350) : f.call(null,G__15344_15349,G__15345_15350));

var G__15351 = seq__15339;
var G__15352 = chunk__15340;
var G__15353 = count__15341;
var G__15354 = (i__15342 + (1));
seq__15339 = G__15351;
chunk__15340 = G__15352;
count__15341 = G__15353;
i__15342 = G__15354;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15339);
if(temp__4126__auto__){
var seq__15339__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15339__$1)){
var c__4369__auto__ = cljs.core.chunk_first(seq__15339__$1);
var G__15355 = cljs.core.chunk_rest(seq__15339__$1);
var G__15356 = c__4369__auto__;
var G__15357 = cljs.core.count(c__4369__auto__);
var G__15358 = (0);
seq__15339 = G__15355;
chunk__15340 = G__15356;
count__15341 = G__15357;
i__15342 = G__15358;
continue;
} else {
var vec__15346 = cljs.core.first(seq__15339__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15346,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15346,(1),null);
var G__15347_15359 = v;
var G__15348_15360 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15347_15359,G__15348_15360) : f.call(null,G__15347_15359,G__15348_15360));

var G__15361 = cljs.core.next(seq__15339__$1);
var G__15362 = null;
var G__15363 = (0);
var G__15364 = (0);
seq__15339 = G__15361;
chunk__15340 = G__15362;
count__15341 = G__15363;
i__15342 = G__15364;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15337_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15337_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__15365 = null;
var G__15365__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15365__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15365 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15365__2.call(this,self__,k);
case 3:
return G__15365__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15365.cljs$core$IFn$_invoke$arity$2 = G__15365__2;
G__15365.cljs$core$IFn$_invoke$arity$3 = G__15365__3;
return G__15365;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args15338){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15338)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15366 = (i + (1));
var G__15367 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__15366;
out = G__15367;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__15368 = (i + (1));
var G__15369 = cljs.core._conj_BANG_(out,(items[i]));
i = G__15368;
out = G__15369;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__15371 = null;
var G__15371__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__15371__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__15371 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15371__2.call(this,self__,k);
case 3:
return G__15371__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15371.cljs$core$IFn$_invoke$arity$2 = G__15371__2;
G__15371.cljs$core$IFn$_invoke$arity$3 = G__15371__3;
return G__15371;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args15370){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15370)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15374 = cljs.core.seq(coll);
var chunk__15375 = null;
var count__15376 = (0);
var i__15377 = (0);
while(true){
if((i__15377 < count__15376)){
var vec__15378 = chunk__15375.cljs$core$IIndexed$_nth$arity$2(null,i__15377);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15378,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15378,(1),null);
var G__15379_15384 = v;
var G__15380_15385 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15379_15384,G__15380_15385) : f.call(null,G__15379_15384,G__15380_15385));

var G__15386 = seq__15374;
var G__15387 = chunk__15375;
var G__15388 = count__15376;
var G__15389 = (i__15377 + (1));
seq__15374 = G__15386;
chunk__15375 = G__15387;
count__15376 = G__15388;
i__15377 = G__15389;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15374);
if(temp__4126__auto__){
var seq__15374__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15374__$1)){
var c__4369__auto__ = cljs.core.chunk_first(seq__15374__$1);
var G__15390 = cljs.core.chunk_rest(seq__15374__$1);
var G__15391 = c__4369__auto__;
var G__15392 = cljs.core.count(c__4369__auto__);
var G__15393 = (0);
seq__15374 = G__15390;
chunk__15375 = G__15391;
count__15376 = G__15392;
i__15377 = G__15393;
continue;
} else {
var vec__15381 = cljs.core.first(seq__15374__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15381,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15381,(1),null);
var G__15382_15394 = v;
var G__15383_15395 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15382_15394,G__15383_15395) : f.call(null,G__15382_15394,G__15383_15395));

var G__15396 = cljs.core.next(seq__15374__$1);
var G__15397 = null;
var G__15398 = (0);
var G__15399 = (0);
seq__15374 = G__15396;
chunk__15375 = G__15397;
count__15376 = G__15398;
i__15377 = G__15399;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15372_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15372_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__15400 = null;
var G__15400__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15400__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15400 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15400__2.call(this,self__,k);
case 3:
return G__15400__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15400.cljs$core$IFn$_invoke$arity$2 = G__15400__2;
G__15400.cljs$core$IFn$_invoke$arity$3 = G__15400__3;
return G__15400;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args15373){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15373)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4463__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4463__auto__.length)){
var G__15401 = (i + (1));
var G__15402 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__15401;
res = G__15402;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__15403 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__15404 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__15403;
out = G__15404;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__15405__delegate = function (keys){
return cljs.core.set(keys);
};
var G__15405 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15406__i = 0, G__15406__a = new Array(arguments.length -  0);
while (G__15406__i < G__15406__a.length) {G__15406__a[G__15406__i] = arguments[G__15406__i + 0]; ++G__15406__i;}
  keys = new cljs.core.IndexedSeq(G__15406__a,0);
} 
return G__15405__delegate.call(this,keys);};
G__15405.cljs$lang$maxFixedArity = 0;
G__15405.cljs$lang$applyTo = (function (arglist__15407){
var keys = cljs.core.seq(arglist__15407);
return G__15405__delegate(keys);
});
G__15405.cljs$core$IFn$_invoke$arity$variadic = G__15405__delegate;
return G__15405;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__15408 = null;
if (arguments.length > 0) {
var G__15409__i = 0, G__15409__a = new Array(arguments.length -  0);
while (G__15409__i < G__15409__a.length) {G__15409__a[G__15409__i] = arguments[G__15409__i + 0]; ++G__15409__i;}
G__15408 = new cljs.core.IndexedSeq(G__15409__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15410__i = 0, G__15410__a = new Array(arguments.length -  0);
while (G__15410__i < G__15410__a.length) {G__15410__a[G__15410__i] = arguments[G__15410__i + 0]; ++G__15410__i;}
  keys = new cljs.core.IndexedSeq(G__15410__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__15411){
var keys = cljs.core.seq(arglist__15411);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__15412__i = 0, G__15412__a = new Array(arguments.length -  1);
while (G__15412__i < G__15412__a.length) {G__15412__a[G__15412__i] = arguments[G__15412__i + 1]; ++G__15412__i;}
  keys = new cljs.core.IndexedSeq(G__15412__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__15413){
var comparator = cljs.core.first(arglist__15413);
var keys = cljs.core.rest(arglist__15413);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__15414_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15414_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__15414_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15415_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15415_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__15415_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__15436 = null;
var G__15436__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15436__1 = (function (result){
var G__15426 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15426) : rf.call(null,G__15426));
});
var G__15436__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__15427 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15427) : cljs.core.deref.call(null,G__15427));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__15428 = result;
var G__15429 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15428,G__15429) : rf.call(null,G__15428,G__15429));
}
});
G__15436 = function(result,input){
switch(arguments.length){
case 0:
return G__15436__0.call(this);
case 1:
return G__15436__1.call(this,result);
case 2:
return G__15436__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15436.cljs$core$IFn$_invoke$arity$0 = G__15436__0;
G__15436.cljs$core$IFn$_invoke$arity$1 = G__15436__1;
G__15436.cljs$core$IFn$_invoke$arity$2 = G__15436__2;
return G__15436;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__15434,seen__$1){
while(true){
var vec__15435 = p__15434;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15435,(0),null);
var xs__$1 = vec__15435;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__15437 = cljs.core.rest(s);
var G__15438 = seen__$1;
p__15434 = G__15437;
seen__$1 = G__15438;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__15439 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__15440 = cljs.core.next(s__$1);
ret = G__15439;
s__$1 = G__15440;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__15442 = x;
if(G__15442){
var bit__4256__auto__ = (G__15442.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4256__auto__) || (G__15442.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__15443 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__15444 = cljs.core.next(ks);
var G__15445 = cljs.core.next(vs);
map = G__15443;
ks = G__15444;
vs = G__15445;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__15456 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15456) : k.call(null,G__15456));
})() > (function (){var G__15457 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15457) : k.call(null,G__15457));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__15458__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15446_SHARP_,p2__15447_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__15446_SHARP_,p2__15447_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15458 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15459__i = 0, G__15459__a = new Array(arguments.length -  3);
while (G__15459__i < G__15459__a.length) {G__15459__a[G__15459__i] = arguments[G__15459__i + 3]; ++G__15459__i;}
  more = new cljs.core.IndexedSeq(G__15459__a,0);
} 
return G__15458__delegate.call(this,k,x,y,more);};
G__15458.cljs$lang$maxFixedArity = 3;
G__15458.cljs$lang$applyTo = (function (arglist__15460){
var k = cljs.core.first(arglist__15460);
arglist__15460 = cljs.core.next(arglist__15460);
var x = cljs.core.first(arglist__15460);
arglist__15460 = cljs.core.next(arglist__15460);
var y = cljs.core.first(arglist__15460);
var more = cljs.core.rest(arglist__15460);
return G__15458__delegate(k,x,y,more);
});
G__15458.cljs$core$IFn$_invoke$arity$variadic = G__15458__delegate;
return G__15458;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__15461 = null;
if (arguments.length > 3) {
var G__15462__i = 0, G__15462__a = new Array(arguments.length -  3);
while (G__15462__i < G__15462__a.length) {G__15462__a[G__15462__i] = arguments[G__15462__i + 3]; ++G__15462__i;}
G__15461 = new cljs.core.IndexedSeq(G__15462__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__15473 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15473) : k.call(null,G__15473));
})() < (function (){var G__15474 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15474) : k.call(null,G__15474));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__15475__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15463_SHARP_,p2__15464_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__15463_SHARP_,p2__15464_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15475 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15476__i = 0, G__15476__a = new Array(arguments.length -  3);
while (G__15476__i < G__15476__a.length) {G__15476__a[G__15476__i] = arguments[G__15476__i + 3]; ++G__15476__i;}
  more = new cljs.core.IndexedSeq(G__15476__a,0);
} 
return G__15475__delegate.call(this,k,x,y,more);};
G__15475.cljs$lang$maxFixedArity = 3;
G__15475.cljs$lang$applyTo = (function (arglist__15477){
var k = cljs.core.first(arglist__15477);
arglist__15477 = cljs.core.next(arglist__15477);
var x = cljs.core.first(arglist__15477);
arglist__15477 = cljs.core.next(arglist__15477);
var y = cljs.core.first(arglist__15477);
var more = cljs.core.rest(arglist__15477);
return G__15475__delegate(k,x,y,more);
});
G__15475.cljs$core$IFn$_invoke$arity$variadic = G__15475__delegate;
return G__15475;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__15478 = null;
if (arguments.length > 3) {
var G__15479__i = 0, G__15479__a = new Array(arguments.length -  3);
while (G__15479__i < G__15479__a.length) {G__15479__a[G__15479__i] = arguments[G__15479__i + 3]; ++G__15479__i;}
G__15478 = new cljs.core.IndexedSeq(G__15479__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15478);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__15496 = null;
var G__15496__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15496__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15491 = result;
var G__15492 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15491,G__15492) : rf.call(null,G__15491,G__15492));
})());
})());
var G__15493 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15493) : rf.call(null,G__15493));
});
var G__15496__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__15494 = result;
var G__15495 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15494,G__15495) : rf.call(null,G__15494,G__15495));
} else {
return result;
}
});
G__15496 = function(result,input){
switch(arguments.length){
case 0:
return G__15496__0.call(this);
case 1:
return G__15496__1.call(this,result);
case 2:
return G__15496__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15496.cljs$core$IFn$_invoke$arity$0 = G__15496__0;
G__15496.cljs$core$IFn$_invoke$arity$1 = G__15496__1;
G__15496.cljs$core$IFn$_invoke$arity$2 = G__15496__2;
return G__15496;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__15509 = null;
var G__15509__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15509__1 = (function (result){
var G__15504 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15504) : rf.call(null,G__15504));
});
var G__15509__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15505 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15505) : pred.call(null,G__15505));
})())){
var G__15506 = result;
var G__15507 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15506,G__15507) : rf.call(null,G__15506,G__15507));
} else {
return cljs.core.reduced(result);
}
});
G__15509 = function(result,input){
switch(arguments.length){
case 0:
return G__15509__0.call(this);
case 1:
return G__15509__1.call(this,result);
case 2:
return G__15509__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15509.cljs$core$IFn$_invoke$arity$0 = G__15509__0;
G__15509.cljs$core$IFn$_invoke$arity$1 = G__15509__1;
G__15509.cljs$core$IFn$_invoke$arity$2 = G__15509__2;
return G__15509;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__15508 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15508) : pred.call(null,G__15508));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__15514 = (function (){var G__15516 = cljs.core._entry_key(sc,e);
var G__15517 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15516,G__15517) : comp.call(null,G__15516,G__15517));
})();
var G__15515 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15514,G__15515) : test.call(null,G__15514,G__15515));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15521 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15521,(0),null);
var s = vec__15521;
if(cljs.core.truth_((function (){var G__15522 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15522) : include.call(null,G__15522));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15523 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15523,(0),null);
var s = vec__15523;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15527 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15527,(0),null);
var s = vec__15527;
if(cljs.core.truth_((function (){var G__15528 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15528) : include.call(null,G__15528));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15529 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15529,(0),null);
var s = vec__15529;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__15530 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15530) : Math.ceil.call(null,G__15530));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4003__auto__ = self__.__hash;
if(!((h__4003__auto__ == null))){
return h__4003__auto__;
} else {
var h__4003__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4003__auto____$1;

return h__4003__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__15531 = ret;
var G__15532 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15531,G__15532) : f.call(null,G__15531,G__15532));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__15533 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15533) : cljs.core.deref.call(null,G__15533));
} else {
var G__15534 = (i + self__.step);
var G__15535 = ret__$1;
i = G__15534;
ret = G__15535;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15553 = null;
var G__15553__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15553__1 = (function (result){
var G__15550 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15550) : rf.call(null,G__15550));
});
var G__15553__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__15551 = result;
var G__15552 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15551,G__15552) : rf.call(null,G__15551,G__15552));
} else {
return result;
}
});
G__15553 = function(result,input){
switch(arguments.length){
case 0:
return G__15553__0.call(this);
case 1:
return G__15553__1.call(this,result);
case 2:
return G__15553__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15553.cljs$core$IFn$_invoke$arity$0 = G__15553__0;
G__15553.cljs$core$IFn$_invoke$arity$1 = G__15553__1;
G__15553.cljs$core$IFn$_invoke$arity$2 = G__15553__2;
return G__15553;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (a,pa){
return (function() {
var G__15575 = null;
var G__15575__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15575__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15566 = result;
var G__15567 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15566,G__15567) : rf.call(null,G__15566,G__15567));
})());
})());
var G__15568 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15568) : rf.call(null,G__15568));
});
var G__15575__2 = (function (result,input){
var pval = (function (){var G__15569 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15569) : cljs.core.deref.call(null,G__15569));
})();
var val = (function (){var G__15570 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15570) : f.call(null,G__15570));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$15)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__15571 = result;
var G__15572 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15571,G__15572) : rf.call(null,G__15571,G__15572));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__15575 = function(result,input){
switch(arguments.length){
case 0:
return G__15575__0.call(this);
case 1:
return G__15575__1.call(this,result);
case 2:
return G__15575__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15575.cljs$core$IFn$_invoke$arity$0 = G__15575__0;
G__15575.cljs$core$IFn$_invoke$arity$1 = G__15575__1;
G__15575.cljs$core$IFn$_invoke$arity$2 = G__15575__2;
return G__15575;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__15573 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15573) : f.call(null,G__15573));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__15554_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__15574 = p1__15554_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15574) : f.call(null,G__15574));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__15584 = init;
var G__15585 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15584,G__15585) : f.call(null,G__15584,G__15585));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__15680 = null;
var G__15680__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__15680__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15638 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15638) : f.call(null,G__15638));
})()],null));
});
var G__15680__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15639 = x;
var G__15640 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15639,G__15640) : f.call(null,G__15639,G__15640));
})()],null));
});
var G__15680__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15641 = x;
var G__15642 = y;
var G__15643 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15641,G__15642,G__15643) : f.call(null,G__15641,G__15642,G__15643));
})()],null));
});
var G__15680__4 = (function() { 
var G__15681__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__15681 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15682__i = 0, G__15682__a = new Array(arguments.length -  3);
while (G__15682__i < G__15682__a.length) {G__15682__a[G__15682__i] = arguments[G__15682__i + 3]; ++G__15682__i;}
  args = new cljs.core.IndexedSeq(G__15682__a,0);
} 
return G__15681__delegate.call(this,x,y,z,args);};
G__15681.cljs$lang$maxFixedArity = 3;
G__15681.cljs$lang$applyTo = (function (arglist__15683){
var x = cljs.core.first(arglist__15683);
arglist__15683 = cljs.core.next(arglist__15683);
var y = cljs.core.first(arglist__15683);
arglist__15683 = cljs.core.next(arglist__15683);
var z = cljs.core.first(arglist__15683);
var args = cljs.core.rest(arglist__15683);
return G__15681__delegate(x,y,z,args);
});
G__15681.cljs$core$IFn$_invoke$arity$variadic = G__15681__delegate;
return G__15681;
})()
;
G__15680 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15680__0.call(this);
case 1:
return G__15680__1.call(this,x);
case 2:
return G__15680__2.call(this,x,y);
case 3:
return G__15680__3.call(this,x,y,z);
default:
var G__15684 = null;
if (arguments.length > 3) {
var G__15685__i = 0, G__15685__a = new Array(arguments.length -  3);
while (G__15685__i < G__15685__a.length) {G__15685__a[G__15685__i] = arguments[G__15685__i + 3]; ++G__15685__i;}
G__15684 = new cljs.core.IndexedSeq(G__15685__a,0);
}
return G__15680__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15680.cljs$lang$maxFixedArity = 3;
G__15680.cljs$lang$applyTo = G__15680__4.cljs$lang$applyTo;
G__15680.cljs$core$IFn$_invoke$arity$0 = G__15680__0;
G__15680.cljs$core$IFn$_invoke$arity$1 = G__15680__1;
G__15680.cljs$core$IFn$_invoke$arity$2 = G__15680__2;
G__15680.cljs$core$IFn$_invoke$arity$3 = G__15680__3;
G__15680.cljs$core$IFn$_invoke$arity$variadic = G__15680__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15680;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__15686 = null;
var G__15686__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__15686__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15644 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15644) : f.call(null,G__15644));
})(),(function (){var G__15645 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15645) : g.call(null,G__15645));
})()],null));
});
var G__15686__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15646 = x;
var G__15647 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15646,G__15647) : f.call(null,G__15646,G__15647));
})(),(function (){var G__15648 = x;
var G__15649 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15648,G__15649) : g.call(null,G__15648,G__15649));
})()],null));
});
var G__15686__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15650 = x;
var G__15651 = y;
var G__15652 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15650,G__15651,G__15652) : f.call(null,G__15650,G__15651,G__15652));
})(),(function (){var G__15653 = x;
var G__15654 = y;
var G__15655 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15653,G__15654,G__15655) : g.call(null,G__15653,G__15654,G__15655));
})()],null));
});
var G__15686__4 = (function() { 
var G__15687__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__15687 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15688__i = 0, G__15688__a = new Array(arguments.length -  3);
while (G__15688__i < G__15688__a.length) {G__15688__a[G__15688__i] = arguments[G__15688__i + 3]; ++G__15688__i;}
  args = new cljs.core.IndexedSeq(G__15688__a,0);
} 
return G__15687__delegate.call(this,x,y,z,args);};
G__15687.cljs$lang$maxFixedArity = 3;
G__15687.cljs$lang$applyTo = (function (arglist__15689){
var x = cljs.core.first(arglist__15689);
arglist__15689 = cljs.core.next(arglist__15689);
var y = cljs.core.first(arglist__15689);
arglist__15689 = cljs.core.next(arglist__15689);
var z = cljs.core.first(arglist__15689);
var args = cljs.core.rest(arglist__15689);
return G__15687__delegate(x,y,z,args);
});
G__15687.cljs$core$IFn$_invoke$arity$variadic = G__15687__delegate;
return G__15687;
})()
;
G__15686 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15686__0.call(this);
case 1:
return G__15686__1.call(this,x);
case 2:
return G__15686__2.call(this,x,y);
case 3:
return G__15686__3.call(this,x,y,z);
default:
var G__15690 = null;
if (arguments.length > 3) {
var G__15691__i = 0, G__15691__a = new Array(arguments.length -  3);
while (G__15691__i < G__15691__a.length) {G__15691__a[G__15691__i] = arguments[G__15691__i + 3]; ++G__15691__i;}
G__15690 = new cljs.core.IndexedSeq(G__15691__a,0);
}
return G__15686__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15690);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15686.cljs$lang$maxFixedArity = 3;
G__15686.cljs$lang$applyTo = G__15686__4.cljs$lang$applyTo;
G__15686.cljs$core$IFn$_invoke$arity$0 = G__15686__0;
G__15686.cljs$core$IFn$_invoke$arity$1 = G__15686__1;
G__15686.cljs$core$IFn$_invoke$arity$2 = G__15686__2;
G__15686.cljs$core$IFn$_invoke$arity$3 = G__15686__3;
G__15686.cljs$core$IFn$_invoke$arity$variadic = G__15686__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15686;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__15692 = null;
var G__15692__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__15692__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15656 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15656) : f.call(null,G__15656));
})(),(function (){var G__15657 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15657) : g.call(null,G__15657));
})(),(function (){var G__15658 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15658) : h.call(null,G__15658));
})()],null));
});
var G__15692__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15659 = x;
var G__15660 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15659,G__15660) : f.call(null,G__15659,G__15660));
})(),(function (){var G__15661 = x;
var G__15662 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15661,G__15662) : g.call(null,G__15661,G__15662));
})(),(function (){var G__15663 = x;
var G__15664 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15663,G__15664) : h.call(null,G__15663,G__15664));
})()],null));
});
var G__15692__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15665 = x;
var G__15666 = y;
var G__15667 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15665,G__15666,G__15667) : f.call(null,G__15665,G__15666,G__15667));
})(),(function (){var G__15668 = x;
var G__15669 = y;
var G__15670 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15668,G__15669,G__15670) : g.call(null,G__15668,G__15669,G__15670));
})(),(function (){var G__15671 = x;
var G__15672 = y;
var G__15673 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15671,G__15672,G__15673) : h.call(null,G__15671,G__15672,G__15673));
})()],null));
});
var G__15692__4 = (function() { 
var G__15693__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__15693 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15694__i = 0, G__15694__a = new Array(arguments.length -  3);
while (G__15694__i < G__15694__a.length) {G__15694__a[G__15694__i] = arguments[G__15694__i + 3]; ++G__15694__i;}
  args = new cljs.core.IndexedSeq(G__15694__a,0);
} 
return G__15693__delegate.call(this,x,y,z,args);};
G__15693.cljs$lang$maxFixedArity = 3;
G__15693.cljs$lang$applyTo = (function (arglist__15695){
var x = cljs.core.first(arglist__15695);
arglist__15695 = cljs.core.next(arglist__15695);
var y = cljs.core.first(arglist__15695);
arglist__15695 = cljs.core.next(arglist__15695);
var z = cljs.core.first(arglist__15695);
var args = cljs.core.rest(arglist__15695);
return G__15693__delegate(x,y,z,args);
});
G__15693.cljs$core$IFn$_invoke$arity$variadic = G__15693__delegate;
return G__15693;
})()
;
G__15692 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15692__0.call(this);
case 1:
return G__15692__1.call(this,x);
case 2:
return G__15692__2.call(this,x,y);
case 3:
return G__15692__3.call(this,x,y,z);
default:
var G__15696 = null;
if (arguments.length > 3) {
var G__15697__i = 0, G__15697__a = new Array(arguments.length -  3);
while (G__15697__i < G__15697__a.length) {G__15697__a[G__15697__i] = arguments[G__15697__i + 3]; ++G__15697__i;}
G__15696 = new cljs.core.IndexedSeq(G__15697__a,0);
}
return G__15692__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15692.cljs$lang$maxFixedArity = 3;
G__15692.cljs$lang$applyTo = G__15692__4.cljs$lang$applyTo;
G__15692.cljs$core$IFn$_invoke$arity$0 = G__15692__0;
G__15692.cljs$core$IFn$_invoke$arity$1 = G__15692__1;
G__15692.cljs$core$IFn$_invoke$arity$2 = G__15692__2;
G__15692.cljs$core$IFn$_invoke$arity$3 = G__15692__3;
G__15692.cljs$core$IFn$_invoke$arity$variadic = G__15692__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15692;
})()
});
var juxt__4 = (function() { 
var G__15698__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__15699 = null;
var G__15699__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15586_SHARP_,p2__15587_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15586_SHARP_,(function (){return (p2__15587_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15587_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15587_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15699__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15588_SHARP_,p2__15589_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15588_SHARP_,(function (){var G__15674 = x;
return (p2__15589_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15589_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15674) : p2__15589_SHARP_.call(null,G__15674));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15699__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15590_SHARP_,p2__15591_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15590_SHARP_,(function (){var G__15675 = x;
var G__15676 = y;
return (p2__15591_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15591_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15675,G__15676) : p2__15591_SHARP_.call(null,G__15675,G__15676));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15699__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15592_SHARP_,p2__15593_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15592_SHARP_,(function (){var G__15677 = x;
var G__15678 = y;
var G__15679 = z;
return (p2__15593_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15593_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15677,G__15678,G__15679) : p2__15593_SHARP_.call(null,G__15677,G__15678,G__15679));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15699__4 = (function() { 
var G__15700__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15594_SHARP_,p2__15595_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15594_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15595_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__15700 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15701__i = 0, G__15701__a = new Array(arguments.length -  3);
while (G__15701__i < G__15701__a.length) {G__15701__a[G__15701__i] = arguments[G__15701__i + 3]; ++G__15701__i;}
  args = new cljs.core.IndexedSeq(G__15701__a,0);
} 
return G__15700__delegate.call(this,x,y,z,args);};
G__15700.cljs$lang$maxFixedArity = 3;
G__15700.cljs$lang$applyTo = (function (arglist__15702){
var x = cljs.core.first(arglist__15702);
arglist__15702 = cljs.core.next(arglist__15702);
var y = cljs.core.first(arglist__15702);
arglist__15702 = cljs.core.next(arglist__15702);
var z = cljs.core.first(arglist__15702);
var args = cljs.core.rest(arglist__15702);
return G__15700__delegate(x,y,z,args);
});
G__15700.cljs$core$IFn$_invoke$arity$variadic = G__15700__delegate;
return G__15700;
})()
;
G__15699 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15699__0.call(this);
case 1:
return G__15699__1.call(this,x);
case 2:
return G__15699__2.call(this,x,y);
case 3:
return G__15699__3.call(this,x,y,z);
default:
var G__15703 = null;
if (arguments.length > 3) {
var G__15704__i = 0, G__15704__a = new Array(arguments.length -  3);
while (G__15704__i < G__15704__a.length) {G__15704__a[G__15704__i] = arguments[G__15704__i + 3]; ++G__15704__i;}
G__15703 = new cljs.core.IndexedSeq(G__15704__a,0);
}
return G__15699__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15703);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15699.cljs$lang$maxFixedArity = 3;
G__15699.cljs$lang$applyTo = G__15699__4.cljs$lang$applyTo;
G__15699.cljs$core$IFn$_invoke$arity$0 = G__15699__0;
G__15699.cljs$core$IFn$_invoke$arity$1 = G__15699__1;
G__15699.cljs$core$IFn$_invoke$arity$2 = G__15699__2;
G__15699.cljs$core$IFn$_invoke$arity$3 = G__15699__3;
G__15699.cljs$core$IFn$_invoke$arity$variadic = G__15699__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15699;
})()
;})(fs__$1))
};
var G__15698 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__15705__i = 0, G__15705__a = new Array(arguments.length -  3);
while (G__15705__i < G__15705__a.length) {G__15705__a[G__15705__i] = arguments[G__15705__i + 3]; ++G__15705__i;}
  fs = new cljs.core.IndexedSeq(G__15705__a,0);
} 
return G__15698__delegate.call(this,f,g,h,fs);};
G__15698.cljs$lang$maxFixedArity = 3;
G__15698.cljs$lang$applyTo = (function (arglist__15706){
var f = cljs.core.first(arglist__15706);
arglist__15706 = cljs.core.next(arglist__15706);
var g = cljs.core.first(arglist__15706);
arglist__15706 = cljs.core.next(arglist__15706);
var h = cljs.core.first(arglist__15706);
var fs = cljs.core.rest(arglist__15706);
return G__15698__delegate(f,g,h,fs);
});
G__15698.cljs$core$IFn$_invoke$arity$variadic = G__15698__delegate;
return G__15698;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__15707 = null;
if (arguments.length > 3) {
var G__15708__i = 0, G__15708__a = new Array(arguments.length -  3);
while (G__15708__i < G__15708__a.length) {G__15708__a[G__15708__i] = arguments[G__15708__i + 3]; ++G__15708__i;}
G__15707 = new cljs.core.IndexedSeq(G__15708__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__15707);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__15709 = cljs.core.next(coll);
coll = G__15709;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__15710 = (n - (1));
var G__15711 = cljs.core.next(coll);
n = G__15710;
coll = G__15711;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__15715 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15715,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15715,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15715,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_15723 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__15724_15730 = cljs.core.first(coll);
var G__15725_15731 = writer;
var G__15726_15732 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15724_15730,G__15725_15731,G__15726_15732) : print_one.call(null,G__15724_15730,G__15725_15731,G__15726_15732));
} else {
}

var coll_15733__$1 = cljs.core.next(coll);
var n_15734 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_15733__$1) && (((n_15734 == null)) || (!((n_15734 === (0)))))){
cljs.core._write(writer,sep);

var G__15727_15735 = cljs.core.first(coll_15733__$1);
var G__15728_15736 = writer;
var G__15729_15737 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15727_15735,G__15728_15736,G__15729_15737) : print_one.call(null,G__15727_15735,G__15728_15736,G__15729_15737));

var G__15738 = cljs.core.next(coll_15733__$1);
var G__15739 = (n_15734 - (1));
coll_15733__$1 = G__15738;
n_15734 = G__15739;
continue;
} else {
if((cljs.core.seq(coll_15733__$1)) && ((n_15734 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15723;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__15744 = cljs.core.seq(ss);
var chunk__15745 = null;
var count__15746 = (0);
var i__15747 = (0);
while(true){
if((i__15747 < count__15746)){
var s = chunk__15745.cljs$core$IIndexed$_nth$arity$2(null,i__15747);
cljs.core._write(writer,s);

var G__15748 = seq__15744;
var G__15749 = chunk__15745;
var G__15750 = count__15746;
var G__15751 = (i__15747 + (1));
seq__15744 = G__15748;
chunk__15745 = G__15749;
count__15746 = G__15750;
i__15747 = G__15751;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15744);
if(temp__4126__auto__){
var seq__15744__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15744__$1)){
var c__4369__auto__ = cljs.core.chunk_first(seq__15744__$1);
var G__15752 = cljs.core.chunk_rest(seq__15744__$1);
var G__15753 = c__4369__auto__;
var G__15754 = cljs.core.count(c__4369__auto__);
var G__15755 = (0);
seq__15744 = G__15752;
chunk__15745 = G__15753;
count__15746 = G__15754;
i__15747 = G__15755;
continue;
} else {
var s = cljs.core.first(seq__15744__$1);
cljs.core._write(writer,s);

var G__15756 = cljs.core.next(seq__15744__$1);
var G__15757 = null;
var G__15758 = (0);
var G__15759 = (0);
seq__15744 = G__15756;
chunk__15745 = G__15757;
count__15746 = G__15758;
i__15747 = G__15759;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__15760__i = 0, G__15760__a = new Array(arguments.length -  1);
while (G__15760__i < G__15760__a.length) {G__15760__a[G__15760__i] = arguments[G__15760__i + 1]; ++G__15760__i;}
  ss = new cljs.core.IndexedSeq(G__15760__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__15761){
var writer = cljs.core.first(arglist__15761);
var ss = cljs.core.rest(arglist__15761);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj15763 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj15763;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__15766 = "[\\\\\"\b\f\n\r\t]";
var G__15767 = "g";
return RegExp(G__15766,G__15767);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3570__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__3570__auto__)){
var and__3570__auto____$1 = (function (){var G__15781 = obj;
if(G__15781){
var bit__4263__auto__ = (G__15781.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4263__auto__) || (G__15781.cljs$core$IMeta$)){
return true;
} else {
if((!G__15781.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15781);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15781);
}
})();
if(and__3570__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3570__auto____$1;
}
} else {
return and__3570__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__15782 = obj;
if(G__15782){
var bit__4256__auto__ = (G__15782.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4256__auto__) || (G__15782.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__15783 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__15784 = pr_writer;
var G__15785 = writer;
var G__15786 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__15783,G__15784,G__15785,G__15786) : cljs.core.print_map.call(null,G__15783,G__15784,G__15785,G__15786));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__15787 = obj;
return goog.isString(G__15787);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__15789 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__15789;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__15788 = obj;
if(G__15788){
var bit__4263__auto__ = (G__15788.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4263__auto__) || (G__15788.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__15788.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15788);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15788);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__15794 = cljs.core.seq(cljs.core.next(objs));
var chunk__15795 = null;
var count__15796 = (0);
var i__15797 = (0);
while(true){
if((i__15797 < count__15796)){
var obj = chunk__15795.cljs$core$IIndexed$_nth$arity$2(null,i__15797);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15798 = seq__15794;
var G__15799 = chunk__15795;
var G__15800 = count__15796;
var G__15801 = (i__15797 + (1));
seq__15794 = G__15798;
chunk__15795 = G__15799;
count__15796 = G__15800;
i__15797 = G__15801;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15794);
if(temp__4126__auto__){
var seq__15794__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15794__$1)){
var c__4369__auto__ = cljs.core.chunk_first(seq__15794__$1);
var G__15802 = cljs.core.chunk_rest(seq__15794__$1);
var G__15803 = c__4369__auto__;
var G__15804 = cljs.core.count(c__4369__auto__);
var G__15805 = (0);
seq__15794 = G__15802;
chunk__15795 = G__15803;
count__15796 = G__15804;
i__15797 = G__15805;
continue;
} else {
var obj = cljs.core.first(seq__15794__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15806 = cljs.core.next(seq__15794__$1);
var G__15807 = null;
var G__15808 = (0);
var G__15809 = (0);
seq__15794 = G__15806;
chunk__15795 = G__15807;
count__15796 = G__15808;
i__15797 = G__15809;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15810__i = 0, G__15810__a = new Array(arguments.length -  0);
while (G__15810__i < G__15810__a.length) {G__15810__a[G__15810__i] = arguments[G__15810__i + 0]; ++G__15810__i;}
  objs = new cljs.core.IndexedSeq(G__15810__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__15811){
var objs = cljs.core.seq(arglist__15811);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15812__i = 0, G__15812__a = new Array(arguments.length -  0);
while (G__15812__i < G__15812__a.length) {G__15812__a[G__15812__i] = arguments[G__15812__i + 0]; ++G__15812__i;}
  objs = new cljs.core.IndexedSeq(G__15812__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__15813){
var objs = cljs.core.seq(arglist__15813);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15814__i = 0, G__15814__a = new Array(arguments.length -  0);
while (G__15814__i < G__15814__a.length) {G__15814__a[G__15814__i] = arguments[G__15814__i + 0]; ++G__15814__i;}
  objs = new cljs.core.IndexedSeq(G__15814__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__15815){
var objs = cljs.core.seq(arglist__15815);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15816__i = 0, G__15816__a = new Array(arguments.length -  0);
while (G__15816__i < G__15816__a.length) {G__15816__a[G__15816__i] = arguments[G__15816__i + 0]; ++G__15816__i;}
  objs = new cljs.core.IndexedSeq(G__15816__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__15817){
var objs = cljs.core.seq(arglist__15817);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15818__i = 0, G__15818__a = new Array(arguments.length -  0);
while (G__15818__i < G__15818__a.length) {G__15818__a[G__15818__i] = arguments[G__15818__i + 0]; ++G__15818__i;}
  objs = new cljs.core.IndexedSeq(G__15818__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__15819){
var objs = cljs.core.seq(arglist__15819);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15820__i = 0, G__15820__a = new Array(arguments.length -  0);
while (G__15820__i < G__15820__a.length) {G__15820__a[G__15820__i] = arguments[G__15820__i + 0]; ++G__15820__i;}
  objs = new cljs.core.IndexedSeq(G__15820__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__15821){
var objs = cljs.core.seq(arglist__15821);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15822__i = 0, G__15822__a = new Array(arguments.length -  0);
while (G__15822__i < G__15822__a.length) {G__15822__a[G__15822__i] = arguments[G__15822__i + 0]; ++G__15822__i;}
  objs = new cljs.core.IndexedSeq(G__15822__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__15823){
var objs = cljs.core.seq(arglist__15823);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15824__i = 0, G__15824__a = new Array(arguments.length -  0);
while (G__15824__i < G__15824__a.length) {G__15824__a[G__15824__i] = arguments[G__15824__i + 0]; ++G__15824__i;}
  objs = new cljs.core.IndexedSeq(G__15824__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__15825){
var objs = cljs.core.seq(arglist__15825);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__15832_15838 = cljs.core.key(e);
var G__15833_15839 = w;
var G__15834_15840 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15832_15838,G__15833_15839,G__15834_15840) : print_one.call(null,G__15832_15838,G__15833_15839,G__15834_15840));

cljs.core._write(w," ");

var G__15835 = cljs.core.val(e);
var G__15836 = w;
var G__15837 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15835,G__15836,G__15837) : print_one.call(null,G__15835,G__15836,G__15837));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__15841__i = 0, G__15841__a = new Array(arguments.length -  2);
while (G__15841__i < G__15841__a.length) {G__15841__a[G__15841__i] = arguments[G__15841__i + 2]; ++G__15841__i;}
  args = new cljs.core.IndexedSeq(G__15841__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__15842){
var iref = cljs.core.first(arglist__15842);
arglist__15842 = cljs.core.next(arglist__15842);
var f = cljs.core.first(arglist__15842);
var args = cljs.core.rest(arglist__15842);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__15845 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15845) : cljs.core.atom.call(null,G__15845));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__15847 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15847) : cljs.core.deref.call(null,G__15847));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__15848_SHARP_,p2__15849_SHARP_){
var ret = (function (){var G__15852 = p1__15848_SHARP_;
var G__15853 = p2__15849_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15852,G__15853) : rf.call(null,G__15852,G__15853));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__15856 = null;
var G__15856__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15856__1 = (function (result){
var G__15855 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15855) : rf.call(null,G__15855));
});
var G__15856__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__15856 = function(result,input){
switch(arguments.length){
case 0:
return G__15856__0.call(this);
case 1:
return G__15856__1.call(this,result);
case 2:
return G__15856__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15856.cljs$core$IFn$_invoke$arity$0 = G__15856__0;
G__15856.cljs$core$IFn$_invoke$arity$1 = G__15856__1;
G__15856.cljs$core$IFn$_invoke$arity$2 = G__15856__2;
return G__15856;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (pa){
return (function() {
var G__15865 = null;
var G__15865__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15865__1 = (function (result){
var G__15861 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15861) : rf.call(null,G__15861));
});
var G__15865__2 = (function (result,input){
var prior = (function (){var G__15862 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15862) : cljs.core.deref.call(null,G__15862));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__15863 = result;
var G__15864 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15863,G__15864) : rf.call(null,G__15863,G__15864));
}
});
G__15865 = function(result,input){
switch(arguments.length){
case 0:
return G__15865__0.call(this);
case 1:
return G__15865__1.call(this,result);
case 2:
return G__15865__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15865.cljs$core$IFn$_invoke$arity$0 = G__15865__0;
G__15865.cljs$core$IFn$_invoke$arity$1 = G__15865__1;
G__15865.cljs$core$IFn$_invoke$arity$2 = G__15865__2;
return G__15865;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4560__auto__ = this;
return cljs.core.es6_iterator(this__4560__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15867_SHARP_,p2__15866_SHARP_){
var G__15869 = p2__15866_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__15869) : proc.call(null,G__15869));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj15871 = {};
return obj15871;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3570__auto__ = x;
if(and__3570__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3570__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4226__auto__ = (((x == null))?null:x);
return (function (){var or__3582__auto__ = (cljs.core._clj__GT_js[(function (){var G__15875 = x__4226__auto__;
return goog.typeOf(G__15875);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3570__auto__ = x;
if(and__3570__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3570__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4226__auto__ = (((x == null))?null:x);
return (function (){var or__3582__auto__ = (cljs.core._key__GT_js[(function (){var G__15879 = x__4226__auto__;
return goog.typeOf(G__15879);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__15882 = k;
if(G__15882){
var bit__4263__auto__ = null;
if(cljs.core.truth_((function (){var or__3582__auto__ = bit__4263__auto__;
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return G__15882.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15882.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15882);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15882);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__15883 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__15883) : cljs.core.clj__GT_js.call(null,G__15883));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__15899 = x;
if(G__15899){
var bit__4263__auto__ = null;
if(cljs.core.truth_((function (){var or__3582__auto__ = bit__4263__auto__;
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return G__15899.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15899.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15899);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15899);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj15901 = {};
return obj15901;
})();
var seq__15902_15912 = cljs.core.seq(x);
var chunk__15903_15913 = null;
var count__15904_15914 = (0);
var i__15905_15915 = (0);
while(true){
if((i__15905_15915 < count__15904_15914)){
var vec__15906_15916 = chunk__15903_15913.cljs$core$IIndexed$_nth$arity$2(null,i__15905_15915);
var k_15917 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15906_15916,(0),null);
var v_15918 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15906_15916,(1),null);
(m[cljs.core.key__GT_js(k_15917)] = clj__GT_js(v_15918));

var G__15919 = seq__15902_15912;
var G__15920 = chunk__15903_15913;
var G__15921 = count__15904_15914;
var G__15922 = (i__15905_15915 + (1));
seq__15902_15912 = G__15919;
chunk__15903_15913 = G__15920;
count__15904_15914 = G__15921;
i__15905_15915 = G__15922;
continue;
} else {
var temp__4126__auto___15923 = cljs.core.seq(seq__15902_15912);
if(temp__4126__auto___15923){
var seq__15902_15924__$1 = temp__4126__auto___15923;
if(cljs.core.chunked_seq_QMARK_(seq__15902_15924__$1)){
var c__4369__auto___15925 = cljs.core.chunk_first(seq__15902_15924__$1);
var G__15926 = cljs.core.chunk_rest(seq__15902_15924__$1);
var G__15927 = c__4369__auto___15925;
var G__15928 = cljs.core.count(c__4369__auto___15925);
var G__15929 = (0);
seq__15902_15912 = G__15926;
chunk__15903_15913 = G__15927;
count__15904_15914 = G__15928;
i__15905_15915 = G__15929;
continue;
} else {
var vec__15907_15930 = cljs.core.first(seq__15902_15924__$1);
var k_15931 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15907_15930,(0),null);
var v_15932 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15907_15930,(1),null);
(m[cljs.core.key__GT_js(k_15931)] = clj__GT_js(v_15932));

var G__15933 = cljs.core.next(seq__15902_15924__$1);
var G__15934 = null;
var G__15935 = (0);
var G__15936 = (0);
seq__15902_15912 = G__15933;
chunk__15903_15913 = G__15934;
count__15904_15914 = G__15935;
i__15905_15915 = G__15936;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__15908_15937 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__15909_15938 = null;
var count__15910_15939 = (0);
var i__15911_15940 = (0);
while(true){
if((i__15911_15940 < count__15910_15939)){
var x_15941__$1 = chunk__15909_15938.cljs$core$IIndexed$_nth$arity$2(null,i__15911_15940);
arr.push(x_15941__$1);

var G__15942 = seq__15908_15937;
var G__15943 = chunk__15909_15938;
var G__15944 = count__15910_15939;
var G__15945 = (i__15911_15940 + (1));
seq__15908_15937 = G__15942;
chunk__15909_15938 = G__15943;
count__15910_15939 = G__15944;
i__15911_15940 = G__15945;
continue;
} else {
var temp__4126__auto___15946 = cljs.core.seq(seq__15908_15937);
if(temp__4126__auto___15946){
var seq__15908_15947__$1 = temp__4126__auto___15946;
if(cljs.core.chunked_seq_QMARK_(seq__15908_15947__$1)){
var c__4369__auto___15948 = cljs.core.chunk_first(seq__15908_15947__$1);
var G__15949 = cljs.core.chunk_rest(seq__15908_15947__$1);
var G__15950 = c__4369__auto___15948;
var G__15951 = cljs.core.count(c__4369__auto___15948);
var G__15952 = (0);
seq__15908_15937 = G__15949;
chunk__15909_15938 = G__15950;
count__15910_15939 = G__15951;
i__15911_15940 = G__15952;
continue;
} else {
var x_15953__$1 = cljs.core.first(seq__15908_15947__$1);
arr.push(x_15953__$1);

var G__15954 = cljs.core.next(seq__15908_15947__$1);
var G__15955 = null;
var G__15956 = (0);
var G__15957 = (0);
seq__15908_15937 = G__15954;
chunk__15909_15938 = G__15955;
count__15910_15939 = G__15956;
i__15911_15940 = G__15957;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj15959 = {};
return obj15959;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3570__auto__ = x;
if(and__3570__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3570__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4226__auto__ = (((x == null))?null:x);
return (function (){var or__3582__auto__ = (cljs.core._js__GT_clj[(function (){var G__15963 = x__4226__auto__;
return goog.typeOf(G__15963);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$16,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__16020__delegate = function (x,opts){
var map__15993 = opts;
var map__15993__$1 = ((cljs.core.seq_QMARK_(map__15993))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15993):map__15993);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15993__$1,cljs.core.constant$keyword$16);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__15993,map__15993__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__16009 = x__$1;
if(G__16009){
var bit__4263__auto__ = null;
if(cljs.core.truth_((function (){var or__3582__auto__ = bit__4263__auto__;
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return G__16009.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__16009.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16009);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16009);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4338__auto__ = ((function (map__15993,map__15993__$1,keywordize_keys,keyfn){
return (function iter__16010(s__16011){
return (new cljs.core.LazySeq(null,((function (map__15993,map__15993__$1,keywordize_keys,keyfn){
return (function (){
var s__16011__$1 = s__16011;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__16011__$1);
if(temp__4126__auto__){
var s__16011__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__16011__$2)){
var c__4336__auto__ = cljs.core.chunk_first(s__16011__$2);
var size__4337__auto__ = cljs.core.count(c__4336__auto__);
var b__16013 = cljs.core.chunk_buffer(size__4337__auto__);
if((function (){var i__16012 = (0);
while(true){
if((i__16012 < size__4337__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4336__auto__,i__16012);
cljs.core.chunk_append(b__16013,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16018 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16018) : keyfn.call(null,G__16018));
})(),thisfn((x__$1[k]))], null));

var G__16021 = (i__16012 + (1));
i__16012 = G__16021;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__16013),iter__16010(cljs.core.chunk_rest(s__16011__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__16013),null);
}
} else {
var k = cljs.core.first(s__16011__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16019 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16019) : keyfn.call(null,G__16019));
})(),thisfn((x__$1[k]))], null),iter__16010(cljs.core.rest(s__16011__$2)));
}
} else {
return null;
}
break;
}
});})(map__15993,map__15993__$1,keywordize_keys,keyfn))
,null,null));
});})(map__15993,map__15993__$1,keywordize_keys,keyfn))
;
return iter__4338__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__15993,map__15993__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__16020 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__16022__i = 0, G__16022__a = new Array(arguments.length -  1);
while (G__16022__i < G__16022__a.length) {G__16022__a[G__16022__i] = arguments[G__16022__i + 1]; ++G__16022__i;}
  opts = new cljs.core.IndexedSeq(G__16022__a,0);
} 
return G__16020__delegate.call(this,x,opts);};
G__16020.cljs$lang$maxFixedArity = 1;
G__16020.cljs$lang$applyTo = (function (arglist__16023){
var x = cljs.core.first(arglist__16023);
var opts = cljs.core.rest(arglist__16023);
return G__16020__delegate(x,opts);
});
G__16020.cljs$core$IFn$_invoke$arity$variadic = G__16020__delegate;
return G__16020;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__16024 = null;
if (arguments.length > 1) {
var G__16025__i = 0, G__16025__a = new Array(arguments.length -  1);
while (G__16025__i < G__16025__a.length) {G__16025__a[G__16025__i] = arguments[G__16025__i + 1]; ++G__16025__i;}
G__16024 = new cljs.core.IndexedSeq(G__16025__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16024);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__16028 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16028) : cljs.core.atom.call(null,G__16028));
})();
return ((function (mem){
return (function() { 
var G__16030__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__16029 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16029) : cljs.core.deref.call(null,G__16029));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__16030 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16031__i = 0, G__16031__a = new Array(arguments.length -  0);
while (G__16031__i < G__16031__a.length) {G__16031__a[G__16031__i] = arguments[G__16031__i + 0]; ++G__16031__i;}
  args = new cljs.core.IndexedSeq(G__16031__a,0);
} 
return G__16030__delegate.call(this,args);};
G__16030.cljs$lang$maxFixedArity = 0;
G__16030.cljs$lang$applyTo = (function (arglist__16032){
var args = cljs.core.seq(arglist__16032);
return G__16030__delegate(args);
});
G__16030.cljs$core$IFn$_invoke$arity$variadic = G__16030__delegate;
return G__16030;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__16034 = ret;
f = G__16034;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__16035__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__16035 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16036__i = 0, G__16036__a = new Array(arguments.length -  1);
while (G__16036__i < G__16036__a.length) {G__16036__a[G__16036__i] = arguments[G__16036__i + 1]; ++G__16036__i;}
  args = new cljs.core.IndexedSeq(G__16036__a,0);
} 
return G__16035__delegate.call(this,f,args);};
G__16035.cljs$lang$maxFixedArity = 1;
G__16035.cljs$lang$applyTo = (function (arglist__16037){
var f = cljs.core.first(arglist__16037);
var args = cljs.core.rest(arglist__16037);
return G__16035__delegate(f,args);
});
G__16035.cljs$core$IFn$_invoke$arity$variadic = G__16035__delegate;
return G__16035;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__16038 = null;
if (arguments.length > 1) {
var G__16039__i = 0, G__16039__a = new Array(arguments.length -  1);
while (G__16039__i < G__16039__a.length) {G__16039__a[G__16039__i] = arguments[G__16039__i + 1]; ++G__16039__i;}
G__16038 = new cljs.core.IndexedSeq(G__16039__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16038);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__16042 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16042) : Math.floor.call(null,G__16042));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__16044 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16044) : f.call(null,G__16044));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$18,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$19,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__16046 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16046) : cljs.core.atom.call(null,G__16046));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16047__i = 0, G__16047__a = new Array(arguments.length -  1);
while (G__16047__i < G__16047__a.length) {G__16047__a[G__16047__i] = arguments[G__16047__i + 1]; ++G__16047__i;}
  args = new cljs.core.IndexedSeq(G__16047__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__16048){
var f = cljs.core.first(arglist__16048);
var args = cljs.core.rest(arglist__16048);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16113 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16113) : cljs.core.deref.call(null,G__16113));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3582__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
var and__3570__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3570__auto__){
var and__3570__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3570__auto____$1){
var and__3570__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3570__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__16138 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__16136 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__16136) : child.call(null,G__16136));
})(),(function (){var G__16137 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16137) : parent.call(null,G__16137));
})());
var G__16139 = (i + (1));
ret = G__16138;
i = G__16139;
continue;
}
break;
}
} else {
return and__3570__auto____$2;
}
} else {
return and__3570__auto____$1;
}
} else {
return and__3570__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__16143 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16143) : cljs.core.deref.call(null,G__16143));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__16147 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16147) : cljs.core.deref.call(null,G__16147));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__16151 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16151) : cljs.core.deref.call(null,G__16151));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){

var tp = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__16160 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16160) : targets.call(null,G__16160));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__16161 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16161) : sources.call(null,G__16161));
})()));
});})(tp,td,ta))
;
var or__3582__auto__ = ((cljs.core.contains_QMARK_((function (){var G__16165 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16165) : tp.call(null,G__16165));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__16166 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16166) : ta.call(null,G__16166));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__16167 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16167) : ta.call(null,G__16167));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$19,tf(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$18,tf(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__16174 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16174) : parentMap.call(null,G__16174));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__16175 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16175) : parentMap.call(null,G__16175));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__16168_SHARP_){
return cljs.core.cons(cljs.core.first(p1__16168_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__16168_SHARP_),cljs.core.second(p1__16168_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__16176 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16176) : parentMap.call(null,G__16176));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__16169_SHARP_,p2__16170_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__16169_SHARP_,p2__16170_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__16179 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16179) : cljs.core.deref.call(null,G__16179));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__16180 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16180) : cljs.core.deref.call(null,G__16180));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__16196 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16196) : cljs.core.deref.call(null,G__16196));
})().call(null,x);
var or__3582__auto__ = (cljs.core.truth_((function (){var and__3570__auto__ = xprefs;
if(cljs.core.truth_(and__3570__auto__)){
var G__16198 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16198) : xprefs.call(null,G__16198));
} else {
return and__3570__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__16199 = cljs.core.rest(ps);
ps = G__16199;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3582__auto____$1)){
return or__3582__auto____$1;
} else {
var or__3582__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__16200 = cljs.core.rest(ps);
ps = G__16200;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3582__auto____$2)){
return or__3582__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3582__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3582__auto__)){
return or__3582__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__16214){
var vec__16215 = p__16214;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16215,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16215,(1),null);
var e = vec__16215;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16216 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16216) : cljs.core.deref.call(null,G__16216));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3582__auto__ = (be == null);
if(or__3582__auto__){
return or__3582__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__16217 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16217) : cljs.core.deref.call(null,G__16217));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16218 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16218) : cljs.core.deref.call(null,G__16218));
})(),(function (){var G__16219 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16219) : cljs.core.deref.call(null,G__16219));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj16221 = {};
return obj16221;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3570__auto__ = mf;
if(and__3570__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3570__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4226__auto__ = (((mf == null))?null:mf);
return (function (){var or__3582__auto__ = (cljs.core._reset[(function (){var G__16225 = x__4226__auto__;
return goog.typeOf(G__16225);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._reset["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3570__auto__ = mf;
if(and__3570__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3570__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4226__auto__ = (((mf == null))?null:mf);
return (function (){var or__3582__auto__ = (cljs.core._add_method[(function (){var G__16229 = x__4226__auto__;
return goog.typeOf(G__16229);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._add_method["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3570__auto__ = mf;
if(and__3570__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3570__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4226__auto__ = (((mf == null))?null:mf);
return (function (){var or__3582__auto__ = (cljs.core._remove_method[(function (){var G__16233 = x__4226__auto__;
return goog.typeOf(G__16233);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3570__auto__ = mf;
if(and__3570__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3570__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4226__auto__ = (((mf == null))?null:mf);
return (function (){var or__3582__auto__ = (cljs.core._prefer_method[(function (){var G__16237 = x__4226__auto__;
return goog.typeOf(G__16237);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3570__auto__ = mf;
if(and__3570__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3570__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4226__auto__ = (((mf == null))?null:mf);
return (function (){var or__3582__auto__ = (cljs.core._get_method[(function (){var G__16241 = x__4226__auto__;
return goog.typeOf(G__16241);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._get_method["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3570__auto__ = mf;
if(and__3570__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3570__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4226__auto__ = (((mf == null))?null:mf);
return (function (){var or__3582__auto__ = (cljs.core._methods[(function (){var G__16245 = x__4226__auto__;
return goog.typeOf(G__16245);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._methods["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3570__auto__ = mf;
if(and__3570__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3570__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4226__auto__ = (((mf == null))?null:mf);
return (function (){var or__3582__auto__ = (cljs.core._prefers[(function (){var G__16249 = x__4226__auto__;
return goog.typeOf(G__16249);
})()]);
if(or__3582__auto__){
return or__3582__auto__;
} else {
var or__3582__auto____$1 = (cljs.core._prefers["_"]);
if(or__3582__auto____$1){
return or__3582__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16251 = this$__$1;
return goog.getUid(G__16251);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16252 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16252) : cljs.core.deref.call(null,G__16252));
})(),(function (){var G__16253 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16253) : cljs.core.deref.call(null,G__16253));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__16254 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16254) : cljs.core.deref.call(null,G__16254));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__16255 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16255) : cljs.core.deref.call(null,G__16255));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16256 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16256) : cljs.core.deref.call(null,G__16256));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16257 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16257) : cljs.core.deref.call(null,G__16257));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__17098 = null;
var G__17098__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__17098__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16258 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16258) : self__.dispatch_fn.call(null,G__16258));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16259 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16259) : target_fn.call(null,G__16259));
});
var G__17098__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16260 = a;
var G__16261 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16260,G__16261) : self__.dispatch_fn.call(null,G__16260,G__16261));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16262 = a;
var G__16263 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16262,G__16263) : target_fn.call(null,G__16262,G__16263));
});
var G__17098__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16264 = a;
var G__16265 = b;
var G__16266 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16264,G__16265,G__16266) : self__.dispatch_fn.call(null,G__16264,G__16265,G__16266));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16267 = a;
var G__16268 = b;
var G__16269 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16267,G__16268,G__16269) : target_fn.call(null,G__16267,G__16268,G__16269));
});
var G__17098__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16270 = a;
var G__16271 = b;
var G__16272 = c;
var G__16273 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16270,G__16271,G__16272,G__16273) : self__.dispatch_fn.call(null,G__16270,G__16271,G__16272,G__16273));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16274 = a;
var G__16275 = b;
var G__16276 = c;
var G__16277 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16274,G__16275,G__16276,G__16277) : target_fn.call(null,G__16274,G__16275,G__16276,G__16277));
});
var G__17098__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16278 = a;
var G__16279 = b;
var G__16280 = c;
var G__16281 = d;
var G__16282 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16278,G__16279,G__16280,G__16281,G__16282) : self__.dispatch_fn.call(null,G__16278,G__16279,G__16280,G__16281,G__16282));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16283 = a;
var G__16284 = b;
var G__16285 = c;
var G__16286 = d;
var G__16287 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16283,G__16284,G__16285,G__16286,G__16287) : target_fn.call(null,G__16283,G__16284,G__16285,G__16286,G__16287));
});
var G__17098__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16288 = a;
var G__16289 = b;
var G__16290 = c;
var G__16291 = d;
var G__16292 = e;
var G__16293 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16288,G__16289,G__16290,G__16291,G__16292,G__16293) : self__.dispatch_fn.call(null,G__16288,G__16289,G__16290,G__16291,G__16292,G__16293));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16294 = a;
var G__16295 = b;
var G__16296 = c;
var G__16297 = d;
var G__16298 = e;
var G__16299 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16294,G__16295,G__16296,G__16297,G__16298,G__16299) : target_fn.call(null,G__16294,G__16295,G__16296,G__16297,G__16298,G__16299));
});
var G__17098__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16300 = a;
var G__16301 = b;
var G__16302 = c;
var G__16303 = d;
var G__16304 = e;
var G__16305 = f;
var G__16306 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16300,G__16301,G__16302,G__16303,G__16304,G__16305,G__16306) : self__.dispatch_fn.call(null,G__16300,G__16301,G__16302,G__16303,G__16304,G__16305,G__16306));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16307 = a;
var G__16308 = b;
var G__16309 = c;
var G__16310 = d;
var G__16311 = e;
var G__16312 = f;
var G__16313 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16307,G__16308,G__16309,G__16310,G__16311,G__16312,G__16313) : target_fn.call(null,G__16307,G__16308,G__16309,G__16310,G__16311,G__16312,G__16313));
});
var G__17098__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16314 = a;
var G__16315 = b;
var G__16316 = c;
var G__16317 = d;
var G__16318 = e;
var G__16319 = f;
var G__16320 = g;
var G__16321 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16314,G__16315,G__16316,G__16317,G__16318,G__16319,G__16320,G__16321) : self__.dispatch_fn.call(null,G__16314,G__16315,G__16316,G__16317,G__16318,G__16319,G__16320,G__16321));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16322 = a;
var G__16323 = b;
var G__16324 = c;
var G__16325 = d;
var G__16326 = e;
var G__16327 = f;
var G__16328 = g;
var G__16329 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16322,G__16323,G__16324,G__16325,G__16326,G__16327,G__16328,G__16329) : target_fn.call(null,G__16322,G__16323,G__16324,G__16325,G__16326,G__16327,G__16328,G__16329));
});
var G__17098__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16330 = a;
var G__16331 = b;
var G__16332 = c;
var G__16333 = d;
var G__16334 = e;
var G__16335 = f;
var G__16336 = g;
var G__16337 = h;
var G__16338 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16330,G__16331,G__16332,G__16333,G__16334,G__16335,G__16336,G__16337,G__16338) : self__.dispatch_fn.call(null,G__16330,G__16331,G__16332,G__16333,G__16334,G__16335,G__16336,G__16337,G__16338));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16339 = a;
var G__16340 = b;
var G__16341 = c;
var G__16342 = d;
var G__16343 = e;
var G__16344 = f;
var G__16345 = g;
var G__16346 = h;
var G__16347 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16339,G__16340,G__16341,G__16342,G__16343,G__16344,G__16345,G__16346,G__16347) : target_fn.call(null,G__16339,G__16340,G__16341,G__16342,G__16343,G__16344,G__16345,G__16346,G__16347));
});
var G__17098__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16348 = a;
var G__16349 = b;
var G__16350 = c;
var G__16351 = d;
var G__16352 = e;
var G__16353 = f;
var G__16354 = g;
var G__16355 = h;
var G__16356 = i;
var G__16357 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16348,G__16349,G__16350,G__16351,G__16352,G__16353,G__16354,G__16355,G__16356,G__16357) : self__.dispatch_fn.call(null,G__16348,G__16349,G__16350,G__16351,G__16352,G__16353,G__16354,G__16355,G__16356,G__16357));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16358 = a;
var G__16359 = b;
var G__16360 = c;
var G__16361 = d;
var G__16362 = e;
var G__16363 = f;
var G__16364 = g;
var G__16365 = h;
var G__16366 = i;
var G__16367 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16358,G__16359,G__16360,G__16361,G__16362,G__16363,G__16364,G__16365,G__16366,G__16367) : target_fn.call(null,G__16358,G__16359,G__16360,G__16361,G__16362,G__16363,G__16364,G__16365,G__16366,G__16367));
});
var G__17098__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16368 = a;
var G__16369 = b;
var G__16370 = c;
var G__16371 = d;
var G__16372 = e;
var G__16373 = f;
var G__16374 = g;
var G__16375 = h;
var G__16376 = i;
var G__16377 = j;
var G__16378 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16368,G__16369,G__16370,G__16371,G__16372,G__16373,G__16374,G__16375,G__16376,G__16377,G__16378) : self__.dispatch_fn.call(null,G__16368,G__16369,G__16370,G__16371,G__16372,G__16373,G__16374,G__16375,G__16376,G__16377,G__16378));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16379 = a;
var G__16380 = b;
var G__16381 = c;
var G__16382 = d;
var G__16383 = e;
var G__16384 = f;
var G__16385 = g;
var G__16386 = h;
var G__16387 = i;
var G__16388 = j;
var G__16389 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16379,G__16380,G__16381,G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388,G__16389) : target_fn.call(null,G__16379,G__16380,G__16381,G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388,G__16389));
});
var G__17098__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16390 = a;
var G__16391 = b;
var G__16392 = c;
var G__16393 = d;
var G__16394 = e;
var G__16395 = f;
var G__16396 = g;
var G__16397 = h;
var G__16398 = i;
var G__16399 = j;
var G__16400 = k;
var G__16401 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16390,G__16391,G__16392,G__16393,G__16394,G__16395,G__16396,G__16397,G__16398,G__16399,G__16400,G__16401) : self__.dispatch_fn.call(null,G__16390,G__16391,G__16392,G__16393,G__16394,G__16395,G__16396,G__16397,G__16398,G__16399,G__16400,G__16401));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16402 = a;
var G__16403 = b;
var G__16404 = c;
var G__16405 = d;
var G__16406 = e;
var G__16407 = f;
var G__16408 = g;
var G__16409 = h;
var G__16410 = i;
var G__16411 = j;
var G__16412 = k;
var G__16413 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16402,G__16403,G__16404,G__16405,G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413) : target_fn.call(null,G__16402,G__16403,G__16404,G__16405,G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413));
});
var G__17098__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16414 = a;
var G__16415 = b;
var G__16416 = c;
var G__16417 = d;
var G__16418 = e;
var G__16419 = f;
var G__16420 = g;
var G__16421 = h;
var G__16422 = i;
var G__16423 = j;
var G__16424 = k;
var G__16425 = l;
var G__16426 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16414,G__16415,G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422,G__16423,G__16424,G__16425,G__16426) : self__.dispatch_fn.call(null,G__16414,G__16415,G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422,G__16423,G__16424,G__16425,G__16426));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16427 = a;
var G__16428 = b;
var G__16429 = c;
var G__16430 = d;
var G__16431 = e;
var G__16432 = f;
var G__16433 = g;
var G__16434 = h;
var G__16435 = i;
var G__16436 = j;
var G__16437 = k;
var G__16438 = l;
var G__16439 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16427,G__16428,G__16429,G__16430,G__16431,G__16432,G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439) : target_fn.call(null,G__16427,G__16428,G__16429,G__16430,G__16431,G__16432,G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439));
});
var G__17098__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16440 = a;
var G__16441 = b;
var G__16442 = c;
var G__16443 = d;
var G__16444 = e;
var G__16445 = f;
var G__16446 = g;
var G__16447 = h;
var G__16448 = i;
var G__16449 = j;
var G__16450 = k;
var G__16451 = l;
var G__16452 = m;
var G__16453 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16440,G__16441,G__16442,G__16443,G__16444,G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451,G__16452,G__16453) : self__.dispatch_fn.call(null,G__16440,G__16441,G__16442,G__16443,G__16444,G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451,G__16452,G__16453));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16454 = a;
var G__16455 = b;
var G__16456 = c;
var G__16457 = d;
var G__16458 = e;
var G__16459 = f;
var G__16460 = g;
var G__16461 = h;
var G__16462 = i;
var G__16463 = j;
var G__16464 = k;
var G__16465 = l;
var G__16466 = m;
var G__16467 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462,G__16463,G__16464,G__16465,G__16466,G__16467) : target_fn.call(null,G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462,G__16463,G__16464,G__16465,G__16466,G__16467));
});
var G__17098__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16468 = a;
var G__16469 = b;
var G__16470 = c;
var G__16471 = d;
var G__16472 = e;
var G__16473 = f;
var G__16474 = g;
var G__16475 = h;
var G__16476 = i;
var G__16477 = j;
var G__16478 = k;
var G__16479 = l;
var G__16480 = m;
var G__16481 = n;
var G__16482 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16468,G__16469,G__16470,G__16471,G__16472,G__16473,G__16474,G__16475,G__16476,G__16477,G__16478,G__16479,G__16480,G__16481,G__16482) : self__.dispatch_fn.call(null,G__16468,G__16469,G__16470,G__16471,G__16472,G__16473,G__16474,G__16475,G__16476,G__16477,G__16478,G__16479,G__16480,G__16481,G__16482));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16483 = a;
var G__16484 = b;
var G__16485 = c;
var G__16486 = d;
var G__16487 = e;
var G__16488 = f;
var G__16489 = g;
var G__16490 = h;
var G__16491 = i;
var G__16492 = j;
var G__16493 = k;
var G__16494 = l;
var G__16495 = m;
var G__16496 = n;
var G__16497 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16483,G__16484,G__16485,G__16486,G__16487,G__16488,G__16489,G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496,G__16497) : target_fn.call(null,G__16483,G__16484,G__16485,G__16486,G__16487,G__16488,G__16489,G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496,G__16497));
});
var G__17098__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16498 = a;
var G__16499 = b;
var G__16500 = c;
var G__16501 = d;
var G__16502 = e;
var G__16503 = f;
var G__16504 = g;
var G__16505 = h;
var G__16506 = i;
var G__16507 = j;
var G__16508 = k;
var G__16509 = l;
var G__16510 = m;
var G__16511 = n;
var G__16512 = o;
var G__16513 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16498,G__16499,G__16500,G__16501,G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509,G__16510,G__16511,G__16512,G__16513) : self__.dispatch_fn.call(null,G__16498,G__16499,G__16500,G__16501,G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509,G__16510,G__16511,G__16512,G__16513));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16514 = a;
var G__16515 = b;
var G__16516 = c;
var G__16517 = d;
var G__16518 = e;
var G__16519 = f;
var G__16520 = g;
var G__16521 = h;
var G__16522 = i;
var G__16523 = j;
var G__16524 = k;
var G__16525 = l;
var G__16526 = m;
var G__16527 = n;
var G__16528 = o;
var G__16529 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16514,G__16515,G__16516,G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523,G__16524,G__16525,G__16526,G__16527,G__16528,G__16529) : target_fn.call(null,G__16514,G__16515,G__16516,G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523,G__16524,G__16525,G__16526,G__16527,G__16528,G__16529));
});
var G__17098__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16530 = a;
var G__16531 = b;
var G__16532 = c;
var G__16533 = d;
var G__16534 = e;
var G__16535 = f;
var G__16536 = g;
var G__16537 = h;
var G__16538 = i;
var G__16539 = j;
var G__16540 = k;
var G__16541 = l;
var G__16542 = m;
var G__16543 = n;
var G__16544 = o;
var G__16545 = p;
var G__16546 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16530,G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537,G__16538,G__16539,G__16540,G__16541,G__16542,G__16543,G__16544,G__16545,G__16546) : self__.dispatch_fn.call(null,G__16530,G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537,G__16538,G__16539,G__16540,G__16541,G__16542,G__16543,G__16544,G__16545,G__16546));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16547 = a;
var G__16548 = b;
var G__16549 = c;
var G__16550 = d;
var G__16551 = e;
var G__16552 = f;
var G__16553 = g;
var G__16554 = h;
var G__16555 = i;
var G__16556 = j;
var G__16557 = k;
var G__16558 = l;
var G__16559 = m;
var G__16560 = n;
var G__16561 = o;
var G__16562 = p;
var G__16563 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16547,G__16548,G__16549,G__16550,G__16551,G__16552,G__16553,G__16554,G__16555,G__16556,G__16557,G__16558,G__16559,G__16560,G__16561,G__16562,G__16563) : target_fn.call(null,G__16547,G__16548,G__16549,G__16550,G__16551,G__16552,G__16553,G__16554,G__16555,G__16556,G__16557,G__16558,G__16559,G__16560,G__16561,G__16562,G__16563));
});
var G__17098__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16564 = a;
var G__16565 = b;
var G__16566 = c;
var G__16567 = d;
var G__16568 = e;
var G__16569 = f;
var G__16570 = g;
var G__16571 = h;
var G__16572 = i;
var G__16573 = j;
var G__16574 = k;
var G__16575 = l;
var G__16576 = m;
var G__16577 = n;
var G__16578 = o;
var G__16579 = p;
var G__16580 = q;
var G__16581 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16564,G__16565,G__16566,G__16567,G__16568,G__16569,G__16570,G__16571,G__16572,G__16573,G__16574,G__16575,G__16576,G__16577,G__16578,G__16579,G__16580,G__16581) : self__.dispatch_fn.call(null,G__16564,G__16565,G__16566,G__16567,G__16568,G__16569,G__16570,G__16571,G__16572,G__16573,G__16574,G__16575,G__16576,G__16577,G__16578,G__16579,G__16580,G__16581));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16582 = a;
var G__16583 = b;
var G__16584 = c;
var G__16585 = d;
var G__16586 = e;
var G__16587 = f;
var G__16588 = g;
var G__16589 = h;
var G__16590 = i;
var G__16591 = j;
var G__16592 = k;
var G__16593 = l;
var G__16594 = m;
var G__16595 = n;
var G__16596 = o;
var G__16597 = p;
var G__16598 = q;
var G__16599 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16582,G__16583,G__16584,G__16585,G__16586,G__16587,G__16588,G__16589,G__16590,G__16591,G__16592,G__16593,G__16594,G__16595,G__16596,G__16597,G__16598,G__16599) : target_fn.call(null,G__16582,G__16583,G__16584,G__16585,G__16586,G__16587,G__16588,G__16589,G__16590,G__16591,G__16592,G__16593,G__16594,G__16595,G__16596,G__16597,G__16598,G__16599));
});
var G__17098__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16600 = a;
var G__16601 = b;
var G__16602 = c;
var G__16603 = d;
var G__16604 = e;
var G__16605 = f;
var G__16606 = g;
var G__16607 = h;
var G__16608 = i;
var G__16609 = j;
var G__16610 = k;
var G__16611 = l;
var G__16612 = m;
var G__16613 = n;
var G__16614 = o;
var G__16615 = p;
var G__16616 = q;
var G__16617 = r;
var G__16618 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16600,G__16601,G__16602,G__16603,G__16604,G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612,G__16613,G__16614,G__16615,G__16616,G__16617,G__16618) : self__.dispatch_fn.call(null,G__16600,G__16601,G__16602,G__16603,G__16604,G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612,G__16613,G__16614,G__16615,G__16616,G__16617,G__16618));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16619 = a;
var G__16620 = b;
var G__16621 = c;
var G__16622 = d;
var G__16623 = e;
var G__16624 = f;
var G__16625 = g;
var G__16626 = h;
var G__16627 = i;
var G__16628 = j;
var G__16629 = k;
var G__16630 = l;
var G__16631 = m;
var G__16632 = n;
var G__16633 = o;
var G__16634 = p;
var G__16635 = q;
var G__16636 = r;
var G__16637 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16619,G__16620,G__16621,G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630,G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637) : target_fn.call(null,G__16619,G__16620,G__16621,G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630,G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637));
});
var G__17098__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16638 = a;
var G__16639 = b;
var G__16640 = c;
var G__16641 = d;
var G__16642 = e;
var G__16643 = f;
var G__16644 = g;
var G__16645 = h;
var G__16646 = i;
var G__16647 = j;
var G__16648 = k;
var G__16649 = l;
var G__16650 = m;
var G__16651 = n;
var G__16652 = o;
var G__16653 = p;
var G__16654 = q;
var G__16655 = r;
var G__16656 = s;
var G__16657 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16638,G__16639,G__16640,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650,G__16651,G__16652,G__16653,G__16654,G__16655,G__16656,G__16657) : self__.dispatch_fn.call(null,G__16638,G__16639,G__16640,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650,G__16651,G__16652,G__16653,G__16654,G__16655,G__16656,G__16657));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16658 = a;
var G__16659 = b;
var G__16660 = c;
var G__16661 = d;
var G__16662 = e;
var G__16663 = f;
var G__16664 = g;
var G__16665 = h;
var G__16666 = i;
var G__16667 = j;
var G__16668 = k;
var G__16669 = l;
var G__16670 = m;
var G__16671 = n;
var G__16672 = o;
var G__16673 = p;
var G__16674 = q;
var G__16675 = r;
var G__16676 = s;
var G__16677 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666,G__16667,G__16668,G__16669,G__16670,G__16671,G__16672,G__16673,G__16674,G__16675,G__16676,G__16677) : target_fn.call(null,G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666,G__16667,G__16668,G__16669,G__16670,G__16671,G__16672,G__16673,G__16674,G__16675,G__16676,G__16677));
});
var G__17098__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__17098 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__17098__1.call(this,self__);
case 2:
return G__17098__2.call(this,self__,a);
case 3:
return G__17098__3.call(this,self__,a,b);
case 4:
return G__17098__4.call(this,self__,a,b,c);
case 5:
return G__17098__5.call(this,self__,a,b,c,d);
case 6:
return G__17098__6.call(this,self__,a,b,c,d,e);
case 7:
return G__17098__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__17098__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__17098__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__17098__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__17098__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__17098__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__17098__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__17098__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__17098__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__17098__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__17098__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__17098__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__17098__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__17098__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__17098__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__17098__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17098.cljs$core$IFn$_invoke$arity$1 = G__17098__1;
G__17098.cljs$core$IFn$_invoke$arity$2 = G__17098__2;
G__17098.cljs$core$IFn$_invoke$arity$3 = G__17098__3;
G__17098.cljs$core$IFn$_invoke$arity$4 = G__17098__4;
G__17098.cljs$core$IFn$_invoke$arity$5 = G__17098__5;
G__17098.cljs$core$IFn$_invoke$arity$6 = G__17098__6;
G__17098.cljs$core$IFn$_invoke$arity$7 = G__17098__7;
G__17098.cljs$core$IFn$_invoke$arity$8 = G__17098__8;
G__17098.cljs$core$IFn$_invoke$arity$9 = G__17098__9;
G__17098.cljs$core$IFn$_invoke$arity$10 = G__17098__10;
G__17098.cljs$core$IFn$_invoke$arity$11 = G__17098__11;
G__17098.cljs$core$IFn$_invoke$arity$12 = G__17098__12;
G__17098.cljs$core$IFn$_invoke$arity$13 = G__17098__13;
G__17098.cljs$core$IFn$_invoke$arity$14 = G__17098__14;
G__17098.cljs$core$IFn$_invoke$arity$15 = G__17098__15;
G__17098.cljs$core$IFn$_invoke$arity$16 = G__17098__16;
G__17098.cljs$core$IFn$_invoke$arity$17 = G__17098__17;
G__17098.cljs$core$IFn$_invoke$arity$18 = G__17098__18;
G__17098.cljs$core$IFn$_invoke$arity$19 = G__17098__19;
G__17098.cljs$core$IFn$_invoke$arity$20 = G__17098__20;
G__17098.cljs$core$IFn$_invoke$arity$21 = G__17098__21;
G__17098.cljs$core$IFn$_invoke$arity$22 = G__17098__22;
return G__17098;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args16250){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16250)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16678 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16678) : self__.dispatch_fn.call(null,G__16678));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16679 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16679) : target_fn.call(null,G__16679));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16680 = a;
var G__16681 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16680,G__16681) : self__.dispatch_fn.call(null,G__16680,G__16681));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16682 = a;
var G__16683 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16682,G__16683) : target_fn.call(null,G__16682,G__16683));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16684 = a;
var G__16685 = b;
var G__16686 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16684,G__16685,G__16686) : self__.dispatch_fn.call(null,G__16684,G__16685,G__16686));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16687 = a;
var G__16688 = b;
var G__16689 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16687,G__16688,G__16689) : target_fn.call(null,G__16687,G__16688,G__16689));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16690 = a;
var G__16691 = b;
var G__16692 = c;
var G__16693 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16690,G__16691,G__16692,G__16693) : self__.dispatch_fn.call(null,G__16690,G__16691,G__16692,G__16693));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16694 = a;
var G__16695 = b;
var G__16696 = c;
var G__16697 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16694,G__16695,G__16696,G__16697) : target_fn.call(null,G__16694,G__16695,G__16696,G__16697));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16698 = a;
var G__16699 = b;
var G__16700 = c;
var G__16701 = d;
var G__16702 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16698,G__16699,G__16700,G__16701,G__16702) : self__.dispatch_fn.call(null,G__16698,G__16699,G__16700,G__16701,G__16702));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16703 = a;
var G__16704 = b;
var G__16705 = c;
var G__16706 = d;
var G__16707 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16703,G__16704,G__16705,G__16706,G__16707) : target_fn.call(null,G__16703,G__16704,G__16705,G__16706,G__16707));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16708 = a;
var G__16709 = b;
var G__16710 = c;
var G__16711 = d;
var G__16712 = e;
var G__16713 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16708,G__16709,G__16710,G__16711,G__16712,G__16713) : self__.dispatch_fn.call(null,G__16708,G__16709,G__16710,G__16711,G__16712,G__16713));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16714 = a;
var G__16715 = b;
var G__16716 = c;
var G__16717 = d;
var G__16718 = e;
var G__16719 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16714,G__16715,G__16716,G__16717,G__16718,G__16719) : target_fn.call(null,G__16714,G__16715,G__16716,G__16717,G__16718,G__16719));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16720 = a;
var G__16721 = b;
var G__16722 = c;
var G__16723 = d;
var G__16724 = e;
var G__16725 = f;
var G__16726 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16720,G__16721,G__16722,G__16723,G__16724,G__16725,G__16726) : self__.dispatch_fn.call(null,G__16720,G__16721,G__16722,G__16723,G__16724,G__16725,G__16726));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16727 = a;
var G__16728 = b;
var G__16729 = c;
var G__16730 = d;
var G__16731 = e;
var G__16732 = f;
var G__16733 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16727,G__16728,G__16729,G__16730,G__16731,G__16732,G__16733) : target_fn.call(null,G__16727,G__16728,G__16729,G__16730,G__16731,G__16732,G__16733));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16734 = a;
var G__16735 = b;
var G__16736 = c;
var G__16737 = d;
var G__16738 = e;
var G__16739 = f;
var G__16740 = g;
var G__16741 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16734,G__16735,G__16736,G__16737,G__16738,G__16739,G__16740,G__16741) : self__.dispatch_fn.call(null,G__16734,G__16735,G__16736,G__16737,G__16738,G__16739,G__16740,G__16741));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16742 = a;
var G__16743 = b;
var G__16744 = c;
var G__16745 = d;
var G__16746 = e;
var G__16747 = f;
var G__16748 = g;
var G__16749 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16742,G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749) : target_fn.call(null,G__16742,G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16750 = a;
var G__16751 = b;
var G__16752 = c;
var G__16753 = d;
var G__16754 = e;
var G__16755 = f;
var G__16756 = g;
var G__16757 = h;
var G__16758 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16750,G__16751,G__16752,G__16753,G__16754,G__16755,G__16756,G__16757,G__16758) : self__.dispatch_fn.call(null,G__16750,G__16751,G__16752,G__16753,G__16754,G__16755,G__16756,G__16757,G__16758));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16759 = a;
var G__16760 = b;
var G__16761 = c;
var G__16762 = d;
var G__16763 = e;
var G__16764 = f;
var G__16765 = g;
var G__16766 = h;
var G__16767 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16759,G__16760,G__16761,G__16762,G__16763,G__16764,G__16765,G__16766,G__16767) : target_fn.call(null,G__16759,G__16760,G__16761,G__16762,G__16763,G__16764,G__16765,G__16766,G__16767));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16768 = a;
var G__16769 = b;
var G__16770 = c;
var G__16771 = d;
var G__16772 = e;
var G__16773 = f;
var G__16774 = g;
var G__16775 = h;
var G__16776 = i;
var G__16777 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16768,G__16769,G__16770,G__16771,G__16772,G__16773,G__16774,G__16775,G__16776,G__16777) : self__.dispatch_fn.call(null,G__16768,G__16769,G__16770,G__16771,G__16772,G__16773,G__16774,G__16775,G__16776,G__16777));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16778 = a;
var G__16779 = b;
var G__16780 = c;
var G__16781 = d;
var G__16782 = e;
var G__16783 = f;
var G__16784 = g;
var G__16785 = h;
var G__16786 = i;
var G__16787 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16778,G__16779,G__16780,G__16781,G__16782,G__16783,G__16784,G__16785,G__16786,G__16787) : target_fn.call(null,G__16778,G__16779,G__16780,G__16781,G__16782,G__16783,G__16784,G__16785,G__16786,G__16787));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16788 = a;
var G__16789 = b;
var G__16790 = c;
var G__16791 = d;
var G__16792 = e;
var G__16793 = f;
var G__16794 = g;
var G__16795 = h;
var G__16796 = i;
var G__16797 = j;
var G__16798 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16788,G__16789,G__16790,G__16791,G__16792,G__16793,G__16794,G__16795,G__16796,G__16797,G__16798) : self__.dispatch_fn.call(null,G__16788,G__16789,G__16790,G__16791,G__16792,G__16793,G__16794,G__16795,G__16796,G__16797,G__16798));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16799 = a;
var G__16800 = b;
var G__16801 = c;
var G__16802 = d;
var G__16803 = e;
var G__16804 = f;
var G__16805 = g;
var G__16806 = h;
var G__16807 = i;
var G__16808 = j;
var G__16809 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16799,G__16800,G__16801,G__16802,G__16803,G__16804,G__16805,G__16806,G__16807,G__16808,G__16809) : target_fn.call(null,G__16799,G__16800,G__16801,G__16802,G__16803,G__16804,G__16805,G__16806,G__16807,G__16808,G__16809));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16810 = a;
var G__16811 = b;
var G__16812 = c;
var G__16813 = d;
var G__16814 = e;
var G__16815 = f;
var G__16816 = g;
var G__16817 = h;
var G__16818 = i;
var G__16819 = j;
var G__16820 = k;
var G__16821 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16810,G__16811,G__16812,G__16813,G__16814,G__16815,G__16816,G__16817,G__16818,G__16819,G__16820,G__16821) : self__.dispatch_fn.call(null,G__16810,G__16811,G__16812,G__16813,G__16814,G__16815,G__16816,G__16817,G__16818,G__16819,G__16820,G__16821));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16822 = a;
var G__16823 = b;
var G__16824 = c;
var G__16825 = d;
var G__16826 = e;
var G__16827 = f;
var G__16828 = g;
var G__16829 = h;
var G__16830 = i;
var G__16831 = j;
var G__16832 = k;
var G__16833 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16822,G__16823,G__16824,G__16825,G__16826,G__16827,G__16828,G__16829,G__16830,G__16831,G__16832,G__16833) : target_fn.call(null,G__16822,G__16823,G__16824,G__16825,G__16826,G__16827,G__16828,G__16829,G__16830,G__16831,G__16832,G__16833));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16834 = a;
var G__16835 = b;
var G__16836 = c;
var G__16837 = d;
var G__16838 = e;
var G__16839 = f;
var G__16840 = g;
var G__16841 = h;
var G__16842 = i;
var G__16843 = j;
var G__16844 = k;
var G__16845 = l;
var G__16846 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16834,G__16835,G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842,G__16843,G__16844,G__16845,G__16846) : self__.dispatch_fn.call(null,G__16834,G__16835,G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842,G__16843,G__16844,G__16845,G__16846));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16847 = a;
var G__16848 = b;
var G__16849 = c;
var G__16850 = d;
var G__16851 = e;
var G__16852 = f;
var G__16853 = g;
var G__16854 = h;
var G__16855 = i;
var G__16856 = j;
var G__16857 = k;
var G__16858 = l;
var G__16859 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16847,G__16848,G__16849,G__16850,G__16851,G__16852,G__16853,G__16854,G__16855,G__16856,G__16857,G__16858,G__16859) : target_fn.call(null,G__16847,G__16848,G__16849,G__16850,G__16851,G__16852,G__16853,G__16854,G__16855,G__16856,G__16857,G__16858,G__16859));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16860 = a;
var G__16861 = b;
var G__16862 = c;
var G__16863 = d;
var G__16864 = e;
var G__16865 = f;
var G__16866 = g;
var G__16867 = h;
var G__16868 = i;
var G__16869 = j;
var G__16870 = k;
var G__16871 = l;
var G__16872 = m;
var G__16873 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16860,G__16861,G__16862,G__16863,G__16864,G__16865,G__16866,G__16867,G__16868,G__16869,G__16870,G__16871,G__16872,G__16873) : self__.dispatch_fn.call(null,G__16860,G__16861,G__16862,G__16863,G__16864,G__16865,G__16866,G__16867,G__16868,G__16869,G__16870,G__16871,G__16872,G__16873));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16874 = a;
var G__16875 = b;
var G__16876 = c;
var G__16877 = d;
var G__16878 = e;
var G__16879 = f;
var G__16880 = g;
var G__16881 = h;
var G__16882 = i;
var G__16883 = j;
var G__16884 = k;
var G__16885 = l;
var G__16886 = m;
var G__16887 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16874,G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882,G__16883,G__16884,G__16885,G__16886,G__16887) : target_fn.call(null,G__16874,G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882,G__16883,G__16884,G__16885,G__16886,G__16887));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16888 = a;
var G__16889 = b;
var G__16890 = c;
var G__16891 = d;
var G__16892 = e;
var G__16893 = f;
var G__16894 = g;
var G__16895 = h;
var G__16896 = i;
var G__16897 = j;
var G__16898 = k;
var G__16899 = l;
var G__16900 = m;
var G__16901 = n;
var G__16902 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16888,G__16889,G__16890,G__16891,G__16892,G__16893,G__16894,G__16895,G__16896,G__16897,G__16898,G__16899,G__16900,G__16901,G__16902) : self__.dispatch_fn.call(null,G__16888,G__16889,G__16890,G__16891,G__16892,G__16893,G__16894,G__16895,G__16896,G__16897,G__16898,G__16899,G__16900,G__16901,G__16902));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16903 = a;
var G__16904 = b;
var G__16905 = c;
var G__16906 = d;
var G__16907 = e;
var G__16908 = f;
var G__16909 = g;
var G__16910 = h;
var G__16911 = i;
var G__16912 = j;
var G__16913 = k;
var G__16914 = l;
var G__16915 = m;
var G__16916 = n;
var G__16917 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16903,G__16904,G__16905,G__16906,G__16907,G__16908,G__16909,G__16910,G__16911,G__16912,G__16913,G__16914,G__16915,G__16916,G__16917) : target_fn.call(null,G__16903,G__16904,G__16905,G__16906,G__16907,G__16908,G__16909,G__16910,G__16911,G__16912,G__16913,G__16914,G__16915,G__16916,G__16917));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16918 = a;
var G__16919 = b;
var G__16920 = c;
var G__16921 = d;
var G__16922 = e;
var G__16923 = f;
var G__16924 = g;
var G__16925 = h;
var G__16926 = i;
var G__16927 = j;
var G__16928 = k;
var G__16929 = l;
var G__16930 = m;
var G__16931 = n;
var G__16932 = o;
var G__16933 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16918,G__16919,G__16920,G__16921,G__16922,G__16923,G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930,G__16931,G__16932,G__16933) : self__.dispatch_fn.call(null,G__16918,G__16919,G__16920,G__16921,G__16922,G__16923,G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930,G__16931,G__16932,G__16933));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16934 = a;
var G__16935 = b;
var G__16936 = c;
var G__16937 = d;
var G__16938 = e;
var G__16939 = f;
var G__16940 = g;
var G__16941 = h;
var G__16942 = i;
var G__16943 = j;
var G__16944 = k;
var G__16945 = l;
var G__16946 = m;
var G__16947 = n;
var G__16948 = o;
var G__16949 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16934,G__16935,G__16936,G__16937,G__16938,G__16939,G__16940,G__16941,G__16942,G__16943,G__16944,G__16945,G__16946,G__16947,G__16948,G__16949) : target_fn.call(null,G__16934,G__16935,G__16936,G__16937,G__16938,G__16939,G__16940,G__16941,G__16942,G__16943,G__16944,G__16945,G__16946,G__16947,G__16948,G__16949));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16950 = a;
var G__16951 = b;
var G__16952 = c;
var G__16953 = d;
var G__16954 = e;
var G__16955 = f;
var G__16956 = g;
var G__16957 = h;
var G__16958 = i;
var G__16959 = j;
var G__16960 = k;
var G__16961 = l;
var G__16962 = m;
var G__16963 = n;
var G__16964 = o;
var G__16965 = p;
var G__16966 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16950,G__16951,G__16952,G__16953,G__16954,G__16955,G__16956,G__16957,G__16958,G__16959,G__16960,G__16961,G__16962,G__16963,G__16964,G__16965,G__16966) : self__.dispatch_fn.call(null,G__16950,G__16951,G__16952,G__16953,G__16954,G__16955,G__16956,G__16957,G__16958,G__16959,G__16960,G__16961,G__16962,G__16963,G__16964,G__16965,G__16966));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16967 = a;
var G__16968 = b;
var G__16969 = c;
var G__16970 = d;
var G__16971 = e;
var G__16972 = f;
var G__16973 = g;
var G__16974 = h;
var G__16975 = i;
var G__16976 = j;
var G__16977 = k;
var G__16978 = l;
var G__16979 = m;
var G__16980 = n;
var G__16981 = o;
var G__16982 = p;
var G__16983 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16967,G__16968,G__16969,G__16970,G__16971,G__16972,G__16973,G__16974,G__16975,G__16976,G__16977,G__16978,G__16979,G__16980,G__16981,G__16982,G__16983) : target_fn.call(null,G__16967,G__16968,G__16969,G__16970,G__16971,G__16972,G__16973,G__16974,G__16975,G__16976,G__16977,G__16978,G__16979,G__16980,G__16981,G__16982,G__16983));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16984 = a;
var G__16985 = b;
var G__16986 = c;
var G__16987 = d;
var G__16988 = e;
var G__16989 = f;
var G__16990 = g;
var G__16991 = h;
var G__16992 = i;
var G__16993 = j;
var G__16994 = k;
var G__16995 = l;
var G__16996 = m;
var G__16997 = n;
var G__16998 = o;
var G__16999 = p;
var G__17000 = q;
var G__17001 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16984,G__16985,G__16986,G__16987,G__16988,G__16989,G__16990,G__16991,G__16992,G__16993,G__16994,G__16995,G__16996,G__16997,G__16998,G__16999,G__17000,G__17001) : self__.dispatch_fn.call(null,G__16984,G__16985,G__16986,G__16987,G__16988,G__16989,G__16990,G__16991,G__16992,G__16993,G__16994,G__16995,G__16996,G__16997,G__16998,G__16999,G__17000,G__17001));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17002 = a;
var G__17003 = b;
var G__17004 = c;
var G__17005 = d;
var G__17006 = e;
var G__17007 = f;
var G__17008 = g;
var G__17009 = h;
var G__17010 = i;
var G__17011 = j;
var G__17012 = k;
var G__17013 = l;
var G__17014 = m;
var G__17015 = n;
var G__17016 = o;
var G__17017 = p;
var G__17018 = q;
var G__17019 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17002,G__17003,G__17004,G__17005,G__17006,G__17007,G__17008,G__17009,G__17010,G__17011,G__17012,G__17013,G__17014,G__17015,G__17016,G__17017,G__17018,G__17019) : target_fn.call(null,G__17002,G__17003,G__17004,G__17005,G__17006,G__17007,G__17008,G__17009,G__17010,G__17011,G__17012,G__17013,G__17014,G__17015,G__17016,G__17017,G__17018,G__17019));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17020 = a;
var G__17021 = b;
var G__17022 = c;
var G__17023 = d;
var G__17024 = e;
var G__17025 = f;
var G__17026 = g;
var G__17027 = h;
var G__17028 = i;
var G__17029 = j;
var G__17030 = k;
var G__17031 = l;
var G__17032 = m;
var G__17033 = n;
var G__17034 = o;
var G__17035 = p;
var G__17036 = q;
var G__17037 = r;
var G__17038 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17020,G__17021,G__17022,G__17023,G__17024,G__17025,G__17026,G__17027,G__17028,G__17029,G__17030,G__17031,G__17032,G__17033,G__17034,G__17035,G__17036,G__17037,G__17038) : self__.dispatch_fn.call(null,G__17020,G__17021,G__17022,G__17023,G__17024,G__17025,G__17026,G__17027,G__17028,G__17029,G__17030,G__17031,G__17032,G__17033,G__17034,G__17035,G__17036,G__17037,G__17038));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17039 = a;
var G__17040 = b;
var G__17041 = c;
var G__17042 = d;
var G__17043 = e;
var G__17044 = f;
var G__17045 = g;
var G__17046 = h;
var G__17047 = i;
var G__17048 = j;
var G__17049 = k;
var G__17050 = l;
var G__17051 = m;
var G__17052 = n;
var G__17053 = o;
var G__17054 = p;
var G__17055 = q;
var G__17056 = r;
var G__17057 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17039,G__17040,G__17041,G__17042,G__17043,G__17044,G__17045,G__17046,G__17047,G__17048,G__17049,G__17050,G__17051,G__17052,G__17053,G__17054,G__17055,G__17056,G__17057) : target_fn.call(null,G__17039,G__17040,G__17041,G__17042,G__17043,G__17044,G__17045,G__17046,G__17047,G__17048,G__17049,G__17050,G__17051,G__17052,G__17053,G__17054,G__17055,G__17056,G__17057));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17058 = a;
var G__17059 = b;
var G__17060 = c;
var G__17061 = d;
var G__17062 = e;
var G__17063 = f;
var G__17064 = g;
var G__17065 = h;
var G__17066 = i;
var G__17067 = j;
var G__17068 = k;
var G__17069 = l;
var G__17070 = m;
var G__17071 = n;
var G__17072 = o;
var G__17073 = p;
var G__17074 = q;
var G__17075 = r;
var G__17076 = s;
var G__17077 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17058,G__17059,G__17060,G__17061,G__17062,G__17063,G__17064,G__17065,G__17066,G__17067,G__17068,G__17069,G__17070,G__17071,G__17072,G__17073,G__17074,G__17075,G__17076,G__17077) : self__.dispatch_fn.call(null,G__17058,G__17059,G__17060,G__17061,G__17062,G__17063,G__17064,G__17065,G__17066,G__17067,G__17068,G__17069,G__17070,G__17071,G__17072,G__17073,G__17074,G__17075,G__17076,G__17077));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17078 = a;
var G__17079 = b;
var G__17080 = c;
var G__17081 = d;
var G__17082 = e;
var G__17083 = f;
var G__17084 = g;
var G__17085 = h;
var G__17086 = i;
var G__17087 = j;
var G__17088 = k;
var G__17089 = l;
var G__17090 = m;
var G__17091 = n;
var G__17092 = o;
var G__17093 = p;
var G__17094 = q;
var G__17095 = r;
var G__17096 = s;
var G__17097 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17078,G__17079,G__17080,G__17081,G__17082,G__17083,G__17084,G__17085,G__17086,G__17087,G__17088,G__17089,G__17090,G__17091,G__17092,G__17093,G__17094,G__17095,G__17096,G__17097) : target_fn.call(null,G__17078,G__17079,G__17080,G__17081,G__17082,G__17083,G__17084,G__17085,G__17086,G__17087,G__17088,G__17089,G__17090,G__17091,G__17092,G__17093,G__17094,G__17095,G__17096,G__17097));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17099 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__17099);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4169__auto__,writer__4170__auto__,opt__4171__auto__){
return cljs.core._write(writer__4170__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__17104 = msg;
return Error(G__17104);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__17109 = x;
var G__17110 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17109,G__17110) : pred.call(null,G__17109,G__17110));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__17111 = y;
var G__17112 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17111,G__17112) : pred.call(null,G__17111,G__17112));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$20;
} else {
return cljs.core.constant$keyword$21;
}
});
